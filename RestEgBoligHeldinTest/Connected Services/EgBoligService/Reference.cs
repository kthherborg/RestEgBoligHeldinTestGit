//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestEgBoligHeldinTest.EgBoligService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenancyInspectionRoom", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class TenancyInspectionRoom : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] DamageReportsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TenancyInspectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] DamageReports {
            get {
                return this.DamageReportsField;
            }
            set {
                if ((object.ReferenceEquals(this.DamageReportsField, value) != true)) {
                    this.DamageReportsField = value;
                    this.RaisePropertyChanged("DamageReports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TenancyInspectionId {
            get {
                return this.TenancyInspectionIdField;
            }
            set {
                if ((this.TenancyInspectionIdField.Equals(value) != true)) {
                    this.TenancyInspectionIdField = value;
                    this.RaisePropertyChanged("TenancyInspectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescription {
            get {
                return this.TypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptionField, value) != true)) {
                    this.TypeDescriptionField = value;
                    this.RaisePropertyChanged("TypeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenancyInspectionDamageReport", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class TenancyInspectionDamageReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionByTenantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastEditedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastEditedByTenantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepairDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TenancyInspectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyInspectionRoomTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> ToBeRepairedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TreatmentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionByTenant {
            get {
                return this.DescriptionByTenantField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionByTenantField, value) != true)) {
                    this.DescriptionByTenantField = value;
                    this.RaisePropertyChanged("DescriptionByTenant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastEdited {
            get {
                return this.LastEditedField;
            }
            set {
                if ((this.LastEditedField.Equals(value) != true)) {
                    this.LastEditedField = value;
                    this.RaisePropertyChanged("LastEdited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastEditedByTenant {
            get {
                return this.LastEditedByTenantField;
            }
            set {
                if ((this.LastEditedByTenantField.Equals(value) != true)) {
                    this.LastEditedByTenantField = value;
                    this.RaisePropertyChanged("LastEditedByTenant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RepairDetails {
            get {
                return this.RepairDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.RepairDetailsField, value) != true)) {
                    this.RepairDetailsField = value;
                    this.RaisePropertyChanged("RepairDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TenancyInspectionId {
            get {
                return this.TenancyInspectionIdField;
            }
            set {
                if ((this.TenancyInspectionIdField.Equals(value) != true)) {
                    this.TenancyInspectionIdField = value;
                    this.RaisePropertyChanged("TenancyInspectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyInspectionRoomType {
            get {
                return this.TenancyInspectionRoomTypeField;
            }
            set {
                if ((this.TenancyInspectionRoomTypeField.Equals(value) != true)) {
                    this.TenancyInspectionRoomTypeField = value;
                    this.RaisePropertyChanged("TenancyInspectionRoomType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> ToBeRepaired {
            get {
                return this.ToBeRepairedField;
            }
            set {
                if ((this.ToBeRepairedField.Equals(value) != true)) {
                    this.ToBeRepairedField = value;
                    this.RaisePropertyChanged("ToBeRepaired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TreatmentId {
            get {
                return this.TreatmentIdField;
            }
            set {
                if ((this.TreatmentIdField.Equals(value) != true)) {
                    this.TreatmentIdField = value;
                    this.RaisePropertyChanged("TreatmentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenancyInspectionPicture", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class TenancyInspectionPicture : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BigPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SmallPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TenancyInspectionDamageReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TenancyInspectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TenancyInspectionRoomTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] BigPicture {
            get {
                return this.BigPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.BigPictureField, value) != true)) {
                    this.BigPictureField = value;
                    this.RaisePropertyChanged("BigPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SmallPicture {
            get {
                return this.SmallPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.SmallPictureField, value) != true)) {
                    this.SmallPictureField = value;
                    this.RaisePropertyChanged("SmallPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TenancyInspectionDamageReportId {
            get {
                return this.TenancyInspectionDamageReportIdField;
            }
            set {
                if ((this.TenancyInspectionDamageReportIdField.Equals(value) != true)) {
                    this.TenancyInspectionDamageReportIdField = value;
                    this.RaisePropertyChanged("TenancyInspectionDamageReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TenancyInspectionId {
            get {
                return this.TenancyInspectionIdField;
            }
            set {
                if ((this.TenancyInspectionIdField.Equals(value) != true)) {
                    this.TenancyInspectionIdField = value;
                    this.RaisePropertyChanged("TenancyInspectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TenancyInspectionRoomType {
            get {
                return this.TenancyInspectionRoomTypeField;
            }
            set {
                if ((this.TenancyInspectionRoomTypeField.Equals(value) != true)) {
                    this.TenancyInspectionRoomTypeField = value;
                    this.RaisePropertyChanged("TenancyInspectionRoomType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenancyInspection", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class TenancyInspection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InspectionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspectionTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReportingEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.TenancyInspectionRoom[] RoomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenantNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InspectionDate {
            get {
                return this.InspectionDateField;
            }
            set {
                if ((this.InspectionDateField.Equals(value) != true)) {
                    this.InspectionDateField = value;
                    this.RaisePropertyChanged("InspectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspectionTime {
            get {
                return this.InspectionTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.InspectionTimeField, value) != true)) {
                    this.InspectionTimeField = value;
                    this.RaisePropertyChanged("InspectionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReportingEnd {
            get {
                return this.ReportingEndField;
            }
            set {
                if ((this.ReportingEndField.Equals(value) != true)) {
                    this.ReportingEndField = value;
                    this.RaisePropertyChanged("ReportingEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.TenancyInspectionRoom[] Rooms {
            get {
                return this.RoomsField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomsField, value) != true)) {
                    this.RoomsField = value;
                    this.RaisePropertyChanged("Rooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyNo {
            get {
                return this.TenancyNoField;
            }
            set {
                if ((this.TenancyNoField.Equals(value) != true)) {
                    this.TenancyNoField = value;
                    this.RaisePropertyChanged("TenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenantNo {
            get {
                return this.TenantNoField;
            }
            set {
                if ((this.TenantNoField.Equals(value) != true)) {
                    this.TenantNoField = value;
                    this.RaisePropertyChanged("TenantNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenancyInspectionTreatment", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class TenancyInspectionTreatment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GOBoligDocumentInfo", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class GOBoligDocumentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GOBoligNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryText {
            get {
                return this.CategoryTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryTextField, value) != true)) {
                    this.CategoryTextField = value;
                    this.RaisePropertyChanged("CategoryText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GOBoligNo {
            get {
                return this.GOBoligNoField;
            }
            set {
                if ((this.GOBoligNoField.Equals(value) != true)) {
                    this.GOBoligNoField = value;
                    this.RaisePropertyChanged("GOBoligNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CrossworkCategory", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class CrossworkCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CategoryNo1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CategoryNo2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CategoryNo1 {
            get {
                return this.CategoryNo1Field;
            }
            set {
                if ((this.CategoryNo1Field.Equals(value) != true)) {
                    this.CategoryNo1Field = value;
                    this.RaisePropertyChanged("CategoryNo1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CategoryNo2 {
            get {
                return this.CategoryNo2Field;
            }
            set {
                if ((this.CategoryNo2Field.Equals(value) != true)) {
                    this.CategoryNo2Field = value;
                    this.RaisePropertyChanged("CategoryNo2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CrossworkDocumentInfo", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class CrossworkDocumentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo.TableReference[] ReferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryText {
            get {
                return this.CategoryTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryTextField, value) != true)) {
                    this.CategoryTextField = value;
                    this.RaisePropertyChanged("CategoryText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo.TableReference[] References {
            get {
                return this.ReferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferencesField, value) != true)) {
                    this.ReferencesField = value;
                    this.RaisePropertyChanged("References");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="CrossworkDocumentInfo.TableReference", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct TableReference : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Guid IdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short TypeField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Guid Id {
                get {
                    return this.IdField;
                }
                set {
                    if ((this.IdField.Equals(value) != true)) {
                        this.IdField = value;
                        this.RaisePropertyChanged("Id");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short Type {
                get {
                    return this.TypeField;
                }
                set {
                    if ((this.TypeField.Equals(value) != true)) {
                        this.TypeField = value;
                        this.RaisePropertyChanged("Type");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMUser", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InteressentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FMUserRight[] RightsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FMUserRole[] RolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InteressentNo {
            get {
                return this.InteressentNoField;
            }
            set {
                if ((this.InteressentNoField.Equals(value) != true)) {
                    this.InteressentNoField = value;
                    this.RaisePropertyChanged("InteressentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCodeCity {
            get {
                return this.PostalCodeCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeCityField, value) != true)) {
                    this.PostalCodeCityField = value;
                    this.RaisePropertyChanged("PostalCodeCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FMUserRight[] Rights {
            get {
                return this.RightsField;
            }
            set {
                if ((object.ReferenceEquals(this.RightsField, value) != true)) {
                    this.RightsField = value;
                    this.RaisePropertyChanged("Rights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FMUserRole[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMUserRight", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMUserRight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AccountNoMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AccountNoMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoMinField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AccountNoMax {
            get {
                return this.AccountNoMaxField;
            }
            set {
                if ((this.AccountNoMaxField.Equals(value) != true)) {
                    this.AccountNoMaxField = value;
                    this.RaisePropertyChanged("AccountNoMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AccountNoMin {
            get {
                return this.AccountNoMinField;
            }
            set {
                if ((this.AccountNoMinField.Equals(value) != true)) {
                    this.AccountNoMinField = value;
                    this.RaisePropertyChanged("AccountNoMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNoMax {
            get {
                return this.CompanyNoMaxField;
            }
            set {
                if ((this.CompanyNoMaxField.Equals(value) != true)) {
                    this.CompanyNoMaxField = value;
                    this.RaisePropertyChanged("CompanyNoMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNoMin {
            get {
                return this.CompanyNoMinField;
            }
            set {
                if ((this.CompanyNoMinField.Equals(value) != true)) {
                    this.CompanyNoMinField = value;
                    this.RaisePropertyChanged("CompanyNoMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNoMax {
            get {
                return this.DepartmentNoMaxField;
            }
            set {
                if ((this.DepartmentNoMaxField.Equals(value) != true)) {
                    this.DepartmentNoMaxField = value;
                    this.RaisePropertyChanged("DepartmentNoMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNoMin {
            get {
                return this.DepartmentNoMinField;
            }
            set {
                if ((this.DepartmentNoMinField.Equals(value) != true)) {
                    this.DepartmentNoMinField = value;
                    this.RaisePropertyChanged("DepartmentNoMin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMUserRole", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMUserRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoletypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Roletype {
            get {
                return this.RoletypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoletypeField, value) != true)) {
                    this.RoletypeField = value;
                    this.RaisePropertyChanged("Roletype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMCompany", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMCompany : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMDepartment", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMDepartment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FMDepartmentAddress[] AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BudgetStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FMDepartmentAddress[] Addresses {
            get {
                return this.AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesField, value) != true)) {
                    this.AddressesField = value;
                    this.RaisePropertyChanged("Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BudgetStartDate {
            get {
                return this.BudgetStartDateField;
            }
            set {
                if ((this.BudgetStartDateField.Equals(value) != true)) {
                    this.BudgetStartDateField = value;
                    this.RaisePropertyChanged("BudgetStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCity {
            get {
                return this.ZipCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCityField, value) != true)) {
                    this.ZipCityField = value;
                    this.RaisePropertyChanged("ZipCity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMDepartmentAddress", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMDepartmentAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCity {
            get {
                return this.ZipCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCityField, value) != true)) {
                    this.ZipCityField = value;
                    this.RaisePropertyChanged("ZipCity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMBuilding", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMBuilding : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BBRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte BuildSectionNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuildingNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUsedForAllocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> MunicipalityNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BBRNo {
            get {
                return this.BBRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.BBRNoField, value) != true)) {
                    this.BBRNoField = value;
                    this.RaisePropertyChanged("BBRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte BuildSectionNo {
            get {
                return this.BuildSectionNoField;
            }
            set {
                if ((this.BuildSectionNoField.Equals(value) != true)) {
                    this.BuildSectionNoField = value;
                    this.RaisePropertyChanged("BuildSectionNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuildingNo {
            get {
                return this.BuildingNoField;
            }
            set {
                if ((this.BuildingNoField.Equals(value) != true)) {
                    this.BuildingNoField = value;
                    this.RaisePropertyChanged("BuildingNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUsedForAllocation {
            get {
                return this.IsUsedForAllocationField;
            }
            set {
                if ((this.IsUsedForAllocationField.Equals(value) != true)) {
                    this.IsUsedForAllocationField = value;
                    this.RaisePropertyChanged("IsUsedForAllocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MunicipalityNo {
            get {
                return this.MunicipalityNoField;
            }
            set {
                if ((this.MunicipalityNoField.Equals(value) != true)) {
                    this.MunicipalityNoField = value;
                    this.RaisePropertyChanged("MunicipalityNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyNo {
            get {
                return this.PropertyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNoField, value) != true)) {
                    this.PropertyNoField = value;
                    this.RaisePropertyChanged("PropertyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCity {
            get {
                return this.ZipCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCityField, value) != true)) {
                    this.ZipCityField = value;
                    this.RaisePropertyChanged("ZipCity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMTenancy", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMTenancy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApartmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte BuildSectionNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RoomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenancyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApartmentType {
            get {
                return this.ApartmentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ApartmentTypeField, value) != true)) {
                    this.ApartmentTypeField = value;
                    this.RaisePropertyChanged("ApartmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte BuildSectionNo {
            get {
                return this.BuildSectionNoField;
            }
            set {
                if ((this.BuildSectionNoField.Equals(value) != true)) {
                    this.BuildSectionNoField = value;
                    this.RaisePropertyChanged("BuildSectionNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Rooms {
            get {
                return this.RoomsField;
            }
            set {
                if ((this.RoomsField.Equals(value) != true)) {
                    this.RoomsField = value;
                    this.RaisePropertyChanged("Rooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyNo {
            get {
                return this.TenancyNoField;
            }
            set {
                if ((this.TenancyNoField.Equals(value) != true)) {
                    this.TenancyNoField = value;
                    this.RaisePropertyChanged("TenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenancyType {
            get {
                return this.TenancyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TenancyTypeField, value) != true)) {
                    this.TenancyTypeField = value;
                    this.RaisePropertyChanged("TenancyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCity {
            get {
                return this.ZipCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCityField, value) != true)) {
                    this.ZipCityField = value;
                    this.RaisePropertyChanged("ZipCity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMTenant", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMTenant : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InteressentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TenantNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InteressentNo {
            get {
                return this.InteressentNoField;
            }
            set {
                if ((this.InteressentNoField.Equals(value) != true)) {
                    this.InteressentNoField = value;
                    this.RaisePropertyChanged("InteressentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCodeCity {
            get {
                return this.PostalCodeCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeCityField, value) != true)) {
                    this.PostalCodeCityField = value;
                    this.RaisePropertyChanged("PostalCodeCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyNo {
            get {
                return this.TenancyNoField;
            }
            set {
                if ((this.TenancyNoField.Equals(value) != true)) {
                    this.TenancyNoField = value;
                    this.RaisePropertyChanged("TenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TenantNo {
            get {
                return this.TenantNoField;
            }
            set {
                if ((this.TenantNoField.Equals(value) != true)) {
                    this.TenantNoField = value;
                    this.RaisePropertyChanged("TenantNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMCreditor", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMCreditor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CreditorNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CvrNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ProfessionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CreditorNo {
            get {
                return this.CreditorNoField;
            }
            set {
                if ((this.CreditorNoField.Equals(value) != true)) {
                    this.CreditorNoField = value;
                    this.RaisePropertyChanged("CreditorNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CvrNo {
            get {
                return this.CvrNoField;
            }
            set {
                if ((this.CvrNoField.Equals(value) != true)) {
                    this.CvrNoField = value;
                    this.RaisePropertyChanged("CvrNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCodeCity {
            get {
                return this.PostalCodeCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeCityField, value) != true)) {
                    this.PostalCodeCityField = value;
                    this.RaisePropertyChanged("PostalCodeCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Professions {
            get {
                return this.ProfessionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionsField, value) != true)) {
                    this.ProfessionsField = value;
                    this.RaisePropertyChanged("Professions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMAccount", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AccountNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AccountNo {
            get {
                return this.AccountNoField;
            }
            set {
                if ((this.AccountNoField.Equals(value) != true)) {
                    this.AccountNoField = value;
                    this.RaisePropertyChanged("AccountNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMAllocationKey", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMAllocationKey : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FMAllocationKey.AllocationPart[] PartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FMAllocationKey.AllocationPart[] Parts {
            get {
                return this.PartsField;
            }
            set {
                if ((object.ReferenceEquals(this.PartsField, value) != true)) {
                    this.PartsField = value;
                    this.RaisePropertyChanged("Parts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="FMAllocationKey.AllocationPart", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct AllocationPart : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int CompanyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int DepartmentNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal ShareField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int CompanyNo {
                get {
                    return this.CompanyNoField;
                }
                set {
                    if ((this.CompanyNoField.Equals(value) != true)) {
                        this.CompanyNoField = value;
                        this.RaisePropertyChanged("CompanyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int DepartmentNo {
                get {
                    return this.DepartmentNoField;
                }
                set {
                    if ((this.DepartmentNoField.Equals(value) != true)) {
                        this.DepartmentNoField = value;
                        this.RaisePropertyChanged("DepartmentNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal Share {
                get {
                    return this.ShareField;
                }
                set {
                    if ((this.ShareField.Equals(value) != true)) {
                        this.ShareField = value;
                        this.RaisePropertyChanged("Share");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMRequisition", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMRequisition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountingTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ActivityNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllocationKeyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> BuildSectionNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CancelledByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CancelledDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompletedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CreditorNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EstimatedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagementClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequisitionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequisitionNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequisitionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> TenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenantNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AccountNo {
            get {
                return this.AccountNoField;
            }
            set {
                if ((this.AccountNoField.Equals(value) != true)) {
                    this.AccountNoField = value;
                    this.RaisePropertyChanged("AccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountingText {
            get {
                return this.AccountingTextField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountingTextField, value) != true)) {
                    this.AccountingTextField = value;
                    this.RaisePropertyChanged("AccountingText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ActivityNo {
            get {
                return this.ActivityNoField;
            }
            set {
                if ((this.ActivityNoField.Equals(value) != true)) {
                    this.ActivityNoField = value;
                    this.RaisePropertyChanged("ActivityNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AllocationKeyId {
            get {
                return this.AllocationKeyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AllocationKeyIdField, value) != true)) {
                    this.AllocationKeyIdField = value;
                    this.RaisePropertyChanged("AllocationKeyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> BuildSectionNo {
            get {
                return this.BuildSectionNoField;
            }
            set {
                if ((this.BuildSectionNoField.Equals(value) != true)) {
                    this.BuildSectionNoField = value;
                    this.RaisePropertyChanged("BuildSectionNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CancelledBy {
            get {
                return this.CancelledByField;
            }
            set {
                if ((object.ReferenceEquals(this.CancelledByField, value) != true)) {
                    this.CancelledByField = value;
                    this.RaisePropertyChanged("CancelledBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CancelledDate {
            get {
                return this.CancelledDateField;
            }
            set {
                if ((this.CancelledDateField.Equals(value) != true)) {
                    this.CancelledDateField = value;
                    this.RaisePropertyChanged("CancelledDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompletedBy {
            get {
                return this.CompletedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CompletedByField, value) != true)) {
                    this.CompletedByField = value;
                    this.RaisePropertyChanged("CompletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletedDate {
            get {
                return this.CompletedDateField;
            }
            set {
                if ((this.CompletedDateField.Equals(value) != true)) {
                    this.CompletedDateField = value;
                    this.RaisePropertyChanged("CompletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CreditorNo {
            get {
                return this.CreditorNoField;
            }
            set {
                if ((this.CreditorNoField.Equals(value) != true)) {
                    this.CreditorNoField = value;
                    this.RaisePropertyChanged("CreditorNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EstimatedAmount {
            get {
                return this.EstimatedAmountField;
            }
            set {
                if ((this.EstimatedAmountField.Equals(value) != true)) {
                    this.EstimatedAmountField = value;
                    this.RaisePropertyChanged("EstimatedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagementClassification {
            get {
                return this.ManagementClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagementClassificationField, value) != true)) {
                    this.ManagementClassificationField = value;
                    this.RaisePropertyChanged("ManagementClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequisitionDate {
            get {
                return this.RequisitionDateField;
            }
            set {
                if ((this.RequisitionDateField.Equals(value) != true)) {
                    this.RequisitionDateField = value;
                    this.RaisePropertyChanged("RequisitionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequisitionNo {
            get {
                return this.RequisitionNoField;
            }
            set {
                if ((this.RequisitionNoField.Equals(value) != true)) {
                    this.RequisitionNoField = value;
                    this.RaisePropertyChanged("RequisitionNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequisitionType {
            get {
                return this.RequisitionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RequisitionTypeField, value) != true)) {
                    this.RequisitionTypeField = value;
                    this.RaisePropertyChanged("RequisitionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SentDate {
            get {
                return this.SentDateField;
            }
            set {
                if ((this.SentDateField.Equals(value) != true)) {
                    this.SentDateField = value;
                    this.RaisePropertyChanged("SentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> TenancyNo {
            get {
                return this.TenancyNoField;
            }
            set {
                if ((this.TenancyNoField.Equals(value) != true)) {
                    this.TenancyNoField = value;
                    this.RaisePropertyChanged("TenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenantNo {
            get {
                return this.TenantNoField;
            }
            set {
                if ((this.TenantNoField.Equals(value) != true)) {
                    this.TenantNoField = value;
                    this.RaisePropertyChanged("TenantNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkDescription {
            get {
                return this.WorkDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkDescriptionField, value) != true)) {
                    this.WorkDescriptionField = value;
                    this.RaisePropertyChanged("WorkDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMInvoice", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMInvoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CreditorNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[][] FileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PostingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CreditorNo {
            get {
                return this.CreditorNoField;
            }
            set {
                if ((this.CreditorNoField.Equals(value) != true)) {
                    this.CreditorNoField = value;
                    this.RaisePropertyChanged("CreditorNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[][] FileData {
            get {
                return this.FileDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDataField, value) != true)) {
                    this.FileDataField = value;
                    this.RaisePropertyChanged("FileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceId {
            get {
                return this.InvoiceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceIdField, value) != true)) {
                    this.InvoiceIdField = value;
                    this.RaisePropertyChanged("InvoiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PostingDate {
            get {
                return this.PostingDateField;
            }
            set {
                if ((this.PostingDateField.Equals(value) != true)) {
                    this.PostingDateField = value;
                    this.RaisePropertyChanged("PostingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMBudget", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMBudget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte NumberOfYearsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FMBudgetTask[] TasksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte NumberOfYears {
            get {
                return this.NumberOfYearsField;
            }
            set {
                if ((this.NumberOfYearsField.Equals(value) != true)) {
                    this.NumberOfYearsField = value;
                    this.RaisePropertyChanged("NumberOfYears");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FMBudgetTask[] Tasks {
            get {
                return this.TasksField;
            }
            set {
                if ((object.ReferenceEquals(this.TasksField, value) != true)) {
                    this.TasksField = value;
                    this.RaisePropertyChanged("Tasks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMBudgetTask", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMBudgetTask : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllocationKeyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FMBudgetTaskAmount[] AmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte BuildSectionNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MaintenancePctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagementClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReserveStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AccountNo {
            get {
                return this.AccountNoField;
            }
            set {
                if ((this.AccountNoField.Equals(value) != true)) {
                    this.AccountNoField = value;
                    this.RaisePropertyChanged("AccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AllocationKeyId {
            get {
                return this.AllocationKeyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AllocationKeyIdField, value) != true)) {
                    this.AllocationKeyIdField = value;
                    this.RaisePropertyChanged("AllocationKeyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FMBudgetTaskAmount[] Amounts {
            get {
                return this.AmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountsField, value) != true)) {
                    this.AmountsField = value;
                    this.RaisePropertyChanged("Amounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte BuildSectionNo {
            get {
                return this.BuildSectionNoField;
            }
            set {
                if ((this.BuildSectionNoField.Equals(value) != true)) {
                    this.BuildSectionNoField = value;
                    this.RaisePropertyChanged("BuildSectionNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MaintenancePct {
            get {
                return this.MaintenancePctField;
            }
            set {
                if ((this.MaintenancePctField.Equals(value) != true)) {
                    this.MaintenancePctField = value;
                    this.RaisePropertyChanged("MaintenancePct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagementClassification {
            get {
                return this.ManagementClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagementClassificationField, value) != true)) {
                    this.ManagementClassificationField = value;
                    this.RaisePropertyChanged("ManagementClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReserveStartDate {
            get {
                return this.ReserveStartDateField;
            }
            set {
                if ((this.ReserveStartDateField.Equals(value) != true)) {
                    this.ReserveStartDateField = value;
                    this.RaisePropertyChanged("ReserveStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemName {
            get {
                return this.SystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemNameField, value) != true)) {
                    this.SystemNameField = value;
                    this.RaisePropertyChanged("SystemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskName {
            get {
                return this.TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskNameField, value) != true)) {
                    this.TaskNameField = value;
                    this.RaisePropertyChanged("TaskName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMBudgetTaskAmount", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMBudgetTaskAmount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<RestEgBoligHeldinTest.EgBoligService.FMBudgetTaskAmount.Status> TaskStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<RestEgBoligHeldinTest.EgBoligService.FMBudgetTaskAmount.Status> TaskStatus {
            get {
                return this.TaskStatusField;
            }
            set {
                if ((this.TaskStatusField.Equals(value) != true)) {
                    this.TaskStatusField = value;
                    this.RaisePropertyChanged("TaskStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="FMBudgetTaskAmount.Status", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum Status : byte {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Estimated = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Clarification = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Open = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Rejected = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Reopened = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Active = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Standby = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Complete = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Ignore = 8,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = 255,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMBudgetChange", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMBudgetChange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FMBudgetChange.Status BudgetStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BudgetVersionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ChangedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedInitialsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FMBudgetChange.Status BudgetStatus {
            get {
                return this.BudgetStatusField;
            }
            set {
                if ((this.BudgetStatusField.Equals(value) != true)) {
                    this.BudgetStatusField = value;
                    this.RaisePropertyChanged("BudgetStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BudgetVersionId {
            get {
                return this.BudgetVersionIdField;
            }
            set {
                if ((this.BudgetVersionIdField.Equals(value) != true)) {
                    this.BudgetVersionIdField = value;
                    this.RaisePropertyChanged("BudgetVersionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ChangedDate {
            get {
                return this.ChangedDateField;
            }
            set {
                if ((this.ChangedDateField.Equals(value) != true)) {
                    this.ChangedDateField = value;
                    this.RaisePropertyChanged("ChangedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedInitials {
            get {
                return this.ChangedInitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedInitialsField, value) != true)) {
                    this.ChangedInitialsField = value;
                    this.RaisePropertyChanged("ChangedInitials");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="FMBudgetChange.Status", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum Status : byte {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Draft = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Deleted = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Approved = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = 255,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMTenantServiceTask", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMTenantServiceTask : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContactByEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContactBySmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ExternalTaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask.TenantServiceFile[] FilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InteressentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagementClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponsibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask.Status TaskStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TenantNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TenantServiceTaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContactByEmail {
            get {
                return this.ContactByEmailField;
            }
            set {
                if ((this.ContactByEmailField.Equals(value) != true)) {
                    this.ContactByEmailField = value;
                    this.RaisePropertyChanged("ContactByEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContactBySms {
            get {
                return this.ContactBySmsField;
            }
            set {
                if ((this.ContactBySmsField.Equals(value) != true)) {
                    this.ContactBySmsField = value;
                    this.RaisePropertyChanged("ContactBySms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactInfo {
            get {
                return this.ContactInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactInfoField, value) != true)) {
                    this.ContactInfoField = value;
                    this.RaisePropertyChanged("ContactInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ExternalTaskId {
            get {
                return this.ExternalTaskIdField;
            }
            set {
                if ((this.ExternalTaskIdField.Equals(value) != true)) {
                    this.ExternalTaskIdField = value;
                    this.RaisePropertyChanged("ExternalTaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask.TenantServiceFile[] Files {
            get {
                return this.FilesField;
            }
            set {
                if ((object.ReferenceEquals(this.FilesField, value) != true)) {
                    this.FilesField = value;
                    this.RaisePropertyChanged("Files");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InteressentNo {
            get {
                return this.InteressentNoField;
            }
            set {
                if ((this.InteressentNoField.Equals(value) != true)) {
                    this.InteressentNoField = value;
                    this.RaisePropertyChanged("InteressentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalNote {
            get {
                return this.InternalNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalNoteField, value) != true)) {
                    this.InternalNoteField = value;
                    this.RaisePropertyChanged("InternalNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagementClassification {
            get {
                return this.ManagementClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagementClassificationField, value) != true)) {
                    this.ManagementClassificationField = value;
                    this.RaisePropertyChanged("ManagementClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Responsible {
            get {
                return this.ResponsibleField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsibleField, value) != true)) {
                    this.ResponsibleField = value;
                    this.RaisePropertyChanged("Responsible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemGroup {
            get {
                return this.SystemGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemGroupField, value) != true)) {
                    this.SystemGroupField = value;
                    this.RaisePropertyChanged("SystemGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask.Status TaskStatus {
            get {
                return this.TaskStatusField;
            }
            set {
                if ((this.TaskStatusField.Equals(value) != true)) {
                    this.TaskStatusField = value;
                    this.RaisePropertyChanged("TaskStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyNo {
            get {
                return this.TenancyNoField;
            }
            set {
                if ((this.TenancyNoField.Equals(value) != true)) {
                    this.TenancyNoField = value;
                    this.RaisePropertyChanged("TenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TenantNo {
            get {
                return this.TenantNoField;
            }
            set {
                if ((this.TenantNoField.Equals(value) != true)) {
                    this.TenantNoField = value;
                    this.RaisePropertyChanged("TenantNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TenantServiceTaskId {
            get {
                return this.TenantServiceTaskIdField;
            }
            set {
                if ((this.TenantServiceTaskIdField.Equals(value) != true)) {
                    this.TenantServiceTaskIdField = value;
                    this.RaisePropertyChanged("TenantServiceTaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="FMTenantServiceTask.TenantServiceFile", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial class TenantServiceFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte[] FileDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.DateTime FileDateField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string FileNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Guid TenantServiceFileIdField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte[] FileData {
                get {
                    return this.FileDataField;
                }
                set {
                    if ((object.ReferenceEquals(this.FileDataField, value) != true)) {
                        this.FileDataField = value;
                        this.RaisePropertyChanged("FileData");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DateTime FileDate {
                get {
                    return this.FileDateField;
                }
                set {
                    if ((this.FileDateField.Equals(value) != true)) {
                        this.FileDateField = value;
                        this.RaisePropertyChanged("FileDate");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string FileName {
                get {
                    return this.FileNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                        this.FileNameField = value;
                        this.RaisePropertyChanged("FileName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Guid TenantServiceFileId {
                get {
                    return this.TenantServiceFileIdField;
                }
                set {
                    if ((this.TenantServiceFileIdField.Equals(value) != true)) {
                        this.TenantServiceFileIdField = value;
                        this.RaisePropertyChanged("TenantServiceFileId");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="FMTenantServiceTask.Status", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum Status : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            New = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Clarification = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Open = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Rejected = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Reopened = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Active = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Standby = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Complete = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Ignore = 8,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FMIdentityChange", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FMIdentityChange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> NewBuildSectionNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short NewCompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> NewDepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> NewTenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> OldBuildSectionNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short OldCompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> OldDepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> OldTenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FMIdentityChange.ChangeType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> NewBuildSectionNo {
            get {
                return this.NewBuildSectionNoField;
            }
            set {
                if ((this.NewBuildSectionNoField.Equals(value) != true)) {
                    this.NewBuildSectionNoField = value;
                    this.RaisePropertyChanged("NewBuildSectionNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short NewCompanyNo {
            get {
                return this.NewCompanyNoField;
            }
            set {
                if ((this.NewCompanyNoField.Equals(value) != true)) {
                    this.NewCompanyNoField = value;
                    this.RaisePropertyChanged("NewCompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> NewDepartmentNo {
            get {
                return this.NewDepartmentNoField;
            }
            set {
                if ((this.NewDepartmentNoField.Equals(value) != true)) {
                    this.NewDepartmentNoField = value;
                    this.RaisePropertyChanged("NewDepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> NewTenancyNo {
            get {
                return this.NewTenancyNoField;
            }
            set {
                if ((this.NewTenancyNoField.Equals(value) != true)) {
                    this.NewTenancyNoField = value;
                    this.RaisePropertyChanged("NewTenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> OldBuildSectionNo {
            get {
                return this.OldBuildSectionNoField;
            }
            set {
                if ((this.OldBuildSectionNoField.Equals(value) != true)) {
                    this.OldBuildSectionNoField = value;
                    this.RaisePropertyChanged("OldBuildSectionNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short OldCompanyNo {
            get {
                return this.OldCompanyNoField;
            }
            set {
                if ((this.OldCompanyNoField.Equals(value) != true)) {
                    this.OldCompanyNoField = value;
                    this.RaisePropertyChanged("OldCompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> OldDepartmentNo {
            get {
                return this.OldDepartmentNoField;
            }
            set {
                if ((this.OldDepartmentNoField.Equals(value) != true)) {
                    this.OldDepartmentNoField = value;
                    this.RaisePropertyChanged("OldDepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> OldTenancyNo {
            get {
                return this.OldTenancyNoField;
            }
            set {
                if ((this.OldTenancyNoField.Equals(value) != true)) {
                    this.OldTenancyNoField = value;
                    this.RaisePropertyChanged("OldTenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FMIdentityChange.ChangeType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="FMIdentityChange.ChangeType", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum ChangeType : byte {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Department = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BuildSection = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Tenancy = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = 255,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConsentDefinition", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class ConsentDefinition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.ConsentDefinition.FunctionType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.ConsentDefinition.FunctionType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ConsentDefinition.FunctionType", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum FunctionType : byte {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            MemberDocuments = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            TenantLease = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            OtherTenantDocuments = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CprNoForIdentification = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CprNoForNemKonto = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BoardMemberDocuments = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NonStandard = 255,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConsentReply", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class ConsentReply : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ConsentDefinitionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.ConsentReply.Reply EBoksReplyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.ConsentReply.Reply EmailReplyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.ConsentReply.Reply GeneralReplyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InteressentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.ConsentReply.Login LoginTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.ConsentReply.Reply SmsReplyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedFromField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ConsentDefinitionId {
            get {
                return this.ConsentDefinitionIdField;
            }
            set {
                if ((this.ConsentDefinitionIdField.Equals(value) != true)) {
                    this.ConsentDefinitionIdField = value;
                    this.RaisePropertyChanged("ConsentDefinitionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.ConsentReply.Reply EBoksReply {
            get {
                return this.EBoksReplyField;
            }
            set {
                if ((this.EBoksReplyField.Equals(value) != true)) {
                    this.EBoksReplyField = value;
                    this.RaisePropertyChanged("EBoksReply");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.ConsentReply.Reply EmailReply {
            get {
                return this.EmailReplyField;
            }
            set {
                if ((this.EmailReplyField.Equals(value) != true)) {
                    this.EmailReplyField = value;
                    this.RaisePropertyChanged("EmailReply");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.ConsentReply.Reply GeneralReply {
            get {
                return this.GeneralReplyField;
            }
            set {
                if ((this.GeneralReplyField.Equals(value) != true)) {
                    this.GeneralReplyField = value;
                    this.RaisePropertyChanged("GeneralReply");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InteressentNo {
            get {
                return this.InteressentNoField;
            }
            set {
                if ((this.InteressentNoField.Equals(value) != true)) {
                    this.InteressentNoField = value;
                    this.RaisePropertyChanged("InteressentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.ConsentReply.Login LoginType {
            get {
                return this.LoginTypeField;
            }
            set {
                if ((this.LoginTypeField.Equals(value) != true)) {
                    this.LoginTypeField = value;
                    this.RaisePropertyChanged("LoginType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.ConsentReply.Reply SmsReply {
            get {
                return this.SmsReplyField;
            }
            set {
                if ((this.SmsReplyField.Equals(value) != true)) {
                    this.SmsReplyField = value;
                    this.RaisePropertyChanged("SmsReply");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedFrom {
            get {
                return this.UpdatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedFromField, value) != true)) {
                    this.UpdatedFromField = value;
                    this.RaisePropertyChanged("UpdatedFrom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ConsentReply.Reply", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum Reply : byte {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NotApplicable = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unanswered = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Yes = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            No = 4,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ConsentReply.Login", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum Login : byte {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            EGBolig = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            InteressentNo = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NemId = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CprNo = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Email = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = 5,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MainRegion", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class MainRegion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationResult", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class ValidationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Succes {
            get {
                return this.SuccesField;
            }
            set {
                if ((this.SuccesField.Equals(value) != true)) {
                    this.SuccesField = value;
                    this.RaisePropertyChanged("Succes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LeaseTerminationStartInfo", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class LeaseTerminationStartInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo.Tenant MainTenantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo.Tenancy> NewMainTenantTenancyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo.Tenancy> NewPartnerTenantTenancyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo.Tenant> PartnerTenantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo.Tenancy PrimaryTenancyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo.Tenancy[] SecondaryTenanciesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo.Tenant MainTenant {
            get {
                return this.MainTenantField;
            }
            set {
                if ((this.MainTenantField.Equals(value) != true)) {
                    this.MainTenantField = value;
                    this.RaisePropertyChanged("MainTenant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo.Tenancy> NewMainTenantTenancy {
            get {
                return this.NewMainTenantTenancyField;
            }
            set {
                if ((this.NewMainTenantTenancyField.Equals(value) != true)) {
                    this.NewMainTenantTenancyField = value;
                    this.RaisePropertyChanged("NewMainTenantTenancy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo.Tenancy> NewPartnerTenantTenancy {
            get {
                return this.NewPartnerTenantTenancyField;
            }
            set {
                if ((this.NewPartnerTenantTenancyField.Equals(value) != true)) {
                    this.NewPartnerTenantTenancyField = value;
                    this.RaisePropertyChanged("NewPartnerTenantTenancy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo.Tenant> PartnerTenant {
            get {
                return this.PartnerTenantField;
            }
            set {
                if ((this.PartnerTenantField.Equals(value) != true)) {
                    this.PartnerTenantField = value;
                    this.RaisePropertyChanged("PartnerTenant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo.Tenancy PrimaryTenancy {
            get {
                return this.PrimaryTenancyField;
            }
            set {
                if ((this.PrimaryTenancyField.Equals(value) != true)) {
                    this.PrimaryTenancyField = value;
                    this.RaisePropertyChanged("PrimaryTenancy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo.Tenancy[] SecondaryTenancies {
            get {
                return this.SecondaryTenanciesField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryTenanciesField, value) != true)) {
                    this.SecondaryTenanciesField = value;
                    this.RaisePropertyChanged("SecondaryTenancies");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="LeaseTerminationStartInfo.Tenant", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct Tenant : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string AddressField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string CprNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int InteressentNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string NameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool SignedLeaseField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string ZipCityField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Address {
                get {
                    return this.AddressField;
                }
                set {
                    if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                        this.AddressField = value;
                        this.RaisePropertyChanged("Address");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string CprNo {
                get {
                    return this.CprNoField;
                }
                set {
                    if ((object.ReferenceEquals(this.CprNoField, value) != true)) {
                        this.CprNoField = value;
                        this.RaisePropertyChanged("CprNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int InteressentNo {
                get {
                    return this.InteressentNoField;
                }
                set {
                    if ((this.InteressentNoField.Equals(value) != true)) {
                        this.InteressentNoField = value;
                        this.RaisePropertyChanged("InteressentNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Name {
                get {
                    return this.NameField;
                }
                set {
                    if ((object.ReferenceEquals(this.NameField, value) != true)) {
                        this.NameField = value;
                        this.RaisePropertyChanged("Name");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool SignedLease {
                get {
                    return this.SignedLeaseField;
                }
                set {
                    if ((this.SignedLeaseField.Equals(value) != true)) {
                        this.SignedLeaseField = value;
                        this.RaisePropertyChanged("SignedLease");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string ZipCity {
                get {
                    return this.ZipCityField;
                }
                set {
                    if ((object.ReferenceEquals(this.ZipCityField, value) != true)) {
                        this.ZipCityField = value;
                        this.RaisePropertyChanged("ZipCity");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="LeaseTerminationStartInfo.Tenancy", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct Tenancy : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string AddressField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<int> ApartmentTypeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short CompanyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short DepartmentNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string LocationField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<System.DateTime> OccupationDateField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo.TerminationType> ReadyForTerminationField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short TenancyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<short> TenancyTypeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte TenantNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<int> WhichInteressentNoCanKeepTenancyField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string ZipCityField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Address {
                get {
                    return this.AddressField;
                }
                set {
                    if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                        this.AddressField = value;
                        this.RaisePropertyChanged("Address");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<int> ApartmentType {
                get {
                    return this.ApartmentTypeField;
                }
                set {
                    if ((this.ApartmentTypeField.Equals(value) != true)) {
                        this.ApartmentTypeField = value;
                        this.RaisePropertyChanged("ApartmentType");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short CompanyNo {
                get {
                    return this.CompanyNoField;
                }
                set {
                    if ((this.CompanyNoField.Equals(value) != true)) {
                        this.CompanyNoField = value;
                        this.RaisePropertyChanged("CompanyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short DepartmentNo {
                get {
                    return this.DepartmentNoField;
                }
                set {
                    if ((this.DepartmentNoField.Equals(value) != true)) {
                        this.DepartmentNoField = value;
                        this.RaisePropertyChanged("DepartmentNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Location {
                get {
                    return this.LocationField;
                }
                set {
                    if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                        this.LocationField = value;
                        this.RaisePropertyChanged("Location");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<System.DateTime> OccupationDate {
                get {
                    return this.OccupationDateField;
                }
                set {
                    if ((this.OccupationDateField.Equals(value) != true)) {
                        this.OccupationDateField = value;
                        this.RaisePropertyChanged("OccupationDate");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo.TerminationType> ReadyForTermination {
                get {
                    return this.ReadyForTerminationField;
                }
                set {
                    if ((this.ReadyForTerminationField.Equals(value) != true)) {
                        this.ReadyForTerminationField = value;
                        this.RaisePropertyChanged("ReadyForTermination");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short TenancyNo {
                get {
                    return this.TenancyNoField;
                }
                set {
                    if ((this.TenancyNoField.Equals(value) != true)) {
                        this.TenancyNoField = value;
                        this.RaisePropertyChanged("TenancyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<short> TenancyType {
                get {
                    return this.TenancyTypeField;
                }
                set {
                    if ((this.TenancyTypeField.Equals(value) != true)) {
                        this.TenancyTypeField = value;
                        this.RaisePropertyChanged("TenancyType");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte TenantNo {
                get {
                    return this.TenantNoField;
                }
                set {
                    if ((this.TenantNoField.Equals(value) != true)) {
                        this.TenantNoField = value;
                        this.RaisePropertyChanged("TenantNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<int> WhichInteressentNoCanKeepTenancy {
                get {
                    return this.WhichInteressentNoCanKeepTenancyField;
                }
                set {
                    if ((this.WhichInteressentNoCanKeepTenancyField.Equals(value) != true)) {
                        this.WhichInteressentNoCanKeepTenancyField = value;
                        this.RaisePropertyChanged("WhichInteressentNoCanKeepTenancy");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string ZipCity {
                get {
                    return this.ZipCityField;
                }
                set {
                    if ((object.ReferenceEquals(this.ZipCityField, value) != true)) {
                        this.ZipCityField = value;
                        this.RaisePropertyChanged("ZipCity");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="LeaseTerminationStartInfo.TerminationType", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum TerminationType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Ready = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            UnderTermination = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Rehousing = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Renovation = 3,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CprNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CprSerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeCityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoAddress {
            get {
                return this.CoAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CoAddressField, value) != true)) {
                    this.CoAddressField = value;
                    this.RaisePropertyChanged("CoAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CprNo {
            get {
                return this.CprNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CprNoField, value) != true)) {
                    this.CprNoField = value;
                    this.RaisePropertyChanged("CprNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CprSerialNo {
            get {
                return this.CprSerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CprSerialNoField, value) != true)) {
                    this.CprSerialNoField = value;
                    this.RaisePropertyChanged("CprSerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomePhone {
            get {
                return this.HomePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePhoneField, value) != true)) {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalCity {
            get {
                return this.LocalCityField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalCityField, value) != true)) {
                    this.LocalCityField = value;
                    this.RaisePropertyChanged("LocalCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCodeCity {
            get {
                return this.PostalCodeCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeCityField, value) != true)) {
                    this.PostalCodeCityField = value;
                    this.RaisePropertyChanged("PostalCodeCity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LeaseTermination", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class LeaseTermination : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.LeaseTermination.TenancyInspectionTime[] ChosenTenancyInspectionTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.LeaseTermination.KeyDates DatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTermination.MovingAddress> MainTenantMovingAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoreToTerminateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameOfPartnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTermination.MovingAddress> PartnerTenantMovingAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PresentAtTheTenancyInspectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresentationInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTermination.Tenancy> PrimaryTenancyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> RegNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.LeaseTermination.Tenancy[] SecondaryTenanciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TenantInteressentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserInteressentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] VacateReasonsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AccountNo {
            get {
                return this.AccountNoField;
            }
            set {
                if ((this.AccountNoField.Equals(value) != true)) {
                    this.AccountNoField = value;
                    this.RaisePropertyChanged("AccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.LeaseTermination.TenancyInspectionTime[] ChosenTenancyInspectionTimes {
            get {
                return this.ChosenTenancyInspectionTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChosenTenancyInspectionTimesField, value) != true)) {
                    this.ChosenTenancyInspectionTimesField = value;
                    this.RaisePropertyChanged("ChosenTenancyInspectionTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.LeaseTermination.KeyDates Dates {
            get {
                return this.DatesField;
            }
            set {
                if ((this.DatesField.Equals(value) != true)) {
                    this.DatesField = value;
                    this.RaisePropertyChanged("Dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTermination.MovingAddress> MainTenantMovingAddress {
            get {
                return this.MainTenantMovingAddressField;
            }
            set {
                if ((this.MainTenantMovingAddressField.Equals(value) != true)) {
                    this.MainTenantMovingAddressField = value;
                    this.RaisePropertyChanged("MainTenantMovingAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoreToTerminate {
            get {
                return this.MoreToTerminateField;
            }
            set {
                if ((object.ReferenceEquals(this.MoreToTerminateField, value) != true)) {
                    this.MoreToTerminateField = value;
                    this.RaisePropertyChanged("MoreToTerminate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameOfPartner {
            get {
                return this.NameOfPartnerField;
            }
            set {
                if ((object.ReferenceEquals(this.NameOfPartnerField, value) != true)) {
                    this.NameOfPartnerField = value;
                    this.RaisePropertyChanged("NameOfPartner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTermination.MovingAddress> PartnerTenantMovingAddress {
            get {
                return this.PartnerTenantMovingAddressField;
            }
            set {
                if ((this.PartnerTenantMovingAddressField.Equals(value) != true)) {
                    this.PartnerTenantMovingAddressField = value;
                    this.RaisePropertyChanged("PartnerTenantMovingAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PresentAtTheTenancyInspection {
            get {
                return this.PresentAtTheTenancyInspectionField;
            }
            set {
                if ((this.PresentAtTheTenancyInspectionField.Equals(value) != true)) {
                    this.PresentAtTheTenancyInspectionField = value;
                    this.RaisePropertyChanged("PresentAtTheTenancyInspection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresentationInfo {
            get {
                return this.PresentationInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoField, value) != true)) {
                    this.PresentationInfoField = value;
                    this.RaisePropertyChanged("PresentationInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTermination.Tenancy> PrimaryTenancy {
            get {
                return this.PrimaryTenancyField;
            }
            set {
                if ((this.PrimaryTenancyField.Equals(value) != true)) {
                    this.PrimaryTenancyField = value;
                    this.RaisePropertyChanged("PrimaryTenancy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> RegNo {
            get {
                return this.RegNoField;
            }
            set {
                if ((this.RegNoField.Equals(value) != true)) {
                    this.RegNoField = value;
                    this.RaisePropertyChanged("RegNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.LeaseTermination.Tenancy[] SecondaryTenancies {
            get {
                return this.SecondaryTenanciesField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryTenanciesField, value) != true)) {
                    this.SecondaryTenanciesField = value;
                    this.RaisePropertyChanged("SecondaryTenancies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TenantInteressentNo {
            get {
                return this.TenantInteressentNoField;
            }
            set {
                if ((this.TenantInteressentNoField.Equals(value) != true)) {
                    this.TenantInteressentNoField = value;
                    this.RaisePropertyChanged("TenantInteressentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserInteressentNo {
            get {
                return this.UserInteressentNoField;
            }
            set {
                if ((this.UserInteressentNoField.Equals(value) != true)) {
                    this.UserInteressentNoField = value;
                    this.RaisePropertyChanged("UserInteressentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] VacateReasons {
            get {
                return this.VacateReasonsField;
            }
            set {
                if ((object.ReferenceEquals(this.VacateReasonsField, value) != true)) {
                    this.VacateReasonsField = value;
                    this.RaisePropertyChanged("VacateReasons");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="LeaseTermination.KeyDates", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct KeyDates : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.DateTime DesiredVacateDateField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.DateTime RentPaidUntilMaxDateField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.DateTime RentPaidUntilMinDateField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.DateTime SigningDeadlineDigitalField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.DateTime SigningDeadlinePaperField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DateTime DesiredVacateDate {
                get {
                    return this.DesiredVacateDateField;
                }
                set {
                    if ((this.DesiredVacateDateField.Equals(value) != true)) {
                        this.DesiredVacateDateField = value;
                        this.RaisePropertyChanged("DesiredVacateDate");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DateTime RentPaidUntilMaxDate {
                get {
                    return this.RentPaidUntilMaxDateField;
                }
                set {
                    if ((this.RentPaidUntilMaxDateField.Equals(value) != true)) {
                        this.RentPaidUntilMaxDateField = value;
                        this.RaisePropertyChanged("RentPaidUntilMaxDate");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DateTime RentPaidUntilMinDate {
                get {
                    return this.RentPaidUntilMinDateField;
                }
                set {
                    if ((this.RentPaidUntilMinDateField.Equals(value) != true)) {
                        this.RentPaidUntilMinDateField = value;
                        this.RaisePropertyChanged("RentPaidUntilMinDate");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DateTime SigningDeadlineDigital {
                get {
                    return this.SigningDeadlineDigitalField;
                }
                set {
                    if ((this.SigningDeadlineDigitalField.Equals(value) != true)) {
                        this.SigningDeadlineDigitalField = value;
                        this.RaisePropertyChanged("SigningDeadlineDigital");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DateTime SigningDeadlinePaper {
                get {
                    return this.SigningDeadlinePaperField;
                }
                set {
                    if ((this.SigningDeadlinePaperField.Equals(value) != true)) {
                        this.SigningDeadlinePaperField = value;
                        this.RaisePropertyChanged("SigningDeadlinePaper");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="LeaseTermination.TenancyInspectionTime", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct TenancyInspectionTime : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.DateTime TenancyInspectionEndTimeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string TenancyInspectionInspectorInitialsField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string TenancyInspectionInspectorNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.DateTime TenancyInspectionStartTimeField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DateTime TenancyInspectionEndTime {
                get {
                    return this.TenancyInspectionEndTimeField;
                }
                set {
                    if ((this.TenancyInspectionEndTimeField.Equals(value) != true)) {
                        this.TenancyInspectionEndTimeField = value;
                        this.RaisePropertyChanged("TenancyInspectionEndTime");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string TenancyInspectionInspectorInitials {
                get {
                    return this.TenancyInspectionInspectorInitialsField;
                }
                set {
                    if ((object.ReferenceEquals(this.TenancyInspectionInspectorInitialsField, value) != true)) {
                        this.TenancyInspectionInspectorInitialsField = value;
                        this.RaisePropertyChanged("TenancyInspectionInspectorInitials");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string TenancyInspectionInspectorName {
                get {
                    return this.TenancyInspectionInspectorNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.TenancyInspectionInspectorNameField, value) != true)) {
                        this.TenancyInspectionInspectorNameField = value;
                        this.RaisePropertyChanged("TenancyInspectionInspectorName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DateTime TenancyInspectionStartTime {
                get {
                    return this.TenancyInspectionStartTimeField;
                }
                set {
                    if ((this.TenancyInspectionStartTimeField.Equals(value) != true)) {
                        this.TenancyInspectionStartTimeField = value;
                        this.RaisePropertyChanged("TenancyInspectionStartTime");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="LeaseTermination.MovingAddress", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct MovingAddress : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string AddressField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string CoAddressField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string CountryField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string LocalCityField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string NameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string PostalCodeCityField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool UnknownAddressField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Address {
                get {
                    return this.AddressField;
                }
                set {
                    if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                        this.AddressField = value;
                        this.RaisePropertyChanged("Address");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string CoAddress {
                get {
                    return this.CoAddressField;
                }
                set {
                    if ((object.ReferenceEquals(this.CoAddressField, value) != true)) {
                        this.CoAddressField = value;
                        this.RaisePropertyChanged("CoAddress");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Country {
                get {
                    return this.CountryField;
                }
                set {
                    if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                        this.CountryField = value;
                        this.RaisePropertyChanged("Country");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string LocalCity {
                get {
                    return this.LocalCityField;
                }
                set {
                    if ((object.ReferenceEquals(this.LocalCityField, value) != true)) {
                        this.LocalCityField = value;
                        this.RaisePropertyChanged("LocalCity");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Name {
                get {
                    return this.NameField;
                }
                set {
                    if ((object.ReferenceEquals(this.NameField, value) != true)) {
                        this.NameField = value;
                        this.RaisePropertyChanged("Name");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string PostalCodeCity {
                get {
                    return this.PostalCodeCityField;
                }
                set {
                    if ((object.ReferenceEquals(this.PostalCodeCityField, value) != true)) {
                        this.PostalCodeCityField = value;
                        this.RaisePropertyChanged("PostalCodeCity");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool UnknownAddress {
                get {
                    return this.UnknownAddressField;
                }
                set {
                    if ((this.UnknownAddressField.Equals(value) != true)) {
                        this.UnknownAddressField = value;
                        this.RaisePropertyChanged("UnknownAddress");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="LeaseTermination.Tenancy", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct Tenancy : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short CompanyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short DepartmentNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short TenancyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte TenantNoField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short CompanyNo {
                get {
                    return this.CompanyNoField;
                }
                set {
                    if ((this.CompanyNoField.Equals(value) != true)) {
                        this.CompanyNoField = value;
                        this.RaisePropertyChanged("CompanyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short DepartmentNo {
                get {
                    return this.DepartmentNoField;
                }
                set {
                    if ((this.DepartmentNoField.Equals(value) != true)) {
                        this.DepartmentNoField = value;
                        this.RaisePropertyChanged("DepartmentNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short TenancyNo {
                get {
                    return this.TenancyNoField;
                }
                set {
                    if ((this.TenancyNoField.Equals(value) != true)) {
                        this.TenancyNoField = value;
                        this.RaisePropertyChanged("TenancyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte TenantNo {
                get {
                    return this.TenantNoField;
                }
                set {
                    if ((this.TenantNoField.Equals(value) != true)) {
                        this.TenantNoField = value;
                        this.RaisePropertyChanged("TenantNo");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VacateReason", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class VacateReason : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LeaseTerminationSummary", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class LeaseTerminationSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DesiredVacateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LeaseTerminationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary.TerminationStatus LeaseTerminationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary.MovingAddress> MainTenantMovingAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NewTenantMovingInDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary.MovingAddress> PartnerTenantMovingAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RentPaidUntilDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SigningDeadlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary.SignatureType SigningTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TenancyInspectionEndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TenancyInspectionStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary.Tenancy[] TerminatedTenanciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary.RelettingStatus TerminatedTenancyRelettingStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DesiredVacateDate {
            get {
                return this.DesiredVacateDateField;
            }
            set {
                if ((this.DesiredVacateDateField.Equals(value) != true)) {
                    this.DesiredVacateDateField = value;
                    this.RaisePropertyChanged("DesiredVacateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LeaseTerminationId {
            get {
                return this.LeaseTerminationIdField;
            }
            set {
                if ((this.LeaseTerminationIdField.Equals(value) != true)) {
                    this.LeaseTerminationIdField = value;
                    this.RaisePropertyChanged("LeaseTerminationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary.TerminationStatus LeaseTerminationStatus {
            get {
                return this.LeaseTerminationStatusField;
            }
            set {
                if ((this.LeaseTerminationStatusField.Equals(value) != true)) {
                    this.LeaseTerminationStatusField = value;
                    this.RaisePropertyChanged("LeaseTerminationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary.MovingAddress> MainTenantMovingAddress {
            get {
                return this.MainTenantMovingAddressField;
            }
            set {
                if ((this.MainTenantMovingAddressField.Equals(value) != true)) {
                    this.MainTenantMovingAddressField = value;
                    this.RaisePropertyChanged("MainTenantMovingAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NewTenantMovingInDate {
            get {
                return this.NewTenantMovingInDateField;
            }
            set {
                if ((this.NewTenantMovingInDateField.Equals(value) != true)) {
                    this.NewTenantMovingInDateField = value;
                    this.RaisePropertyChanged("NewTenantMovingInDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary.MovingAddress> PartnerTenantMovingAddress {
            get {
                return this.PartnerTenantMovingAddressField;
            }
            set {
                if ((this.PartnerTenantMovingAddressField.Equals(value) != true)) {
                    this.PartnerTenantMovingAddressField = value;
                    this.RaisePropertyChanged("PartnerTenantMovingAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RentPaidUntilDate {
            get {
                return this.RentPaidUntilDateField;
            }
            set {
                if ((this.RentPaidUntilDateField.Equals(value) != true)) {
                    this.RentPaidUntilDateField = value;
                    this.RaisePropertyChanged("RentPaidUntilDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SigningDeadline {
            get {
                return this.SigningDeadlineField;
            }
            set {
                if ((this.SigningDeadlineField.Equals(value) != true)) {
                    this.SigningDeadlineField = value;
                    this.RaisePropertyChanged("SigningDeadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary.SignatureType SigningType {
            get {
                return this.SigningTypeField;
            }
            set {
                if ((this.SigningTypeField.Equals(value) != true)) {
                    this.SigningTypeField = value;
                    this.RaisePropertyChanged("SigningType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TenancyInspectionEndTime {
            get {
                return this.TenancyInspectionEndTimeField;
            }
            set {
                if ((this.TenancyInspectionEndTimeField.Equals(value) != true)) {
                    this.TenancyInspectionEndTimeField = value;
                    this.RaisePropertyChanged("TenancyInspectionEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TenancyInspectionStartTime {
            get {
                return this.TenancyInspectionStartTimeField;
            }
            set {
                if ((this.TenancyInspectionStartTimeField.Equals(value) != true)) {
                    this.TenancyInspectionStartTimeField = value;
                    this.RaisePropertyChanged("TenancyInspectionStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary.Tenancy[] TerminatedTenancies {
            get {
                return this.TerminatedTenanciesField;
            }
            set {
                if ((object.ReferenceEquals(this.TerminatedTenanciesField, value) != true)) {
                    this.TerminatedTenanciesField = value;
                    this.RaisePropertyChanged("TerminatedTenancies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary.RelettingStatus TerminatedTenancyRelettingStatus {
            get {
                return this.TerminatedTenancyRelettingStatusField;
            }
            set {
                if ((this.TerminatedTenancyRelettingStatusField.Equals(value) != true)) {
                    this.TerminatedTenancyRelettingStatusField = value;
                    this.RaisePropertyChanged("TerminatedTenancyRelettingStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="LeaseTerminationSummary.MovingAddress", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct MovingAddress : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string AddressField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string CoAddressField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string CountryField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string LocalCityField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string NameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string PostalCodeCityField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool UnknownAddressField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Address {
                get {
                    return this.AddressField;
                }
                set {
                    if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                        this.AddressField = value;
                        this.RaisePropertyChanged("Address");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string CoAddress {
                get {
                    return this.CoAddressField;
                }
                set {
                    if ((object.ReferenceEquals(this.CoAddressField, value) != true)) {
                        this.CoAddressField = value;
                        this.RaisePropertyChanged("CoAddress");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Country {
                get {
                    return this.CountryField;
                }
                set {
                    if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                        this.CountryField = value;
                        this.RaisePropertyChanged("Country");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string LocalCity {
                get {
                    return this.LocalCityField;
                }
                set {
                    if ((object.ReferenceEquals(this.LocalCityField, value) != true)) {
                        this.LocalCityField = value;
                        this.RaisePropertyChanged("LocalCity");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Name {
                get {
                    return this.NameField;
                }
                set {
                    if ((object.ReferenceEquals(this.NameField, value) != true)) {
                        this.NameField = value;
                        this.RaisePropertyChanged("Name");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string PostalCodeCity {
                get {
                    return this.PostalCodeCityField;
                }
                set {
                    if ((object.ReferenceEquals(this.PostalCodeCityField, value) != true)) {
                        this.PostalCodeCityField = value;
                        this.RaisePropertyChanged("PostalCodeCity");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool UnknownAddress {
                get {
                    return this.UnknownAddressField;
                }
                set {
                    if ((this.UnknownAddressField.Equals(value) != true)) {
                        this.UnknownAddressField = value;
                        this.RaisePropertyChanged("UnknownAddress");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="LeaseTerminationSummary.TerminationStatus", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum TerminationStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            InProgress = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Completed = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Failed = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = 9999999,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="LeaseTerminationSummary.SignatureType", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum SignatureType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Digital = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Paper = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = 9999999,
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="LeaseTerminationSummary.Tenancy", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct Tenancy : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short CompanyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short DepartmentNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsSecondaryTenancyField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short TenancyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte TenantNoField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short CompanyNo {
                get {
                    return this.CompanyNoField;
                }
                set {
                    if ((this.CompanyNoField.Equals(value) != true)) {
                        this.CompanyNoField = value;
                        this.RaisePropertyChanged("CompanyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short DepartmentNo {
                get {
                    return this.DepartmentNoField;
                }
                set {
                    if ((this.DepartmentNoField.Equals(value) != true)) {
                        this.DepartmentNoField = value;
                        this.RaisePropertyChanged("DepartmentNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsSecondaryTenancy {
                get {
                    return this.IsSecondaryTenancyField;
                }
                set {
                    if ((this.IsSecondaryTenancyField.Equals(value) != true)) {
                        this.IsSecondaryTenancyField = value;
                        this.RaisePropertyChanged("IsSecondaryTenancy");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short TenancyNo {
                get {
                    return this.TenancyNoField;
                }
                set {
                    if ((this.TenancyNoField.Equals(value) != true)) {
                        this.TenancyNoField = value;
                        this.RaisePropertyChanged("TenancyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte TenantNo {
                get {
                    return this.TenantNoField;
                }
                set {
                    if ((this.TenantNoField.Equals(value) != true)) {
                        this.TenantNoField = value;
                        this.RaisePropertyChanged("TenantNo");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="LeaseTerminationSummary.RelettingStatus", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum RelettingStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            OfferProcessNotStarted = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            OfferProcessOngoing = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            LeaseReady = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            LeaseSigned = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = 9999999,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenancyImprovement", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class TenancyImprovement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenancyCount", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class TenancyCount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ApartmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short NumberOfRoomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfTenanciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ApartmentType {
            get {
                return this.ApartmentTypeField;
            }
            set {
                if ((this.ApartmentTypeField.Equals(value) != true)) {
                    this.ApartmentTypeField = value;
                    this.RaisePropertyChanged("ApartmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short NumberOfRooms {
            get {
                return this.NumberOfRoomsField;
            }
            set {
                if ((this.NumberOfRoomsField.Equals(value) != true)) {
                    this.NumberOfRoomsField = value;
                    this.RaisePropertyChanged("NumberOfRooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfTenancies {
            get {
                return this.NumberOfTenanciesField;
            }
            set {
                if ((this.NumberOfTenanciesField.Equals(value) != true)) {
                    this.NumberOfTenanciesField = value;
                    this.RaisePropertyChanged("NumberOfTenancies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyType {
            get {
                return this.TenancyTypeField;
            }
            set {
                if ((this.TenancyTypeField.Equals(value) != true)) {
                    this.TenancyTypeField = value;
                    this.RaisePropertyChanged("TenancyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentServiceInvoice", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class PaymentServiceInvoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgreementNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<RestEgBoligHeldinTest.EgBoligService.PaymentServiceInvoice.FileInfo> FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.PaymentServiceInvoice.InvoiceLine[] LinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalAmountWithVatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalVatAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.PaymentServiceInvoice.InvoiceType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgreementNo {
            get {
                return this.AgreementNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AgreementNoField, value) != true)) {
                    this.AgreementNoField = value;
                    this.RaisePropertyChanged("AgreementNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<RestEgBoligHeldinTest.EgBoligService.PaymentServiceInvoice.FileInfo> File {
            get {
                return this.FileField;
            }
            set {
                if ((this.FileField.Equals(value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.PaymentServiceInvoice.InvoiceLine[] Lines {
            get {
                return this.LinesField;
            }
            set {
                if ((object.ReferenceEquals(this.LinesField, value) != true)) {
                    this.LinesField = value;
                    this.RaisePropertyChanged("Lines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalAmountWithVat {
            get {
                return this.TotalAmountWithVatField;
            }
            set {
                if ((this.TotalAmountWithVatField.Equals(value) != true)) {
                    this.TotalAmountWithVatField = value;
                    this.RaisePropertyChanged("TotalAmountWithVat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalVatAmount {
            get {
                return this.TotalVatAmountField;
            }
            set {
                if ((this.TotalVatAmountField.Equals(value) != true)) {
                    this.TotalVatAmountField = value;
                    this.RaisePropertyChanged("TotalVatAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.PaymentServiceInvoice.InvoiceType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="PaymentServiceInvoice.FileInfo", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct FileInfo : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte[] FileDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string FileTypeField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte[] FileData {
                get {
                    return this.FileDataField;
                }
                set {
                    if ((object.ReferenceEquals(this.FileDataField, value) != true)) {
                        this.FileDataField = value;
                        this.RaisePropertyChanged("FileData");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string FileType {
                get {
                    return this.FileTypeField;
                }
                set {
                    if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                        this.FileTypeField = value;
                        this.RaisePropertyChanged("FileType");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="PaymentServiceInvoice.InvoiceLine", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct InvoiceLine : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<decimal> Amount1Field;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<decimal> Amount2Field;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<decimal> Amount3Field;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<decimal> Amount4Field;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<decimal> Amount5Field;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int LineNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string TextField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<decimal> Amount1 {
                get {
                    return this.Amount1Field;
                }
                set {
                    if ((this.Amount1Field.Equals(value) != true)) {
                        this.Amount1Field = value;
                        this.RaisePropertyChanged("Amount1");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<decimal> Amount2 {
                get {
                    return this.Amount2Field;
                }
                set {
                    if ((this.Amount2Field.Equals(value) != true)) {
                        this.Amount2Field = value;
                        this.RaisePropertyChanged("Amount2");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<decimal> Amount3 {
                get {
                    return this.Amount3Field;
                }
                set {
                    if ((this.Amount3Field.Equals(value) != true)) {
                        this.Amount3Field = value;
                        this.RaisePropertyChanged("Amount3");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<decimal> Amount4 {
                get {
                    return this.Amount4Field;
                }
                set {
                    if ((this.Amount4Field.Equals(value) != true)) {
                        this.Amount4Field = value;
                        this.RaisePropertyChanged("Amount4");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<decimal> Amount5 {
                get {
                    return this.Amount5Field;
                }
                set {
                    if ((this.Amount5Field.Equals(value) != true)) {
                        this.Amount5Field = value;
                        this.RaisePropertyChanged("Amount5");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int LineNo {
                get {
                    return this.LineNoField;
                }
                set {
                    if ((this.LineNoField.Equals(value) != true)) {
                        this.LineNoField = value;
                        this.RaisePropertyChanged("LineNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Text {
                get {
                    return this.TextField;
                }
                set {
                    if ((object.ReferenceEquals(this.TextField, value) != true)) {
                        this.TextField = value;
                        this.RaisePropertyChanged("Text");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="PaymentServiceInvoice.InvoiceType", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum InvoiceType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            PropertyTaxBill = 1,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Wish", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Wish : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ApartmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AutoNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DispensationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DivorcedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DivorcedWithChildField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FloorMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FloorMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HousingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MemberCompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MemberNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SqmMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SqmMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> TenancyNoFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TenancyNoToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis11Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis12Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis13Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis14Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis15Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis16Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis17Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis18Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis19Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis20Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis21Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis22Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis23Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis24Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis25Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis26Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis27Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis28Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis29Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis30Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenancyPremis9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> TenancyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ApartmentType {
            get {
                return this.ApartmentTypeField;
            }
            set {
                if ((this.ApartmentTypeField.Equals(value) != true)) {
                    this.ApartmentTypeField = value;
                    this.RaisePropertyChanged("ApartmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AutoNo {
            get {
                return this.AutoNoField;
            }
            set {
                if ((this.AutoNoField.Equals(value) != true)) {
                    this.AutoNoField = value;
                    this.RaisePropertyChanged("AutoNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreationCode {
            get {
                return this.CreationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CreationCodeField, value) != true)) {
                    this.CreationCodeField = value;
                    this.RaisePropertyChanged("CreationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria1 {
            get {
                return this.Criteria1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria1Field, value) != true)) {
                    this.Criteria1Field = value;
                    this.RaisePropertyChanged("Criteria1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria2 {
            get {
                return this.Criteria2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria2Field, value) != true)) {
                    this.Criteria2Field = value;
                    this.RaisePropertyChanged("Criteria2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria3 {
            get {
                return this.Criteria3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria3Field, value) != true)) {
                    this.Criteria3Field = value;
                    this.RaisePropertyChanged("Criteria3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria4 {
            get {
                return this.Criteria4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria4Field, value) != true)) {
                    this.Criteria4Field = value;
                    this.RaisePropertyChanged("Criteria4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria5 {
            get {
                return this.Criteria5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria5Field, value) != true)) {
                    this.Criteria5Field = value;
                    this.RaisePropertyChanged("Criteria5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Disabled {
            get {
                return this.DisabledField;
            }
            set {
                if ((this.DisabledField.Equals(value) != true)) {
                    this.DisabledField = value;
                    this.RaisePropertyChanged("Disabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Dispensation {
            get {
                return this.DispensationField;
            }
            set {
                if ((this.DispensationField.Equals(value) != true)) {
                    this.DispensationField = value;
                    this.RaisePropertyChanged("Dispensation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Divorced {
            get {
                return this.DivorcedField;
            }
            set {
                if ((this.DivorcedField.Equals(value) != true)) {
                    this.DivorcedField = value;
                    this.RaisePropertyChanged("Divorced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DivorcedWithChild {
            get {
                return this.DivorcedWithChildField;
            }
            set {
                if ((this.DivorcedWithChildField.Equals(value) != true)) {
                    this.DivorcedWithChildField = value;
                    this.RaisePropertyChanged("DivorcedWithChild");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FloorMax {
            get {
                return this.FloorMaxField;
            }
            set {
                if ((this.FloorMaxField.Equals(value) != true)) {
                    this.FloorMaxField = value;
                    this.RaisePropertyChanged("FloorMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FloorMin {
            get {
                return this.FloorMinField;
            }
            set {
                if ((this.FloorMinField.Equals(value) != true)) {
                    this.FloorMinField = value;
                    this.RaisePropertyChanged("FloorMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HousingType {
            get {
                return this.HousingTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.HousingTypeField, value) != true)) {
                    this.HousingTypeField = value;
                    this.RaisePropertyChanged("HousingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MemberCompanyNo {
            get {
                return this.MemberCompanyNoField;
            }
            set {
                if ((this.MemberCompanyNoField.Equals(value) != true)) {
                    this.MemberCompanyNoField = value;
                    this.RaisePropertyChanged("MemberCompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MemberNo {
            get {
                return this.MemberNoField;
            }
            set {
                if ((this.MemberNoField.Equals(value) != true)) {
                    this.MemberNoField = value;
                    this.RaisePropertyChanged("MemberNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Room {
            get {
                return this.RoomField;
            }
            set {
                if ((this.RoomField.Equals(value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SqmMax {
            get {
                return this.SqmMaxField;
            }
            set {
                if ((this.SqmMaxField.Equals(value) != true)) {
                    this.SqmMaxField = value;
                    this.RaisePropertyChanged("SqmMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SqmMin {
            get {
                return this.SqmMinField;
            }
            set {
                if ((this.SqmMinField.Equals(value) != true)) {
                    this.SqmMinField = value;
                    this.RaisePropertyChanged("SqmMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> TenancyNoFrom {
            get {
                return this.TenancyNoFromField;
            }
            set {
                if ((this.TenancyNoFromField.Equals(value) != true)) {
                    this.TenancyNoFromField = value;
                    this.RaisePropertyChanged("TenancyNoFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TenancyNoTo {
            get {
                return this.TenancyNoToField;
            }
            set {
                if ((this.TenancyNoToField.Equals(value) != true)) {
                    this.TenancyNoToField = value;
                    this.RaisePropertyChanged("TenancyNoTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis1 {
            get {
                return this.TenancyPremis1Field;
            }
            set {
                if ((this.TenancyPremis1Field.Equals(value) != true)) {
                    this.TenancyPremis1Field = value;
                    this.RaisePropertyChanged("TenancyPremis1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis10 {
            get {
                return this.TenancyPremis10Field;
            }
            set {
                if ((this.TenancyPremis10Field.Equals(value) != true)) {
                    this.TenancyPremis10Field = value;
                    this.RaisePropertyChanged("TenancyPremis10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis11 {
            get {
                return this.TenancyPremis11Field;
            }
            set {
                if ((this.TenancyPremis11Field.Equals(value) != true)) {
                    this.TenancyPremis11Field = value;
                    this.RaisePropertyChanged("TenancyPremis11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis12 {
            get {
                return this.TenancyPremis12Field;
            }
            set {
                if ((this.TenancyPremis12Field.Equals(value) != true)) {
                    this.TenancyPremis12Field = value;
                    this.RaisePropertyChanged("TenancyPremis12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis13 {
            get {
                return this.TenancyPremis13Field;
            }
            set {
                if ((this.TenancyPremis13Field.Equals(value) != true)) {
                    this.TenancyPremis13Field = value;
                    this.RaisePropertyChanged("TenancyPremis13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis14 {
            get {
                return this.TenancyPremis14Field;
            }
            set {
                if ((this.TenancyPremis14Field.Equals(value) != true)) {
                    this.TenancyPremis14Field = value;
                    this.RaisePropertyChanged("TenancyPremis14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis15 {
            get {
                return this.TenancyPremis15Field;
            }
            set {
                if ((this.TenancyPremis15Field.Equals(value) != true)) {
                    this.TenancyPremis15Field = value;
                    this.RaisePropertyChanged("TenancyPremis15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis16 {
            get {
                return this.TenancyPremis16Field;
            }
            set {
                if ((this.TenancyPremis16Field.Equals(value) != true)) {
                    this.TenancyPremis16Field = value;
                    this.RaisePropertyChanged("TenancyPremis16");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis17 {
            get {
                return this.TenancyPremis17Field;
            }
            set {
                if ((this.TenancyPremis17Field.Equals(value) != true)) {
                    this.TenancyPremis17Field = value;
                    this.RaisePropertyChanged("TenancyPremis17");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis18 {
            get {
                return this.TenancyPremis18Field;
            }
            set {
                if ((this.TenancyPremis18Field.Equals(value) != true)) {
                    this.TenancyPremis18Field = value;
                    this.RaisePropertyChanged("TenancyPremis18");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis19 {
            get {
                return this.TenancyPremis19Field;
            }
            set {
                if ((this.TenancyPremis19Field.Equals(value) != true)) {
                    this.TenancyPremis19Field = value;
                    this.RaisePropertyChanged("TenancyPremis19");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis2 {
            get {
                return this.TenancyPremis2Field;
            }
            set {
                if ((this.TenancyPremis2Field.Equals(value) != true)) {
                    this.TenancyPremis2Field = value;
                    this.RaisePropertyChanged("TenancyPremis2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis20 {
            get {
                return this.TenancyPremis20Field;
            }
            set {
                if ((this.TenancyPremis20Field.Equals(value) != true)) {
                    this.TenancyPremis20Field = value;
                    this.RaisePropertyChanged("TenancyPremis20");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis21 {
            get {
                return this.TenancyPremis21Field;
            }
            set {
                if ((this.TenancyPremis21Field.Equals(value) != true)) {
                    this.TenancyPremis21Field = value;
                    this.RaisePropertyChanged("TenancyPremis21");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis22 {
            get {
                return this.TenancyPremis22Field;
            }
            set {
                if ((this.TenancyPremis22Field.Equals(value) != true)) {
                    this.TenancyPremis22Field = value;
                    this.RaisePropertyChanged("TenancyPremis22");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis23 {
            get {
                return this.TenancyPremis23Field;
            }
            set {
                if ((this.TenancyPremis23Field.Equals(value) != true)) {
                    this.TenancyPremis23Field = value;
                    this.RaisePropertyChanged("TenancyPremis23");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis24 {
            get {
                return this.TenancyPremis24Field;
            }
            set {
                if ((this.TenancyPremis24Field.Equals(value) != true)) {
                    this.TenancyPremis24Field = value;
                    this.RaisePropertyChanged("TenancyPremis24");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis25 {
            get {
                return this.TenancyPremis25Field;
            }
            set {
                if ((this.TenancyPremis25Field.Equals(value) != true)) {
                    this.TenancyPremis25Field = value;
                    this.RaisePropertyChanged("TenancyPremis25");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis26 {
            get {
                return this.TenancyPremis26Field;
            }
            set {
                if ((this.TenancyPremis26Field.Equals(value) != true)) {
                    this.TenancyPremis26Field = value;
                    this.RaisePropertyChanged("TenancyPremis26");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis27 {
            get {
                return this.TenancyPremis27Field;
            }
            set {
                if ((this.TenancyPremis27Field.Equals(value) != true)) {
                    this.TenancyPremis27Field = value;
                    this.RaisePropertyChanged("TenancyPremis27");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis28 {
            get {
                return this.TenancyPremis28Field;
            }
            set {
                if ((this.TenancyPremis28Field.Equals(value) != true)) {
                    this.TenancyPremis28Field = value;
                    this.RaisePropertyChanged("TenancyPremis28");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis29 {
            get {
                return this.TenancyPremis29Field;
            }
            set {
                if ((this.TenancyPremis29Field.Equals(value) != true)) {
                    this.TenancyPremis29Field = value;
                    this.RaisePropertyChanged("TenancyPremis29");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis3 {
            get {
                return this.TenancyPremis3Field;
            }
            set {
                if ((this.TenancyPremis3Field.Equals(value) != true)) {
                    this.TenancyPremis3Field = value;
                    this.RaisePropertyChanged("TenancyPremis3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis30 {
            get {
                return this.TenancyPremis30Field;
            }
            set {
                if ((this.TenancyPremis30Field.Equals(value) != true)) {
                    this.TenancyPremis30Field = value;
                    this.RaisePropertyChanged("TenancyPremis30");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis4 {
            get {
                return this.TenancyPremis4Field;
            }
            set {
                if ((this.TenancyPremis4Field.Equals(value) != true)) {
                    this.TenancyPremis4Field = value;
                    this.RaisePropertyChanged("TenancyPremis4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis5 {
            get {
                return this.TenancyPremis5Field;
            }
            set {
                if ((this.TenancyPremis5Field.Equals(value) != true)) {
                    this.TenancyPremis5Field = value;
                    this.RaisePropertyChanged("TenancyPremis5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis6 {
            get {
                return this.TenancyPremis6Field;
            }
            set {
                if ((this.TenancyPremis6Field.Equals(value) != true)) {
                    this.TenancyPremis6Field = value;
                    this.RaisePropertyChanged("TenancyPremis6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis7 {
            get {
                return this.TenancyPremis7Field;
            }
            set {
                if ((this.TenancyPremis7Field.Equals(value) != true)) {
                    this.TenancyPremis7Field = value;
                    this.RaisePropertyChanged("TenancyPremis7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis8 {
            get {
                return this.TenancyPremis8Field;
            }
            set {
                if ((this.TenancyPremis8Field.Equals(value) != true)) {
                    this.TenancyPremis8Field = value;
                    this.RaisePropertyChanged("TenancyPremis8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenancyPremis9 {
            get {
                return this.TenancyPremis9Field;
            }
            set {
                if ((this.TenancyPremis9Field.Equals(value) != true)) {
                    this.TenancyPremis9Field = value;
                    this.RaisePropertyChanged("TenancyPremis9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> TenancyType {
            get {
                return this.TenancyTypeField;
            }
            set {
                if ((this.TenancyTypeField.Equals(value) != true)) {
                    this.TenancyTypeField = value;
                    this.RaisePropertyChanged("TenancyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pet", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Pet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Education", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Education : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationalInstitution", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class EducationalInstitution : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpecialCriteria", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class SpecialCriteria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.SpecialCriteria.SpecialCriteriaChoice[] CriteriaChoicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.SpecialCriteria.SpecialCriteriaChoice[] CriteriaChoices {
            get {
                return this.CriteriaChoicesField;
            }
            set {
                if ((object.ReferenceEquals(this.CriteriaChoicesField, value) != true)) {
                    this.CriteriaChoicesField = value;
                    this.RaisePropertyChanged("CriteriaChoices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="SpecialCriteria.SpecialCriteriaChoice", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial class SpecialCriteriaChoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short ChoiceNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string ChoiceTextField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short ChoiceNo {
                get {
                    return this.ChoiceNoField;
                }
                set {
                    if ((this.ChoiceNoField.Equals(value) != true)) {
                        this.ChoiceNoField = value;
                        this.RaisePropertyChanged("ChoiceNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string ChoiceText {
                get {
                    return this.ChoiceTextField;
                }
                set {
                    if ((object.ReferenceEquals(this.ChoiceTextField, value) != true)) {
                        this.ChoiceTextField = value;
                        this.RaisePropertyChanged("ChoiceText");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Region", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Region : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> MainRegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RegionNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> MainRegionId {
            get {
                return this.MainRegionIdField;
            }
            set {
                if ((this.MainRegionIdField.Equals(value) != true)) {
                    this.MainRegionIdField = value;
                    this.RaisePropertyChanged("MainRegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RegionNo {
            get {
                return this.RegionNoField;
            }
            set {
                if ((this.RegionNoField.Equals(value) != true)) {
                    this.RegionNoField = value;
                    this.RaisePropertyChanged("RegionNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionDetail", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class RegionDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short EndTenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RegionNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short StartTenancyNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short EndTenancyNo {
            get {
                return this.EndTenancyNoField;
            }
            set {
                if ((this.EndTenancyNoField.Equals(value) != true)) {
                    this.EndTenancyNoField = value;
                    this.RaisePropertyChanged("EndTenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RegionNo {
            get {
                return this.RegionNoField;
            }
            set {
                if ((this.RegionNoField.Equals(value) != true)) {
                    this.RegionNoField = value;
                    this.RaisePropertyChanged("RegionNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short StartTenancyNo {
            get {
                return this.StartTenancyNoField;
            }
            set {
                if ((this.StartTenancyNoField.Equals(value) != true)) {
                    this.StartTenancyNoField = value;
                    this.RaisePropertyChanged("StartTenancyNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tenant", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Tenant : RestEgBoligHeldinTest.EgBoligService.StakeholderBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AvailableDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CprNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CprSerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfNextStudyCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfStudyCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DigitalPostAcceptedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EducationDocumentationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EducationExpectedEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EducationStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationForTenancyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InteressentNo2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBiTenancyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCurrentTenantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetsNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OccupationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> OfferByEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParagraphForTenancyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SecondaryTenantOnTheContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TenantLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TenantNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> VacateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VacateFromField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AvailableDate {
            get {
                return this.AvailableDateField;
            }
            set {
                if ((this.AvailableDateField.Equals(value) != true)) {
                    this.AvailableDateField = value;
                    this.RaisePropertyChanged("AvailableDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingType {
            get {
                return this.BillingTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingTypeField, value) != true)) {
                    this.BillingTypeField = value;
                    this.RaisePropertyChanged("BillingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CprNo {
            get {
                return this.CprNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CprNoField, value) != true)) {
                    this.CprNoField = value;
                    this.RaisePropertyChanged("CprNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CprSerialNo {
            get {
                return this.CprSerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CprSerialNoField, value) != true)) {
                    this.CprSerialNoField = value;
                    this.RaisePropertyChanged("CprSerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria1 {
            get {
                return this.Criteria1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria1Field, value) != true)) {
                    this.Criteria1Field = value;
                    this.RaisePropertyChanged("Criteria1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria2 {
            get {
                return this.Criteria2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria2Field, value) != true)) {
                    this.Criteria2Field = value;
                    this.RaisePropertyChanged("Criteria2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria3 {
            get {
                return this.Criteria3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria3Field, value) != true)) {
                    this.Criteria3Field = value;
                    this.RaisePropertyChanged("Criteria3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria4 {
            get {
                return this.Criteria4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria4Field, value) != true)) {
                    this.Criteria4Field = value;
                    this.RaisePropertyChanged("Criteria4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria5 {
            get {
                return this.Criteria5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria5Field, value) != true)) {
                    this.Criteria5Field = value;
                    this.RaisePropertyChanged("Criteria5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfNextStudyCheck {
            get {
                return this.DateOfNextStudyCheckField;
            }
            set {
                if ((this.DateOfNextStudyCheckField.Equals(value) != true)) {
                    this.DateOfNextStudyCheckField = value;
                    this.RaisePropertyChanged("DateOfNextStudyCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfStudyCheck {
            get {
                return this.DateOfStudyCheckField;
            }
            set {
                if ((this.DateOfStudyCheckField.Equals(value) != true)) {
                    this.DateOfStudyCheckField = value;
                    this.RaisePropertyChanged("DateOfStudyCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DigitalPostAccepted {
            get {
                return this.DigitalPostAcceptedField;
            }
            set {
                if ((this.DigitalPostAcceptedField.Equals(value) != true)) {
                    this.DigitalPostAcceptedField = value;
                    this.RaisePropertyChanged("DigitalPostAccepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EducationDocumentationDate {
            get {
                return this.EducationDocumentationDateField;
            }
            set {
                if ((this.EducationDocumentationDateField.Equals(value) != true)) {
                    this.EducationDocumentationDateField = value;
                    this.RaisePropertyChanged("EducationDocumentationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EducationExpectedEnd {
            get {
                return this.EducationExpectedEndField;
            }
            set {
                if ((this.EducationExpectedEndField.Equals(value) != true)) {
                    this.EducationExpectedEndField = value;
                    this.RaisePropertyChanged("EducationExpectedEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EducationStart {
            get {
                return this.EducationStartField;
            }
            set {
                if ((this.EducationStartField.Equals(value) != true)) {
                    this.EducationStartField = value;
                    this.RaisePropertyChanged("EducationStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationForTenancy {
            get {
                return this.ExpirationForTenancyField;
            }
            set {
                if ((this.ExpirationForTenancyField.Equals(value) != true)) {
                    this.ExpirationForTenancyField = value;
                    this.RaisePropertyChanged("ExpirationForTenancy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InteressentNo2 {
            get {
                return this.InteressentNo2Field;
            }
            set {
                if ((this.InteressentNo2Field.Equals(value) != true)) {
                    this.InteressentNo2Field = value;
                    this.RaisePropertyChanged("InteressentNo2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBiTenancy {
            get {
                return this.IsBiTenancyField;
            }
            set {
                if ((this.IsBiTenancyField.Equals(value) != true)) {
                    this.IsBiTenancyField = value;
                    this.RaisePropertyChanged("IsBiTenancy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCurrentTenant {
            get {
                return this.IsCurrentTenantField;
            }
            set {
                if ((this.IsCurrentTenantField.Equals(value) != true)) {
                    this.IsCurrentTenantField = value;
                    this.RaisePropertyChanged("IsCurrentTenant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetsNumber {
            get {
                return this.NetsNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NetsNumberField, value) != true)) {
                    this.NetsNumberField = value;
                    this.RaisePropertyChanged("NetsNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OccupationDate {
            get {
                return this.OccupationDateField;
            }
            set {
                if ((this.OccupationDateField.Equals(value) != true)) {
                    this.OccupationDateField = value;
                    this.RaisePropertyChanged("OccupationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> OfferByEmail {
            get {
                return this.OfferByEmailField;
            }
            set {
                if ((this.OfferByEmailField.Equals(value) != true)) {
                    this.OfferByEmailField = value;
                    this.RaisePropertyChanged("OfferByEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParagraphForTenancy {
            get {
                return this.ParagraphForTenancyField;
            }
            set {
                if ((object.ReferenceEquals(this.ParagraphForTenancyField, value) != true)) {
                    this.ParagraphForTenancyField = value;
                    this.RaisePropertyChanged("ParagraphForTenancy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SecondaryTenantOnTheContract {
            get {
                return this.SecondaryTenantOnTheContractField;
            }
            set {
                if ((this.SecondaryTenantOnTheContractField.Equals(value) != true)) {
                    this.SecondaryTenantOnTheContractField = value;
                    this.RaisePropertyChanged("SecondaryTenantOnTheContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyNo {
            get {
                return this.TenancyNoField;
            }
            set {
                if ((this.TenancyNoField.Equals(value) != true)) {
                    this.TenancyNoField = value;
                    this.RaisePropertyChanged("TenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TenantLevel {
            get {
                return this.TenantLevelField;
            }
            set {
                if ((this.TenantLevelField.Equals(value) != true)) {
                    this.TenantLevelField = value;
                    this.RaisePropertyChanged("TenantLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TenantNo {
            get {
                return this.TenantNoField;
            }
            set {
                if ((this.TenantNoField.Equals(value) != true)) {
                    this.TenantNoField = value;
                    this.RaisePropertyChanged("TenantNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> VacateDate {
            get {
                return this.VacateDateField;
            }
            set {
                if ((this.VacateDateField.Equals(value) != true)) {
                    this.VacateDateField = value;
                    this.RaisePropertyChanged("VacateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VacateFrom {
            get {
                return this.VacateFromField;
            }
            set {
                if ((object.ReferenceEquals(this.VacateFromField, value) != true)) {
                    this.VacateFromField = value;
                    this.RaisePropertyChanged("VacateFrom");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StakeholderBase", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RestEgBoligHeldinTest.EgBoligService.Member))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RestEgBoligHeldinTest.EgBoligService.BoardMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooker))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RestEgBoligHeldinTest.EgBoligService.Office))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RestEgBoligHeldinTest.EgBoligService.Personnel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RestEgBoligHeldinTest.EgBoligService.Tenant))]
    public partial class StakeholderBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AutoNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeceasedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EgdiNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InteressentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherNameOnAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProtectedAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThirdEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AutoNo {
            get {
                return this.AutoNoField;
            }
            set {
                if ((this.AutoNoField.Equals(value) != true)) {
                    this.AutoNoField = value;
                    this.RaisePropertyChanged("AutoNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoAddress {
            get {
                return this.CoAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CoAddressField, value) != true)) {
                    this.CoAddressField = value;
                    this.RaisePropertyChanged("CoAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deceased {
            get {
                return this.DeceasedField;
            }
            set {
                if ((this.DeceasedField.Equals(value) != true)) {
                    this.DeceasedField = value;
                    this.RaisePropertyChanged("Deceased");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EgdiNo {
            get {
                return this.EgdiNoField;
            }
            set {
                if ((this.EgdiNoField.Equals(value) != true)) {
                    this.EgdiNoField = value;
                    this.RaisePropertyChanged("EgdiNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomePhone {
            get {
                return this.HomePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePhoneField, value) != true)) {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InteressentNo {
            get {
                return this.InteressentNoField;
            }
            set {
                if ((this.InteressentNoField.Equals(value) != true)) {
                    this.InteressentNoField = value;
                    this.RaisePropertyChanged("InteressentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalCity {
            get {
                return this.LocalCityField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalCityField, value) != true)) {
                    this.LocalCityField = value;
                    this.RaisePropertyChanged("LocalCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NemID {
            get {
                return this.NemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NemIDField, value) != true)) {
                    this.NemIDField = value;
                    this.RaisePropertyChanged("NemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherNameOnAddress {
            get {
                return this.OtherNameOnAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherNameOnAddressField, value) != true)) {
                    this.OtherNameOnAddressField = value;
                    this.RaisePropertyChanged("OtherNameOnAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCodeCity {
            get {
                return this.PostalCodeCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeCityField, value) != true)) {
                    this.PostalCodeCityField = value;
                    this.RaisePropertyChanged("PostalCodeCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProtectedAddress {
            get {
                return this.ProtectedAddressField;
            }
            set {
                if ((this.ProtectedAddressField.Equals(value) != true)) {
                    this.ProtectedAddressField = value;
                    this.RaisePropertyChanged("ProtectedAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondEmail {
            get {
                return this.SecondEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondEmailField, value) != true)) {
                    this.SecondEmailField = value;
                    this.RaisePropertyChanged("SecondEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThirdEmail {
            get {
                return this.ThirdEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ThirdEmailField, value) != true)) {
                    this.ThirdEmailField = value;
                    this.RaisePropertyChanged("ThirdEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkPhone {
            get {
                return this.WorkPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPhoneField, value) != true)) {
                    this.WorkPhoneField = value;
                    this.RaisePropertyChanged("WorkPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Member", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Member : RestEgBoligHeldinTest.EgBoligService.StakeholderBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> AdultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> Cpr42Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Cpr62Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CprNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CprSerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> CreatedViaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DigitalPostAcceptedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> EducationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EducationDocumentationReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EducationEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EducationExpectedEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EducationStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EducationalInstitutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EgdiNo1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GroupNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> HousingCertificateCompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> HousingCertificateDepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> HousingCertificateExpiresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HousingCertificateForEntireCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> HousingCertificateNoOfRoomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HousingCertificatePaidAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> HousingCertificatePaidDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> MaximumRentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MemberCompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MemberNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> MinimumRentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte NoOfYearsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> OfferByEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PartnerBirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartnerCprSerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PreferredMoveInDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ResidenceCompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ResidenceDepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ResidenceTenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> ResidenceTenantNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Adults {
            get {
                return this.AdultsField;
            }
            set {
                if ((this.AdultsField.Equals(value) != true)) {
                    this.AdultsField = value;
                    this.RaisePropertyChanged("Adults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingType {
            get {
                return this.BillingTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingTypeField, value) != true)) {
                    this.BillingTypeField = value;
                    this.RaisePropertyChanged("BillingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((this.ChildrenField.Equals(value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Cpr42 {
            get {
                return this.Cpr42Field;
            }
            set {
                if ((this.Cpr42Field.Equals(value) != true)) {
                    this.Cpr42Field = value;
                    this.RaisePropertyChanged("Cpr42");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Cpr62 {
            get {
                return this.Cpr62Field;
            }
            set {
                if ((this.Cpr62Field.Equals(value) != true)) {
                    this.Cpr62Field = value;
                    this.RaisePropertyChanged("Cpr62");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CprNo {
            get {
                return this.CprNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CprNoField, value) != true)) {
                    this.CprNoField = value;
                    this.RaisePropertyChanged("CprNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CprSerialNo {
            get {
                return this.CprSerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CprSerialNoField, value) != true)) {
                    this.CprSerialNoField = value;
                    this.RaisePropertyChanged("CprSerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> CreatedVia {
            get {
                return this.CreatedViaField;
            }
            set {
                if ((this.CreatedViaField.Equals(value) != true)) {
                    this.CreatedViaField = value;
                    this.RaisePropertyChanged("CreatedVia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria1 {
            get {
                return this.Criteria1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria1Field, value) != true)) {
                    this.Criteria1Field = value;
                    this.RaisePropertyChanged("Criteria1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria2 {
            get {
                return this.Criteria2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria2Field, value) != true)) {
                    this.Criteria2Field = value;
                    this.RaisePropertyChanged("Criteria2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria3 {
            get {
                return this.Criteria3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria3Field, value) != true)) {
                    this.Criteria3Field = value;
                    this.RaisePropertyChanged("Criteria3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria4 {
            get {
                return this.Criteria4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria4Field, value) != true)) {
                    this.Criteria4Field = value;
                    this.RaisePropertyChanged("Criteria4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria5 {
            get {
                return this.Criteria5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria5Field, value) != true)) {
                    this.Criteria5Field = value;
                    this.RaisePropertyChanged("Criteria5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DigitalPostAccepted {
            get {
                return this.DigitalPostAcceptedField;
            }
            set {
                if ((this.DigitalPostAcceptedField.Equals(value) != true)) {
                    this.DigitalPostAcceptedField = value;
                    this.RaisePropertyChanged("DigitalPostAccepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Education {
            get {
                return this.EducationField;
            }
            set {
                if ((this.EducationField.Equals(value) != true)) {
                    this.EducationField = value;
                    this.RaisePropertyChanged("Education");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EducationDocumentationReceived {
            get {
                return this.EducationDocumentationReceivedField;
            }
            set {
                if ((this.EducationDocumentationReceivedField.Equals(value) != true)) {
                    this.EducationDocumentationReceivedField = value;
                    this.RaisePropertyChanged("EducationDocumentationReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EducationEnd {
            get {
                return this.EducationEndField;
            }
            set {
                if ((this.EducationEndField.Equals(value) != true)) {
                    this.EducationEndField = value;
                    this.RaisePropertyChanged("EducationEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EducationExpectedEnd {
            get {
                return this.EducationExpectedEndField;
            }
            set {
                if ((this.EducationExpectedEndField.Equals(value) != true)) {
                    this.EducationExpectedEndField = value;
                    this.RaisePropertyChanged("EducationExpectedEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EducationStart {
            get {
                return this.EducationStartField;
            }
            set {
                if ((this.EducationStartField.Equals(value) != true)) {
                    this.EducationStartField = value;
                    this.RaisePropertyChanged("EducationStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EducationalInstitution {
            get {
                return this.EducationalInstitutionField;
            }
            set {
                if ((this.EducationalInstitutionField.Equals(value) != true)) {
                    this.EducationalInstitutionField = value;
                    this.RaisePropertyChanged("EducationalInstitution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="EgdiNo")]
        public System.Nullable<int> EgdiNo1 {
            get {
                return this.EgdiNo1Field;
            }
            set {
                if ((this.EgdiNo1Field.Equals(value) != true)) {
                    this.EgdiNo1Field = value;
                    this.RaisePropertyChanged("EgdiNo1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GroupNo {
            get {
                return this.GroupNoField;
            }
            set {
                if ((this.GroupNoField.Equals(value) != true)) {
                    this.GroupNoField = value;
                    this.RaisePropertyChanged("GroupNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> HousingCertificateCompanyNo {
            get {
                return this.HousingCertificateCompanyNoField;
            }
            set {
                if ((this.HousingCertificateCompanyNoField.Equals(value) != true)) {
                    this.HousingCertificateCompanyNoField = value;
                    this.RaisePropertyChanged("HousingCertificateCompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> HousingCertificateDepartmentNo {
            get {
                return this.HousingCertificateDepartmentNoField;
            }
            set {
                if ((this.HousingCertificateDepartmentNoField.Equals(value) != true)) {
                    this.HousingCertificateDepartmentNoField = value;
                    this.RaisePropertyChanged("HousingCertificateDepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> HousingCertificateExpires {
            get {
                return this.HousingCertificateExpiresField;
            }
            set {
                if ((this.HousingCertificateExpiresField.Equals(value) != true)) {
                    this.HousingCertificateExpiresField = value;
                    this.RaisePropertyChanged("HousingCertificateExpires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HousingCertificateForEntireCompany {
            get {
                return this.HousingCertificateForEntireCompanyField;
            }
            set {
                if ((this.HousingCertificateForEntireCompanyField.Equals(value) != true)) {
                    this.HousingCertificateForEntireCompanyField = value;
                    this.RaisePropertyChanged("HousingCertificateForEntireCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> HousingCertificateNoOfRooms {
            get {
                return this.HousingCertificateNoOfRoomsField;
            }
            set {
                if ((this.HousingCertificateNoOfRoomsField.Equals(value) != true)) {
                    this.HousingCertificateNoOfRoomsField = value;
                    this.RaisePropertyChanged("HousingCertificateNoOfRooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> HousingCertificatePaidAmount {
            get {
                return this.HousingCertificatePaidAmountField;
            }
            set {
                if ((this.HousingCertificatePaidAmountField.Equals(value) != true)) {
                    this.HousingCertificatePaidAmountField = value;
                    this.RaisePropertyChanged("HousingCertificatePaidAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> HousingCertificatePaidDate {
            get {
                return this.HousingCertificatePaidDateField;
            }
            set {
                if ((this.HousingCertificatePaidDateField.Equals(value) != true)) {
                    this.HousingCertificatePaidDateField = value;
                    this.RaisePropertyChanged("HousingCertificatePaidDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MaximumRent {
            get {
                return this.MaximumRentField;
            }
            set {
                if ((this.MaximumRentField.Equals(value) != true)) {
                    this.MaximumRentField = value;
                    this.RaisePropertyChanged("MaximumRent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MemberCompanyNo {
            get {
                return this.MemberCompanyNoField;
            }
            set {
                if ((this.MemberCompanyNoField.Equals(value) != true)) {
                    this.MemberCompanyNoField = value;
                    this.RaisePropertyChanged("MemberCompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MemberNo {
            get {
                return this.MemberNoField;
            }
            set {
                if ((this.MemberNoField.Equals(value) != true)) {
                    this.MemberNoField = value;
                    this.RaisePropertyChanged("MemberNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MinimumRent {
            get {
                return this.MinimumRentField;
            }
            set {
                if ((this.MinimumRentField.Equals(value) != true)) {
                    this.MinimumRentField = value;
                    this.RaisePropertyChanged("MinimumRent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte NoOfYears {
            get {
                return this.NoOfYearsField;
            }
            set {
                if ((this.NoOfYearsField.Equals(value) != true)) {
                    this.NoOfYearsField = value;
                    this.RaisePropertyChanged("NoOfYears");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> OfferByEmail {
            get {
                return this.OfferByEmailField;
            }
            set {
                if ((this.OfferByEmailField.Equals(value) != true)) {
                    this.OfferByEmailField = value;
                    this.RaisePropertyChanged("OfferByEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PartnerBirthday {
            get {
                return this.PartnerBirthdayField;
            }
            set {
                if ((this.PartnerBirthdayField.Equals(value) != true)) {
                    this.PartnerBirthdayField = value;
                    this.RaisePropertyChanged("PartnerBirthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerCprSerialNo {
            get {
                return this.PartnerCprSerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerCprSerialNoField, value) != true)) {
                    this.PartnerCprSerialNoField = value;
                    this.RaisePropertyChanged("PartnerCprSerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pet {
            get {
                return this.PetField;
            }
            set {
                if ((object.ReferenceEquals(this.PetField, value) != true)) {
                    this.PetField = value;
                    this.RaisePropertyChanged("Pet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PreferredMoveInDate {
            get {
                return this.PreferredMoveInDateField;
            }
            set {
                if ((this.PreferredMoveInDateField.Equals(value) != true)) {
                    this.PreferredMoveInDateField = value;
                    this.RaisePropertyChanged("PreferredMoveInDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ResidenceCompanyNo {
            get {
                return this.ResidenceCompanyNoField;
            }
            set {
                if ((this.ResidenceCompanyNoField.Equals(value) != true)) {
                    this.ResidenceCompanyNoField = value;
                    this.RaisePropertyChanged("ResidenceCompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ResidenceDepartmentNo {
            get {
                return this.ResidenceDepartmentNoField;
            }
            set {
                if ((this.ResidenceDepartmentNoField.Equals(value) != true)) {
                    this.ResidenceDepartmentNoField = value;
                    this.RaisePropertyChanged("ResidenceDepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ResidenceTenancyNo {
            get {
                return this.ResidenceTenancyNoField;
            }
            set {
                if ((this.ResidenceTenancyNoField.Equals(value) != true)) {
                    this.ResidenceTenancyNoField = value;
                    this.RaisePropertyChanged("ResidenceTenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> ResidenceTenantNo {
            get {
                return this.ResidenceTenantNoField;
            }
            set {
                if ((this.ResidenceTenantNoField.Equals(value) != true)) {
                    this.ResidenceTenantNoField = value;
                    this.RaisePropertyChanged("ResidenceTenantNo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoardMember", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class BoardMember : RestEgBoligHeldinTest.EgBoligService.StakeholderBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AlternateInteressentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CprNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CprSerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ElectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ElectedByCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ElectedByDepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ElectedByNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ToField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AlternateInteressentNo {
            get {
                return this.AlternateInteressentNoField;
            }
            set {
                if ((this.AlternateInteressentNoField.Equals(value) != true)) {
                    this.AlternateInteressentNoField = value;
                    this.RaisePropertyChanged("AlternateInteressentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CprNo {
            get {
                return this.CprNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CprNoField, value) != true)) {
                    this.CprNoField = value;
                    this.RaisePropertyChanged("CprNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CprSerialNo {
            get {
                return this.CprSerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CprSerialNoField, value) != true)) {
                    this.CprSerialNoField = value;
                    this.RaisePropertyChanged("CprSerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Elected {
            get {
                return this.ElectedField;
            }
            set {
                if ((this.ElectedField.Equals(value) != true)) {
                    this.ElectedField = value;
                    this.RaisePropertyChanged("Elected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ElectedByCompany {
            get {
                return this.ElectedByCompanyField;
            }
            set {
                if ((this.ElectedByCompanyField.Equals(value) != true)) {
                    this.ElectedByCompanyField = value;
                    this.RaisePropertyChanged("ElectedByCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ElectedByDepartment {
            get {
                return this.ElectedByDepartmentField;
            }
            set {
                if ((this.ElectedByDepartmentField.Equals(value) != true)) {
                    this.ElectedByDepartmentField = value;
                    this.RaisePropertyChanged("ElectedByDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElectedByName {
            get {
                return this.ElectedByNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectedByNameField, value) != true)) {
                    this.ElectedByNameField = value;
                    this.RaisePropertyChanged("ElectedByName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsContact {
            get {
                return this.IsContactField;
            }
            set {
                if ((this.IsContactField.Equals(value) != true)) {
                    this.IsContactField = value;
                    this.RaisePropertyChanged("IsContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleType {
            get {
                return this.RoleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleTypeField, value) != true)) {
                    this.RoleTypeField = value;
                    this.RaisePropertyChanged("RoleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FunctionRoomBooker", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FunctionRoomBooker : RestEgBoligHeldinTest.EgBoligService.StakeholderBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CprNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CprSerialNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CprNo {
            get {
                return this.CprNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CprNoField, value) != true)) {
                    this.CprNoField = value;
                    this.RaisePropertyChanged("CprNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CprSerialNo {
            get {
                return this.CprSerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CprSerialNoField, value) != true)) {
                    this.CprSerialNoField = value;
                    this.RaisePropertyChanged("CprSerialNo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Office", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Office : RestEgBoligHeldinTest.EgBoligService.StakeholderBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeHours1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeHours2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeHours3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeHours4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeHours5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebaddressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHours1 {
            get {
                return this.OfficeHours1Field;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHours1Field, value) != true)) {
                    this.OfficeHours1Field = value;
                    this.RaisePropertyChanged("OfficeHours1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHours2 {
            get {
                return this.OfficeHours2Field;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHours2Field, value) != true)) {
                    this.OfficeHours2Field = value;
                    this.RaisePropertyChanged("OfficeHours2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHours3 {
            get {
                return this.OfficeHours3Field;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHours3Field, value) != true)) {
                    this.OfficeHours3Field = value;
                    this.RaisePropertyChanged("OfficeHours3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHours4 {
            get {
                return this.OfficeHours4Field;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHours4Field, value) != true)) {
                    this.OfficeHours4Field = value;
                    this.RaisePropertyChanged("OfficeHours4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHours5 {
            get {
                return this.OfficeHours5Field;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHours5Field, value) != true)) {
                    this.OfficeHours5Field = value;
                    this.RaisePropertyChanged("OfficeHours5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleType {
            get {
                return this.RoleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleTypeField, value) != true)) {
                    this.RoleTypeField = value;
                    this.RaisePropertyChanged("RoleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Webaddress {
            get {
                return this.WebaddressField;
            }
            set {
                if ((object.ReferenceEquals(this.WebaddressField, value) != true)) {
                    this.WebaddressField = value;
                    this.RaisePropertyChanged("Webaddress");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Personnel", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Personnel : RestEgBoligHeldinTest.EgBoligService.StakeholderBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CprNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CprSerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OccupationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeHours1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeHours2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeHours3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeHours4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeHours5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CprNo {
            get {
                return this.CprNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CprNoField, value) != true)) {
                    this.CprNoField = value;
                    this.RaisePropertyChanged("CprNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CprSerialNo {
            get {
                return this.CprSerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CprSerialNoField, value) != true)) {
                    this.CprSerialNoField = value;
                    this.RaisePropertyChanged("CprSerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Ended {
            get {
                return this.EndedField;
            }
            set {
                if ((this.EndedField.Equals(value) != true)) {
                    this.EndedField = value;
                    this.RaisePropertyChanged("Ended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Occupation {
            get {
                return this.OccupationField;
            }
            set {
                if ((object.ReferenceEquals(this.OccupationField, value) != true)) {
                    this.OccupationField = value;
                    this.RaisePropertyChanged("Occupation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHours1 {
            get {
                return this.OfficeHours1Field;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHours1Field, value) != true)) {
                    this.OfficeHours1Field = value;
                    this.RaisePropertyChanged("OfficeHours1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHours2 {
            get {
                return this.OfficeHours2Field;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHours2Field, value) != true)) {
                    this.OfficeHours2Field = value;
                    this.RaisePropertyChanged("OfficeHours2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHours3 {
            get {
                return this.OfficeHours3Field;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHours3Field, value) != true)) {
                    this.OfficeHours3Field = value;
                    this.RaisePropertyChanged("OfficeHours3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHours4 {
            get {
                return this.OfficeHours4Field;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHours4Field, value) != true)) {
                    this.OfficeHours4Field = value;
                    this.RaisePropertyChanged("OfficeHours4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHours5 {
            get {
                return this.OfficeHours5Field;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHours5Field, value) != true)) {
                    this.OfficeHours5Field = value;
                    this.RaisePropertyChanged("OfficeHours5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleType {
            get {
                return this.RoleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleTypeField, value) != true)) {
                    this.RoleTypeField = value;
                    this.RaisePropertyChanged("RoleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Started {
            get {
                return this.StartedField;
            }
            set {
                if ((this.StartedField.Equals(value) != true)) {
                    this.StartedField = value;
                    this.RaisePropertyChanged("Started");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenancyRent", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class TenancyRent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldNo {
            get {
                return this.FieldNoField;
            }
            set {
                if ((this.FieldNoField.Equals(value) != true)) {
                    this.FieldNoField = value;
                    this.RaisePropertyChanged("FieldNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenantTransaction", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class TenantTransaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AppendixExistsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DocumentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> InvoiceExistsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> RentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TenantNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AppendixExists {
            get {
                return this.AppendixExistsField;
            }
            set {
                if ((this.AppendixExistsField.Equals(value) != true)) {
                    this.AppendixExistsField = value;
                    this.RaisePropertyChanged("AppendixExists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DocumentNo {
            get {
                return this.DocumentNoField;
            }
            set {
                if ((this.DocumentNoField.Equals(value) != true)) {
                    this.DocumentNoField = value;
                    this.RaisePropertyChanged("DocumentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> InvoiceExists {
            get {
                return this.InvoiceExistsField;
            }
            set {
                if ((this.InvoiceExistsField.Equals(value) != true)) {
                    this.InvoiceExistsField = value;
                    this.RaisePropertyChanged("InvoiceExists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Journal {
            get {
                return this.JournalField;
            }
            set {
                if ((this.JournalField.Equals(value) != true)) {
                    this.JournalField = value;
                    this.RaisePropertyChanged("Journal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Period {
            get {
                return this.PeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodField, value) != true)) {
                    this.PeriodField = value;
                    this.RaisePropertyChanged("Period");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((this.ReferenceField.Equals(value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> RentType {
            get {
                return this.RentTypeField;
            }
            set {
                if ((this.RentTypeField.Equals(value) != true)) {
                    this.RentTypeField = value;
                    this.RaisePropertyChanged("RentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyNo {
            get {
                return this.TenancyNoField;
            }
            set {
                if ((this.TenancyNoField.Equals(value) != true)) {
                    this.TenancyNoField = value;
                    this.RaisePropertyChanged("TenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TenantNo {
            get {
                return this.TenantNoField;
            }
            set {
                if ((this.TenantNoField.Equals(value) != true)) {
                    this.TenantNoField = value;
                    this.RaisePropertyChanged("TenantNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeySet", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class KeySet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyBrand {
            get {
                return this.KeyBrandField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyBrandField, value) != true)) {
                    this.KeyBrandField = value;
                    this.RaisePropertyChanged("KeyBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyType {
            get {
                return this.KeyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyTypeField, value) != true)) {
                    this.KeyTypeField = value;
                    this.RaisePropertyChanged("KeyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenantDeposit", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class TenantDeposit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> RentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> RentType {
            get {
                return this.RentTypeField;
            }
            set {
                if ((this.RentTypeField.Equals(value) != true)) {
                    this.RentTypeField = value;
                    this.RaisePropertyChanged("RentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UtilityConsumptionSummary", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class UtilityConsumptionSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountOnAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountSettledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeterReadingCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> RentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RepaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmountOnAccount {
            get {
                return this.AmountOnAccountField;
            }
            set {
                if ((this.AmountOnAccountField.Equals(value) != true)) {
                    this.AmountOnAccountField = value;
                    this.RaisePropertyChanged("AmountOnAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmountSettled {
            get {
                return this.AmountSettledField;
            }
            set {
                if ((this.AmountSettledField.Equals(value) != true)) {
                    this.AmountSettledField = value;
                    this.RaisePropertyChanged("AmountSettled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmountUsed {
            get {
                return this.AmountUsedField;
            }
            set {
                if ((this.AmountUsedField.Equals(value) != true)) {
                    this.AmountUsedField = value;
                    this.RaisePropertyChanged("AmountUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Fee {
            get {
                return this.FeeField;
            }
            set {
                if ((this.FeeField.Equals(value) != true)) {
                    this.FeeField = value;
                    this.RaisePropertyChanged("Fee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeterReadingCompany {
            get {
                return this.MeterReadingCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterReadingCompanyField, value) != true)) {
                    this.MeterReadingCompanyField = value;
                    this.RaisePropertyChanged("MeterReadingCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> RentType {
            get {
                return this.RentTypeField;
            }
            set {
                if ((this.RentTypeField.Equals(value) != true)) {
                    this.RentTypeField = value;
                    this.RaisePropertyChanged("RentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RepaymentDate {
            get {
                return this.RepaymentDateField;
            }
            set {
                if ((this.RepaymentDateField.Equals(value) != true)) {
                    this.RepaymentDateField = value;
                    this.RaisePropertyChanged("RepaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UtilityMeter", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class UtilityMeter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.UtilityMeterMeasurement[] MeasurementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeterNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.UtilityMeterMeasurement[] Measurements {
            get {
                return this.MeasurementsField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasurementsField, value) != true)) {
                    this.MeasurementsField = value;
                    this.RaisePropertyChanged("Measurements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeterNumber {
            get {
                return this.MeterNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterNumberField, value) != true)) {
                    this.MeterNumberField = value;
                    this.RaisePropertyChanged("MeterNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UtilityMeterMeasurement", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class UtilityMeterMeasurement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MeasurementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MeasurementDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ZeroedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Measurement {
            get {
                return this.MeasurementField;
            }
            set {
                if ((this.MeasurementField.Equals(value) != true)) {
                    this.MeasurementField = value;
                    this.RaisePropertyChanged("Measurement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MeasurementDate {
            get {
                return this.MeasurementDateField;
            }
            set {
                if ((this.MeasurementDateField.Equals(value) != true)) {
                    this.MeasurementDateField = value;
                    this.RaisePropertyChanged("MeasurementDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Zeroed {
            get {
                return this.ZeroedField;
            }
            set {
                if ((this.ZeroedField.Equals(value) != true)) {
                    this.ZeroedField = value;
                    this.RaisePropertyChanged("Zeroed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="History", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class History : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondaryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryType {
            get {
                return this.PrimaryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryTypeField, value) != true)) {
                    this.PrimaryTypeField = value;
                    this.RaisePropertyChanged("PrimaryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondaryType {
            get {
                return this.SecondaryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryTypeField, value) != true)) {
                    this.SecondaryTypeField = value;
                    this.RaisePropertyChanged("SecondaryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenancyRentSpec", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class TenancyRentSpec : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RentKindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TenantNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RentKind {
            get {
                return this.RentKindField;
            }
            set {
                if ((this.RentKindField.Equals(value) != true)) {
                    this.RentKindField = value;
                    this.RaisePropertyChanged("RentKind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RentType {
            get {
                return this.RentTypeField;
            }
            set {
                if ((this.RentTypeField.Equals(value) != true)) {
                    this.RentTypeField = value;
                    this.RaisePropertyChanged("RentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyNo {
            get {
                return this.TenancyNoField;
            }
            set {
                if ((this.TenancyNoField.Equals(value) != true)) {
                    this.TenancyNoField = value;
                    this.RaisePropertyChanged("TenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TenantNo {
            get {
                return this.TenantNoField;
            }
            set {
                if ((this.TenantNoField.Equals(value) != true)) {
                    this.TenantNoField = value;
                    this.RaisePropertyChanged("TenantNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BankAccountInformation", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class BankAccountInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankCountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IbanNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InteressentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternationalAccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameOfBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameOnAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SwiftCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNo {
            get {
                return this.AccountNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNoField, value) != true)) {
                    this.AccountNoField = value;
                    this.RaisePropertyChanged("AccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankCode {
            get {
                return this.BankCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankCodeField, value) != true)) {
                    this.BankCodeField = value;
                    this.RaisePropertyChanged("BankCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankCountryCode {
            get {
                return this.BankCountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankCountryCodeField, value) != true)) {
                    this.BankCountryCodeField = value;
                    this.RaisePropertyChanged("BankCountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankNo {
            get {
                return this.BankNoField;
            }
            set {
                if ((object.ReferenceEquals(this.BankNoField, value) != true)) {
                    this.BankNoField = value;
                    this.RaisePropertyChanged("BankNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IbanNo {
            get {
                return this.IbanNoField;
            }
            set {
                if ((object.ReferenceEquals(this.IbanNoField, value) != true)) {
                    this.IbanNoField = value;
                    this.RaisePropertyChanged("IbanNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InteressentNo {
            get {
                return this.InteressentNoField;
            }
            set {
                if ((this.InteressentNoField.Equals(value) != true)) {
                    this.InteressentNoField = value;
                    this.RaisePropertyChanged("InteressentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternationalAccountNo {
            get {
                return this.InternationalAccountNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InternationalAccountNoField, value) != true)) {
                    this.InternationalAccountNoField = value;
                    this.RaisePropertyChanged("InternationalAccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameOfBank {
            get {
                return this.NameOfBankField;
            }
            set {
                if ((object.ReferenceEquals(this.NameOfBankField, value) != true)) {
                    this.NameOfBankField = value;
                    this.RaisePropertyChanged("NameOfBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameOnAccount {
            get {
                return this.NameOnAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.NameOnAccountField, value) != true)) {
                    this.NameOnAccountField = value;
                    this.RaisePropertyChanged("NameOnAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegNo {
            get {
                return this.RegNoField;
            }
            set {
                if ((object.ReferenceEquals(this.RegNoField, value) != true)) {
                    this.RegNoField = value;
                    this.RaisePropertyChanged("RegNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SwiftCode {
            get {
                return this.SwiftCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SwiftCodeField, value) != true)) {
                    this.SwiftCodeField = value;
                    this.RaisePropertyChanged("SwiftCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payment", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Payment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.Payment.DepositAmount[] DepositAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.Payment.FunctionRoomBookingAmount[] FunctionRoomBookingAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount[] NewAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.Payment.RenewAmount[] RenewAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.Payment.RentAmount[] RentAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.Payment.UpgradeAmount[] UpgradeAmountsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.Payment.DepositAmount[] DepositAmounts {
            get {
                return this.DepositAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.DepositAmountsField, value) != true)) {
                    this.DepositAmountsField = value;
                    this.RaisePropertyChanged("DepositAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.Payment.FunctionRoomBookingAmount[] FunctionRoomBookingAmounts {
            get {
                return this.FunctionRoomBookingAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionRoomBookingAmountsField, value) != true)) {
                    this.FunctionRoomBookingAmountsField = value;
                    this.RaisePropertyChanged("FunctionRoomBookingAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount[] NewAmounts {
            get {
                return this.NewAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewAmountsField, value) != true)) {
                    this.NewAmountsField = value;
                    this.RaisePropertyChanged("NewAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.Payment.RenewAmount[] RenewAmounts {
            get {
                return this.RenewAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.RenewAmountsField, value) != true)) {
                    this.RenewAmountsField = value;
                    this.RaisePropertyChanged("RenewAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.Payment.RentAmount[] RentAmounts {
            get {
                return this.RentAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.RentAmountsField, value) != true)) {
                    this.RentAmountsField = value;
                    this.RaisePropertyChanged("RentAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionId {
            get {
                return this.TransactionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIdField, value) != true)) {
                    this.TransactionIdField = value;
                    this.RaisePropertyChanged("TransactionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.Payment.UpgradeAmount[] UpgradeAmounts {
            get {
                return this.UpgradeAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.UpgradeAmountsField, value) != true)) {
                    this.UpgradeAmountsField = value;
                    this.RaisePropertyChanged("UpgradeAmounts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Payment.DepositAmount", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct DepositAmount : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal DepositFeeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short TenantCompanyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short TenantDepartmentNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short TenantTenancyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte TenantTenantNoField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal DepositFee {
                get {
                    return this.DepositFeeField;
                }
                set {
                    if ((this.DepositFeeField.Equals(value) != true)) {
                        this.DepositFeeField = value;
                        this.RaisePropertyChanged("DepositFee");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short TenantCompanyNo {
                get {
                    return this.TenantCompanyNoField;
                }
                set {
                    if ((this.TenantCompanyNoField.Equals(value) != true)) {
                        this.TenantCompanyNoField = value;
                        this.RaisePropertyChanged("TenantCompanyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short TenantDepartmentNo {
                get {
                    return this.TenantDepartmentNoField;
                }
                set {
                    if ((this.TenantDepartmentNoField.Equals(value) != true)) {
                        this.TenantDepartmentNoField = value;
                        this.RaisePropertyChanged("TenantDepartmentNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short TenantTenancyNo {
                get {
                    return this.TenantTenancyNoField;
                }
                set {
                    if ((this.TenantTenancyNoField.Equals(value) != true)) {
                        this.TenantTenancyNoField = value;
                        this.RaisePropertyChanged("TenantTenancyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte TenantTenantNo {
                get {
                    return this.TenantTenantNoField;
                }
                set {
                    if ((this.TenantTenantNoField.Equals(value) != true)) {
                        this.TenantTenantNoField = value;
                        this.RaisePropertyChanged("TenantTenantNo");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Payment.FunctionRoomBookingAmount", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct FunctionRoomBookingAmount : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal DepositFeeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int PrimaryBookingIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal RentFeeField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal DepositFee {
                get {
                    return this.DepositFeeField;
                }
                set {
                    if ((this.DepositFeeField.Equals(value) != true)) {
                        this.DepositFeeField = value;
                        this.RaisePropertyChanged("DepositFee");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int PrimaryBookingId {
                get {
                    return this.PrimaryBookingIdField;
                }
                set {
                    if ((this.PrimaryBookingIdField.Equals(value) != true)) {
                        this.PrimaryBookingIdField = value;
                        this.RaisePropertyChanged("PrimaryBookingId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal RentFee {
                get {
                    return this.RentFeeField;
                }
                set {
                    if ((this.RentFeeField.Equals(value) != true)) {
                        this.RentFeeField = value;
                        this.RaisePropertyChanged("RentFee");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Payment.NewAmount", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct NewAmount : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal ActivationFeeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private RestEgBoligHeldinTest.EgBoligService.Campaign CampaignField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short CompanyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<short> CompanyNoToPayInField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal JoinFeeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte NoOfYearsField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool PaymentByGiroField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte StatusField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short[] TenancyTypesField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal UnionFeeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string WaitlistTypeField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal ActivationFee {
                get {
                    return this.ActivationFeeField;
                }
                set {
                    if ((this.ActivationFeeField.Equals(value) != true)) {
                        this.ActivationFeeField = value;
                        this.RaisePropertyChanged("ActivationFee");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public RestEgBoligHeldinTest.EgBoligService.Campaign Campaign {
                get {
                    return this.CampaignField;
                }
                set {
                    if ((object.ReferenceEquals(this.CampaignField, value) != true)) {
                        this.CampaignField = value;
                        this.RaisePropertyChanged("Campaign");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short CompanyNo {
                get {
                    return this.CompanyNoField;
                }
                set {
                    if ((this.CompanyNoField.Equals(value) != true)) {
                        this.CompanyNoField = value;
                        this.RaisePropertyChanged("CompanyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<short> CompanyNoToPayIn {
                get {
                    return this.CompanyNoToPayInField;
                }
                set {
                    if ((this.CompanyNoToPayInField.Equals(value) != true)) {
                        this.CompanyNoToPayInField = value;
                        this.RaisePropertyChanged("CompanyNoToPayIn");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal JoinFee {
                get {
                    return this.JoinFeeField;
                }
                set {
                    if ((this.JoinFeeField.Equals(value) != true)) {
                        this.JoinFeeField = value;
                        this.RaisePropertyChanged("JoinFee");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte NoOfYears {
                get {
                    return this.NoOfYearsField;
                }
                set {
                    if ((this.NoOfYearsField.Equals(value) != true)) {
                        this.NoOfYearsField = value;
                        this.RaisePropertyChanged("NoOfYears");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool PaymentByGiro {
                get {
                    return this.PaymentByGiroField;
                }
                set {
                    if ((this.PaymentByGiroField.Equals(value) != true)) {
                        this.PaymentByGiroField = value;
                        this.RaisePropertyChanged("PaymentByGiro");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte Status {
                get {
                    return this.StatusField;
                }
                set {
                    if ((this.StatusField.Equals(value) != true)) {
                        this.StatusField = value;
                        this.RaisePropertyChanged("Status");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short[] TenancyTypes {
                get {
                    return this.TenancyTypesField;
                }
                set {
                    if ((object.ReferenceEquals(this.TenancyTypesField, value) != true)) {
                        this.TenancyTypesField = value;
                        this.RaisePropertyChanged("TenancyTypes");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal UnionFee {
                get {
                    return this.UnionFeeField;
                }
                set {
                    if ((this.UnionFeeField.Equals(value) != true)) {
                        this.UnionFeeField = value;
                        this.RaisePropertyChanged("UnionFee");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string WaitlistType {
                get {
                    return this.WaitlistTypeField;
                }
                set {
                    if ((object.ReferenceEquals(this.WaitlistTypeField, value) != true)) {
                        this.WaitlistTypeField = value;
                        this.RaisePropertyChanged("WaitlistType");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Payment.RenewAmount", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct RenewAmount : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short CompanyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short MemberCompanyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal MemberNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal RenewFeeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string WaitlistTypeField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short CompanyNo {
                get {
                    return this.CompanyNoField;
                }
                set {
                    if ((this.CompanyNoField.Equals(value) != true)) {
                        this.CompanyNoField = value;
                        this.RaisePropertyChanged("CompanyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short MemberCompanyNo {
                get {
                    return this.MemberCompanyNoField;
                }
                set {
                    if ((this.MemberCompanyNoField.Equals(value) != true)) {
                        this.MemberCompanyNoField = value;
                        this.RaisePropertyChanged("MemberCompanyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal MemberNo {
                get {
                    return this.MemberNoField;
                }
                set {
                    if ((this.MemberNoField.Equals(value) != true)) {
                        this.MemberNoField = value;
                        this.RaisePropertyChanged("MemberNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal RenewFee {
                get {
                    return this.RenewFeeField;
                }
                set {
                    if ((this.RenewFeeField.Equals(value) != true)) {
                        this.RenewFeeField = value;
                        this.RaisePropertyChanged("RenewFee");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string WaitlistType {
                get {
                    return this.WaitlistTypeField;
                }
                set {
                    if ((object.ReferenceEquals(this.WaitlistTypeField, value) != true)) {
                        this.WaitlistTypeField = value;
                        this.RaisePropertyChanged("WaitlistType");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Payment.RentAmount", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct RentAmount : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal RentFeeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short TenantCompanyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short TenantDepartmentNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short TenantTenancyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte TenantTenantNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string YearAndMonthField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal RentFee {
                get {
                    return this.RentFeeField;
                }
                set {
                    if ((this.RentFeeField.Equals(value) != true)) {
                        this.RentFeeField = value;
                        this.RaisePropertyChanged("RentFee");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short TenantCompanyNo {
                get {
                    return this.TenantCompanyNoField;
                }
                set {
                    if ((this.TenantCompanyNoField.Equals(value) != true)) {
                        this.TenantCompanyNoField = value;
                        this.RaisePropertyChanged("TenantCompanyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short TenantDepartmentNo {
                get {
                    return this.TenantDepartmentNoField;
                }
                set {
                    if ((this.TenantDepartmentNoField.Equals(value) != true)) {
                        this.TenantDepartmentNoField = value;
                        this.RaisePropertyChanged("TenantDepartmentNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short TenantTenancyNo {
                get {
                    return this.TenantTenancyNoField;
                }
                set {
                    if ((this.TenantTenancyNoField.Equals(value) != true)) {
                        this.TenantTenancyNoField = value;
                        this.RaisePropertyChanged("TenantTenancyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte TenantTenantNo {
                get {
                    return this.TenantTenantNoField;
                }
                set {
                    if ((this.TenantTenantNoField.Equals(value) != true)) {
                        this.TenantTenantNoField = value;
                        this.RaisePropertyChanged("TenantTenantNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string YearAndMonth {
                get {
                    return this.YearAndMonthField;
                }
                set {
                    if ((object.ReferenceEquals(this.YearAndMonthField, value) != true)) {
                        this.YearAndMonthField = value;
                        this.RaisePropertyChanged("YearAndMonth");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Payment.UpgradeAmount", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct UpgradeAmount : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short CompanyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsRenewField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short MemberCompanyNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal MemberNoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal UpgradeFeeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string WaitlistTypeField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short CompanyNo {
                get {
                    return this.CompanyNoField;
                }
                set {
                    if ((this.CompanyNoField.Equals(value) != true)) {
                        this.CompanyNoField = value;
                        this.RaisePropertyChanged("CompanyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsRenew {
                get {
                    return this.IsRenewField;
                }
                set {
                    if ((this.IsRenewField.Equals(value) != true)) {
                        this.IsRenewField = value;
                        this.RaisePropertyChanged("IsRenew");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short MemberCompanyNo {
                get {
                    return this.MemberCompanyNoField;
                }
                set {
                    if ((this.MemberCompanyNoField.Equals(value) != true)) {
                        this.MemberCompanyNoField = value;
                        this.RaisePropertyChanged("MemberCompanyNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal MemberNo {
                get {
                    return this.MemberNoField;
                }
                set {
                    if ((this.MemberNoField.Equals(value) != true)) {
                        this.MemberNoField = value;
                        this.RaisePropertyChanged("MemberNo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal UpgradeFee {
                get {
                    return this.UpgradeFeeField;
                }
                set {
                    if ((this.UpgradeFeeField.Equals(value) != true)) {
                        this.UpgradeFeeField = value;
                        this.RaisePropertyChanged("UpgradeFee");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string WaitlistType {
                get {
                    return this.WaitlistTypeField;
                }
                set {
                    if ((object.ReferenceEquals(this.WaitlistTypeField, value) != true)) {
                        this.WaitlistTypeField = value;
                        this.RaisePropertyChanged("WaitlistType");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Campaign", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Campaign : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Login", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Login : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.BoardMember[] BoardMembersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CprNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InteressentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastWebserviceLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.MemberNumber[] MemberNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.RoleType[] RoletypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.BoardMember[] BoardMembers {
            get {
                return this.BoardMembersField;
            }
            set {
                if ((object.ReferenceEquals(this.BoardMembersField, value) != true)) {
                    this.BoardMembersField = value;
                    this.RaisePropertyChanged("BoardMembers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CprNo {
            get {
                return this.CprNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CprNoField, value) != true)) {
                    this.CprNoField = value;
                    this.RaisePropertyChanged("CprNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InteressentNo {
            get {
                return this.InteressentNoField;
            }
            set {
                if ((this.InteressentNoField.Equals(value) != true)) {
                    this.InteressentNoField = value;
                    this.RaisePropertyChanged("InteressentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastWebserviceLogin {
            get {
                return this.LastWebserviceLoginField;
            }
            set {
                if ((this.LastWebserviceLoginField.Equals(value) != true)) {
                    this.LastWebserviceLoginField = value;
                    this.RaisePropertyChanged("LastWebserviceLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.MemberNumber[] MemberNo {
            get {
                return this.MemberNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberNoField, value) != true)) {
                    this.MemberNoField = value;
                    this.RaisePropertyChanged("MemberNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.RoleType[] Roletypes {
            get {
                return this.RoletypesField;
            }
            set {
                if ((object.ReferenceEquals(this.RoletypesField, value) != true)) {
                    this.RoletypesField = value;
                    this.RaisePropertyChanged("Roletypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberNumber", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial struct MemberNumber : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MemberNoField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MemberNo {
            get {
                return this.MemberNoField;
            }
            set {
                if ((this.MemberNoField.Equals(value) != true)) {
                    this.MemberNoField = value;
                    this.RaisePropertyChanged("MemberNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleType", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class RoleType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.Role[] RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.Role[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoardPortalAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoletypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoardPortalAccess {
            get {
                return this.BoardPortalAccessField;
            }
            set {
                if ((object.ReferenceEquals(this.BoardPortalAccessField, value) != true)) {
                    this.BoardPortalAccessField = value;
                    this.RaisePropertyChanged("BoardPortalAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleKey {
            get {
                return this.RoleKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleKeyField, value) != true)) {
                    this.RoleKeyField = value;
                    this.RaisePropertyChanged("RoleKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Roletype {
            get {
                return this.RoletypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoletypeField, value) != true)) {
                    this.RoletypeField = value;
                    this.RaisePropertyChanged("Roletype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FunctionRoom", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FunctionRoom : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BookingStopDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookingTimeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanOnlyBeBookedInternallyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FunctionRoom.FunctionRoomCancellationFee CancellationFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FunctionRoom.FunctionRoomDeposit DepositField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.DepartmentKey[] InternalDepartmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxNoOfDaysInAdvanceToBookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> MaxNoOfDaysToRentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> MaxNoOfPersonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublicDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FunctionRoomRent RentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SqmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FunctionRoomType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> WeekendEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> WeekendStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ZipNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BookingStopDate {
            get {
                return this.BookingStopDateField;
            }
            set {
                if ((this.BookingStopDateField.Equals(value) != true)) {
                    this.BookingStopDateField = value;
                    this.RaisePropertyChanged("BookingStopDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookingTimeFrom {
            get {
                return this.BookingTimeFromField;
            }
            set {
                if ((object.ReferenceEquals(this.BookingTimeFromField, value) != true)) {
                    this.BookingTimeFromField = value;
                    this.RaisePropertyChanged("BookingTimeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanOnlyBeBookedInternally {
            get {
                return this.CanOnlyBeBookedInternallyField;
            }
            set {
                if ((this.CanOnlyBeBookedInternallyField.Equals(value) != true)) {
                    this.CanOnlyBeBookedInternallyField = value;
                    this.RaisePropertyChanged("CanOnlyBeBookedInternally");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FunctionRoom.FunctionRoomCancellationFee CancellationFee {
            get {
                return this.CancellationFeeField;
            }
            set {
                if ((this.CancellationFeeField.Equals(value) != true)) {
                    this.CancellationFeeField = value;
                    this.RaisePropertyChanged("CancellationFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactInfo {
            get {
                return this.ContactInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactInfoField, value) != true)) {
                    this.ContactInfoField = value;
                    this.RaisePropertyChanged("ContactInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FunctionRoom.FunctionRoomDeposit Deposit {
            get {
                return this.DepositField;
            }
            set {
                if ((this.DepositField.Equals(value) != true)) {
                    this.DepositField = value;
                    this.RaisePropertyChanged("Deposit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.DepartmentKey[] InternalDepartments {
            get {
                return this.InternalDepartmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalDepartmentsField, value) != true)) {
                    this.InternalDepartmentsField = value;
                    this.RaisePropertyChanged("InternalDepartments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxNoOfDaysInAdvanceToBook {
            get {
                return this.MaxNoOfDaysInAdvanceToBookField;
            }
            set {
                if ((this.MaxNoOfDaysInAdvanceToBookField.Equals(value) != true)) {
                    this.MaxNoOfDaysInAdvanceToBookField = value;
                    this.RaisePropertyChanged("MaxNoOfDaysInAdvanceToBook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MaxNoOfDaysToRent {
            get {
                return this.MaxNoOfDaysToRentField;
            }
            set {
                if ((this.MaxNoOfDaysToRentField.Equals(value) != true)) {
                    this.MaxNoOfDaysToRentField = value;
                    this.RaisePropertyChanged("MaxNoOfDaysToRent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MaxNoOfPersons {
            get {
                return this.MaxNoOfPersonsField;
            }
            set {
                if ((this.MaxNoOfPersonsField.Equals(value) != true)) {
                    this.MaxNoOfPersonsField = value;
                    this.RaisePropertyChanged("MaxNoOfPersons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublicDescription {
            get {
                return this.PublicDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PublicDescriptionField, value) != true)) {
                    this.PublicDescriptionField = value;
                    this.RaisePropertyChanged("PublicDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FunctionRoomRent Rent {
            get {
                return this.RentField;
            }
            set {
                if ((object.ReferenceEquals(this.RentField, value) != true)) {
                    this.RentField = value;
                    this.RaisePropertyChanged("Rent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTime {
            get {
                return this.ReturnTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnTimeField, value) != true)) {
                    this.ReturnTimeField = value;
                    this.RaisePropertyChanged("ReturnTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Sqm {
            get {
                return this.SqmField;
            }
            set {
                if ((this.SqmField.Equals(value) != true)) {
                    this.SqmField = value;
                    this.RaisePropertyChanged("Sqm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TenancyNo {
            get {
                return this.TenancyNoField;
            }
            set {
                if ((this.TenancyNoField.Equals(value) != true)) {
                    this.TenancyNoField = value;
                    this.RaisePropertyChanged("TenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FunctionRoomType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> WeekendEnd {
            get {
                return this.WeekendEndField;
            }
            set {
                if ((this.WeekendEndField.Equals(value) != true)) {
                    this.WeekendEndField = value;
                    this.RaisePropertyChanged("WeekendEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> WeekendStart {
            get {
                return this.WeekendStartField;
            }
            set {
                if ((this.WeekendStartField.Equals(value) != true)) {
                    this.WeekendStartField = value;
                    this.RaisePropertyChanged("WeekendStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCity {
            get {
                return this.ZipCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCityField, value) != true)) {
                    this.ZipCityField = value;
                    this.RaisePropertyChanged("ZipCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ZipNo {
            get {
                return this.ZipNoField;
            }
            set {
                if ((this.ZipNoField.Equals(value) != true)) {
                    this.ZipNoField = value;
                    this.RaisePropertyChanged("ZipNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="FunctionRoom.FunctionRoomCancellationFee", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct FunctionRoomCancellationFee : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<decimal> ExternalFeeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<decimal> InternalFeeField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<decimal> ExternalFee {
                get {
                    return this.ExternalFeeField;
                }
                set {
                    if ((this.ExternalFeeField.Equals(value) != true)) {
                        this.ExternalFeeField = value;
                        this.RaisePropertyChanged("ExternalFee");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<decimal> InternalFee {
                get {
                    return this.InternalFeeField;
                }
                set {
                    if ((this.InternalFeeField.Equals(value) != true)) {
                        this.InternalFeeField = value;
                        this.RaisePropertyChanged("InternalFee");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="FunctionRoom.FunctionRoomDeposit", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct FunctionRoomDeposit : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<decimal> ExternalDepositField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<decimal> InternalDepositField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<decimal> ExternalDeposit {
                get {
                    return this.ExternalDepositField;
                }
                set {
                    if ((this.ExternalDepositField.Equals(value) != true)) {
                        this.ExternalDepositField = value;
                        this.RaisePropertyChanged("ExternalDeposit");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<decimal> InternalDeposit {
                get {
                    return this.InternalDepositField;
                }
                set {
                    if ((this.InternalDepositField.Equals(value) != true)) {
                        this.InternalDepositField = value;
                        this.RaisePropertyChanged("InternalDeposit");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FunctionRoomRent", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FunctionRoomRent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FunctionRoomRent.Day[] DailyRentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FunctionRoomRent.Rent SubsequentDayRentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FunctionRoomRent.Rent WeekendRentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FunctionRoomRent.Day[] DailyRent {
            get {
                return this.DailyRentField;
            }
            set {
                if ((object.ReferenceEquals(this.DailyRentField, value) != true)) {
                    this.DailyRentField = value;
                    this.RaisePropertyChanged("DailyRent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FunctionRoomRent.Rent SubsequentDayRent {
            get {
                return this.SubsequentDayRentField;
            }
            set {
                if ((this.SubsequentDayRentField.Equals(value) != true)) {
                    this.SubsequentDayRentField = value;
                    this.RaisePropertyChanged("SubsequentDayRent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FunctionRoomRent.Rent WeekendRent {
            get {
                return this.WeekendRentField;
            }
            set {
                if ((this.WeekendRentField.Equals(value) != true)) {
                    this.WeekendRentField = value;
                    this.RaisePropertyChanged("WeekendRent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="FunctionRoomRent.Rent", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct Rent : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<decimal> ExternalPriceField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<decimal> InternalPriceField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<decimal> ExternalPrice {
                get {
                    return this.ExternalPriceField;
                }
                set {
                    if ((this.ExternalPriceField.Equals(value) != true)) {
                        this.ExternalPriceField = value;
                        this.RaisePropertyChanged("ExternalPrice");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<decimal> InternalPrice {
                get {
                    return this.InternalPriceField;
                }
                set {
                    if ((this.InternalPriceField.Equals(value) != true)) {
                        this.InternalPriceField = value;
                        this.RaisePropertyChanged("InternalPrice");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="FunctionRoomRent.Day", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct Day : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsPartOfWeekendField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private RestEgBoligHeldinTest.EgBoligService.FunctionRoomRent.Rent RentField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.DayOfWeek WeekdayField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsPartOfWeekend {
                get {
                    return this.IsPartOfWeekendField;
                }
                set {
                    if ((this.IsPartOfWeekendField.Equals(value) != true)) {
                        this.IsPartOfWeekendField = value;
                        this.RaisePropertyChanged("IsPartOfWeekend");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public RestEgBoligHeldinTest.EgBoligService.FunctionRoomRent.Rent Rent {
                get {
                    return this.RentField;
                }
                set {
                    if ((this.RentField.Equals(value) != true)) {
                        this.RentField = value;
                        this.RaisePropertyChanged("Rent");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DayOfWeek Weekday {
                get {
                    return this.WeekdayField;
                }
                set {
                    if ((this.WeekdayField.Equals(value) != true)) {
                        this.WeekdayField = value;
                        this.RaisePropertyChanged("Weekday");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FunctionRoomType", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FunctionRoomType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentKey", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class DepartmentKey : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FunctionRoomBooking", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FunctionRoomBooking : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BookingEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BookingStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CancelledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InteressentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FunctionRoomInvoice[] InvoicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimaryBookingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefundMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> RegNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecondaryBookingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TenancyNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AccountNo {
            get {
                return this.AccountNoField;
            }
            set {
                if ((this.AccountNoField.Equals(value) != true)) {
                    this.AccountNoField = value;
                    this.RaisePropertyChanged("AccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BookingEnd {
            get {
                return this.BookingEndField;
            }
            set {
                if ((this.BookingEndField.Equals(value) != true)) {
                    this.BookingEndField = value;
                    this.RaisePropertyChanged("BookingEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BookingStart {
            get {
                return this.BookingStartField;
            }
            set {
                if ((this.BookingStartField.Equals(value) != true)) {
                    this.BookingStartField = value;
                    this.RaisePropertyChanged("BookingStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Cancelled {
            get {
                return this.CancelledField;
            }
            set {
                if ((this.CancelledField.Equals(value) != true)) {
                    this.CancelledField = value;
                    this.RaisePropertyChanged("Cancelled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InteressentNo {
            get {
                return this.InteressentNoField;
            }
            set {
                if ((this.InteressentNoField.Equals(value) != true)) {
                    this.InteressentNoField = value;
                    this.RaisePropertyChanged("InteressentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FunctionRoomInvoice[] Invoices {
            get {
                return this.InvoicesField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoicesField, value) != true)) {
                    this.InvoicesField = value;
                    this.RaisePropertyChanged("Invoices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimaryBookingId {
            get {
                return this.PrimaryBookingIdField;
            }
            set {
                if ((this.PrimaryBookingIdField.Equals(value) != true)) {
                    this.PrimaryBookingIdField = value;
                    this.RaisePropertyChanged("PrimaryBookingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefundMethod {
            get {
                return this.RefundMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.RefundMethodField, value) != true)) {
                    this.RefundMethodField = value;
                    this.RaisePropertyChanged("RefundMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> RegNo {
            get {
                return this.RegNoField;
            }
            set {
                if ((this.RegNoField.Equals(value) != true)) {
                    this.RegNoField = value;
                    this.RaisePropertyChanged("RegNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecondaryBookingId {
            get {
                return this.SecondaryBookingIdField;
            }
            set {
                if ((this.SecondaryBookingIdField.Equals(value) != true)) {
                    this.SecondaryBookingIdField = value;
                    this.RaisePropertyChanged("SecondaryBookingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TenancyNo {
            get {
                return this.TenancyNoField;
            }
            set {
                if ((this.TenancyNoField.Equals(value) != true)) {
                    this.TenancyNoField = value;
                    this.RaisePropertyChanged("TenancyNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FunctionRoomInvoice", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FunctionRoomInvoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AutoNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DiscountRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PaidDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimaryBookingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RentKindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecondaryBookingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AutoNo {
            get {
                return this.AutoNoField;
            }
            set {
                if ((this.AutoNoField.Equals(value) != true)) {
                    this.AutoNoField = value;
                    this.RaisePropertyChanged("AutoNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DiscountRate {
            get {
                return this.DiscountRateField;
            }
            set {
                if ((this.DiscountRateField.Equals(value) != true)) {
                    this.DiscountRateField = value;
                    this.RaisePropertyChanged("DiscountRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PaidDate {
            get {
                return this.PaidDateField;
            }
            set {
                if ((this.PaidDateField.Equals(value) != true)) {
                    this.PaidDateField = value;
                    this.RaisePropertyChanged("PaidDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimaryBookingId {
            get {
                return this.PrimaryBookingIdField;
            }
            set {
                if ((this.PrimaryBookingIdField.Equals(value) != true)) {
                    this.PrimaryBookingIdField = value;
                    this.RaisePropertyChanged("PrimaryBookingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RentKind {
            get {
                return this.RentKindField;
            }
            set {
                if ((this.RentKindField.Equals(value) != true)) {
                    this.RentKindField = value;
                    this.RaisePropertyChanged("RentKind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecondaryBookingId {
            get {
                return this.SecondaryBookingIdField;
            }
            set {
                if ((this.SecondaryBookingIdField.Equals(value) != true)) {
                    this.SecondaryBookingIdField = value;
                    this.RaisePropertyChanged("SecondaryBookingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profession", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Profession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Creditor", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Creditor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> AverageRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CreditorNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CvrNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InteressentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.Profession[] ProfessionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebShopURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> AverageRating {
            get {
                return this.AverageRatingField;
            }
            set {
                if ((this.AverageRatingField.Equals(value) != true)) {
                    this.AverageRatingField = value;
                    this.RaisePropertyChanged("AverageRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CreditorNo {
            get {
                return this.CreditorNoField;
            }
            set {
                if ((this.CreditorNoField.Equals(value) != true)) {
                    this.CreditorNoField = value;
                    this.RaisePropertyChanged("CreditorNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CvrNo {
            get {
                return this.CvrNoField;
            }
            set {
                if ((this.CvrNoField.Equals(value) != true)) {
                    this.CvrNoField = value;
                    this.RaisePropertyChanged("CvrNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InteressentNo {
            get {
                return this.InteressentNoField;
            }
            set {
                if ((this.InteressentNoField.Equals(value) != true)) {
                    this.InteressentNoField = value;
                    this.RaisePropertyChanged("InteressentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCodeCity {
            get {
                return this.PostalCodeCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeCityField, value) != true)) {
                    this.PostalCodeCityField = value;
                    this.RaisePropertyChanged("PostalCodeCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.Profession[] Professions {
            get {
                return this.ProfessionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionsField, value) != true)) {
                    this.ProfessionsField = value;
                    this.RaisePropertyChanged("Professions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebShopURL {
            get {
                return this.WebShopURLField;
            }
            set {
                if ((object.ReferenceEquals(this.WebShopURLField, value) != true)) {
                    this.WebShopURLField = value;
                    this.RaisePropertyChanged("WebShopURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebsiteURL {
            get {
                return this.WebsiteURLField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteURLField, value) != true)) {
                    this.WebsiteURLField = value;
                    this.RaisePropertyChanged("WebsiteURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkPhone {
            get {
                return this.WorkPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPhoneField, value) != true)) {
                    this.WorkPhoneField = value;
                    this.RaisePropertyChanged("WorkPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rating", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Rating : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastEditedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.Rating.Type RatingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserInitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastEdited {
            get {
                return this.LastEditedField;
            }
            set {
                if ((this.LastEditedField.Equals(value) != true)) {
                    this.LastEditedField = value;
                    this.RaisePropertyChanged("LastEdited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.Rating.Type RatingType {
            get {
                return this.RatingTypeField;
            }
            set {
                if ((this.RatingTypeField.Equals(value) != true)) {
                    this.RatingTypeField = value;
                    this.RaisePropertyChanged("RatingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubjectId {
            get {
                return this.SubjectIdField;
            }
            set {
                if ((this.SubjectIdField.Equals(value) != true)) {
                    this.SubjectIdField = value;
                    this.RaisePropertyChanged("SubjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserInitials {
            get {
                return this.UserInitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInitialsField, value) != true)) {
                    this.UserInitialsField = value;
                    this.RaisePropertyChanged("UserInitials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Rating.Type", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum Type : byte {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            RatingCreditor = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = 255,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequisitionOrderLine", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class RequisitionOrderLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequisitionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequisitionId {
            get {
                return this.RequisitionIdField;
            }
            set {
                if ((this.RequisitionIdField.Equals(value) != true)) {
                    this.RequisitionIdField = value;
                    this.RaisePropertyChanged("RequisitionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RentType", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class RentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebDokDocumentInfo", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class WebDokDocumentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> CategoryNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EmailSentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.WebDokEntityRelation[] EntityRelationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JournalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ScannedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> SubCategoryNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo.UserRight[] UserRightsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WebDokNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CategoryNo {
            get {
                return this.CategoryNoField;
            }
            set {
                if ((this.CategoryNoField.Equals(value) != true)) {
                    this.CategoryNoField = value;
                    this.RaisePropertyChanged("CategoryNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EmailSent {
            get {
                return this.EmailSentField;
            }
            set {
                if ((this.EmailSentField.Equals(value) != true)) {
                    this.EmailSentField = value;
                    this.RaisePropertyChanged("EmailSent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.WebDokEntityRelation[] EntityRelations {
            get {
                return this.EntityRelationsField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityRelationsField, value) != true)) {
                    this.EntityRelationsField = value;
                    this.RaisePropertyChanged("EntityRelations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> JournalDate {
            get {
                return this.JournalDateField;
            }
            set {
                if ((this.JournalDateField.Equals(value) != true)) {
                    this.JournalDateField = value;
                    this.RaisePropertyChanged("JournalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Memo {
            get {
                return this.MemoField;
            }
            set {
                if ((object.ReferenceEquals(this.MemoField, value) != true)) {
                    this.MemoField = value;
                    this.RaisePropertyChanged("Memo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedFrom {
            get {
                return this.ReceivedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedFromField, value) != true)) {
                    this.ReceivedFromField = value;
                    this.RaisePropertyChanged("ReceivedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ScannedDate {
            get {
                return this.ScannedDateField;
            }
            set {
                if ((this.ScannedDateField.Equals(value) != true)) {
                    this.ScannedDateField = value;
                    this.RaisePropertyChanged("ScannedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> SubCategoryNo {
            get {
                return this.SubCategoryNoField;
            }
            set {
                if ((this.SubCategoryNoField.Equals(value) != true)) {
                    this.SubCategoryNoField = value;
                    this.RaisePropertyChanged("SubCategoryNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo.UserRight[] UserRights {
            get {
                return this.UserRightsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRightsField, value) != true)) {
                    this.UserRightsField = value;
                    this.RaisePropertyChanged("UserRights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WebDokNo {
            get {
                return this.WebDokNoField;
            }
            set {
                if ((this.WebDokNoField.Equals(value) != true)) {
                    this.WebDokNoField = value;
                    this.RaisePropertyChanged("WebDokNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="WebDokDocumentInfo.UserRight", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial struct UserRight : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string InitialsField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<byte> RightField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Initials {
                get {
                    return this.InitialsField;
                }
                set {
                    if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                        this.InitialsField = value;
                        this.RaisePropertyChanged("Initials");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<byte> Right {
                get {
                    return this.RightField;
                }
                set {
                    if ((this.RightField.Equals(value) != true)) {
                        this.RightField = value;
                        this.RaisePropertyChanged("Right");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebDokEntityRelation", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class WebDokEntityRelation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.WebDokEntityRelation.Type EntityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> MemberCompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MemberNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> TenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TenantNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.WebDokEntityRelation.Type EntityType {
            get {
                return this.EntityTypeField;
            }
            set {
                if ((this.EntityTypeField.Equals(value) != true)) {
                    this.EntityTypeField = value;
                    this.RaisePropertyChanged("EntityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MemberCompanyNo {
            get {
                return this.MemberCompanyNoField;
            }
            set {
                if ((this.MemberCompanyNoField.Equals(value) != true)) {
                    this.MemberCompanyNoField = value;
                    this.RaisePropertyChanged("MemberCompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MemberNo {
            get {
                return this.MemberNoField;
            }
            set {
                if ((this.MemberNoField.Equals(value) != true)) {
                    this.MemberNoField = value;
                    this.RaisePropertyChanged("MemberNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> TenancyNo {
            get {
                return this.TenancyNoField;
            }
            set {
                if ((this.TenancyNoField.Equals(value) != true)) {
                    this.TenancyNoField = value;
                    this.RaisePropertyChanged("TenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TenantNo {
            get {
                return this.TenantNoField;
            }
            set {
                if ((this.TenantNoField.Equals(value) != true)) {
                    this.TenantNoField = value;
                    this.RaisePropertyChanged("TenantNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="WebDokEntityRelation.Type", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum Type : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Company = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Department = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Tenancy = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Tenant = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Member = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Applicant = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Creditor = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Personnel = 8,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Account = 9,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Institution = 10,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Agreement = 11,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Stakeholder = 12,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Debtor = 13,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Insurance = 14,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebDokCategory", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class WebDokCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CategoryNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.WebDokCategory.WebDokSubCategory[] SubCategoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CategoryNo {
            get {
                return this.CategoryNoField;
            }
            set {
                if ((this.CategoryNoField.Equals(value) != true)) {
                    this.CategoryNoField = value;
                    this.RaisePropertyChanged("CategoryNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.WebDokCategory.WebDokSubCategory[] SubCategories {
            get {
                return this.SubCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubCategoriesField, value) != true)) {
                    this.SubCategoriesField = value;
                    this.RaisePropertyChanged("SubCategories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="WebDokCategory.WebDokSubCategory", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        [System.SerializableAttribute()]
        public partial class WebDokSubCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string NameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short SubCategoryNoField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Name {
                get {
                    return this.NameField;
                }
                set {
                    if ((object.ReferenceEquals(this.NameField, value) != true)) {
                        this.NameField = value;
                        this.RaisePropertyChanged("Name");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short SubCategoryNo {
                get {
                    return this.SubCategoryNoField;
                }
                set {
                    if ((this.SubCategoryNoField.Equals(value) != true)) {
                        this.SubCategoryNoField = value;
                        this.RaisePropertyChanged("SubCategoryNo");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileBase", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RestEgBoligHeldinTest.EgBoligService.FinancialDocument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RestEgBoligHeldinTest.EgBoligService.WebDokFile))]
    public partial class FileBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FileSizeInKBField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileData {
            get {
                return this.FileDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDataField, value) != true)) {
                    this.FileDataField = value;
                    this.RaisePropertyChanged("FileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileExtension {
            get {
                return this.FileExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.FileExtensionField, value) != true)) {
                    this.FileExtensionField = value;
                    this.RaisePropertyChanged("FileExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FileSizeInKB {
            get {
                return this.FileSizeInKBField;
            }
            set {
                if ((this.FileSizeInKBField.Equals(value) != true)) {
                    this.FileSizeInKBField = value;
                    this.RaisePropertyChanged("FileSizeInKB");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FinancialDocument", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FinancialDocument : RestEgBoligHeldinTest.EgBoligService.FileBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebDokFile", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class WebDokFile : RestEgBoligHeldinTest.EgBoligService.FileBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WebDokNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WebDokNo {
            get {
                return this.WebDokNoField;
            }
            set {
                if ((this.WebDokNoField.Equals(value) != true)) {
                    this.WebDokNoField = value;
                    this.RaisePropertyChanged("WebDokNo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FinancialTransaction", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FinancialTransaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AppendixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AppendixExistsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DocumentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternetAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoiceExistsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RequisitionNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> VATField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AccountNo {
            get {
                return this.AccountNoField;
            }
            set {
                if ((this.AccountNoField.Equals(value) != true)) {
                    this.AccountNoField = value;
                    this.RaisePropertyChanged("AccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Appendix {
            get {
                return this.AppendixField;
            }
            set {
                if ((this.AppendixField.Equals(value) != true)) {
                    this.AppendixField = value;
                    this.RaisePropertyChanged("Appendix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AppendixExists {
            get {
                return this.AppendixExistsField;
            }
            set {
                if ((this.AppendixExistsField.Equals(value) != true)) {
                    this.AppendixExistsField = value;
                    this.RaisePropertyChanged("AppendixExists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DocumentNo {
            get {
                return this.DocumentNoField;
            }
            set {
                if ((this.DocumentNoField.Equals(value) != true)) {
                    this.DocumentNoField = value;
                    this.RaisePropertyChanged("DocumentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternetAccount {
            get {
                return this.InternetAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.InternetAccountField, value) != true)) {
                    this.InternetAccountField = value;
                    this.RaisePropertyChanged("InternetAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvoiceExists {
            get {
                return this.InvoiceExistsField;
            }
            set {
                if ((this.InvoiceExistsField.Equals(value) != true)) {
                    this.InvoiceExistsField = value;
                    this.RaisePropertyChanged("InvoiceExists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Journal {
            get {
                return this.JournalField;
            }
            set {
                if ((this.JournalField.Equals(value) != true)) {
                    this.JournalField = value;
                    this.RaisePropertyChanged("Journal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Project {
            get {
                return this.ProjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectField, value) != true)) {
                    this.ProjectField = value;
                    this.RaisePropertyChanged("Project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((this.ReferenceField.Equals(value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RequisitionNo {
            get {
                return this.RequisitionNoField;
            }
            set {
                if ((this.RequisitionNoField.Equals(value) != true)) {
                    this.RequisitionNoField = value;
                    this.RaisePropertyChanged("RequisitionNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> VAT {
            get {
                return this.VATField;
            }
            set {
                if ((this.VATField.Equals(value) != true)) {
                    this.VATField = value;
                    this.RaisePropertyChanged("VAT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FinancialStatement", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FinancialStatement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.FinancialAccount AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BalancePrimoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BalanceUltimoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BudgetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReservedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TransactionAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.FinancialAccount Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BalancePrimo {
            get {
                return this.BalancePrimoField;
            }
            set {
                if ((this.BalancePrimoField.Equals(value) != true)) {
                    this.BalancePrimoField = value;
                    this.RaisePropertyChanged("BalancePrimo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BalanceUltimo {
            get {
                return this.BalanceUltimoField;
            }
            set {
                if ((this.BalanceUltimoField.Equals(value) != true)) {
                    this.BalanceUltimoField = value;
                    this.RaisePropertyChanged("BalanceUltimo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Budget {
            get {
                return this.BudgetField;
            }
            set {
                if ((this.BudgetField.Equals(value) != true)) {
                    this.BudgetField = value;
                    this.RaisePropertyChanged("Budget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReservedAmount {
            get {
                return this.ReservedAmountField;
            }
            set {
                if ((this.ReservedAmountField.Equals(value) != true)) {
                    this.ReservedAmountField = value;
                    this.RaisePropertyChanged("ReservedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TransactionAmount {
            get {
                return this.TransactionAmountField;
            }
            set {
                if ((this.TransactionAmountField.Equals(value) != true)) {
                    this.TransactionAmountField = value;
                    this.RaisePropertyChanged("TransactionAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FinancialAccount", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FinancialAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AccountNoEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AccountNoStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternetAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondaryAccountNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountCode {
            get {
                return this.AccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountCodeField, value) != true)) {
                    this.AccountCodeField = value;
                    this.RaisePropertyChanged("AccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountGroup {
            get {
                return this.AccountGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountGroupField, value) != true)) {
                    this.AccountGroupField = value;
                    this.RaisePropertyChanged("AccountGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AccountNo {
            get {
                return this.AccountNoField;
            }
            set {
                if ((this.AccountNoField.Equals(value) != true)) {
                    this.AccountNoField = value;
                    this.RaisePropertyChanged("AccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AccountNoEnd {
            get {
                return this.AccountNoEndField;
            }
            set {
                if ((this.AccountNoEndField.Equals(value) != true)) {
                    this.AccountNoEndField = value;
                    this.RaisePropertyChanged("AccountNoEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AccountNoStart {
            get {
                return this.AccountNoStartField;
            }
            set {
                if ((this.AccountNoStartField.Equals(value) != true)) {
                    this.AccountNoStartField = value;
                    this.RaisePropertyChanged("AccountNoStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternetAccount {
            get {
                return this.InternetAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.InternetAccountField, value) != true)) {
                    this.InternetAccountField = value;
                    this.RaisePropertyChanged("InternetAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondaryAccountName {
            get {
                return this.SecondaryAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryAccountNameField, value) != true)) {
                    this.SecondaryAccountNameField = value;
                    this.RaisePropertyChanged("SecondaryAccountName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FinancialYear", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FinancialYear : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConcludedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Concluded {
            get {
                return this.ConcludedField;
            }
            set {
                if ((this.ConcludedField.Equals(value) != true)) {
                    this.ConcludedField = value;
                    this.RaisePropertyChanged("Concluded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FinancialProject", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class FinancialProject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnergyLabel", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class EnergyLabel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DatePerformedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnergyLabelValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> NoOfYearsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DatePerformed {
            get {
                return this.DatePerformedField;
            }
            set {
                if ((this.DatePerformedField.Equals(value) != true)) {
                    this.DatePerformedField = value;
                    this.RaisePropertyChanged("DatePerformed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentURL {
            get {
                return this.DocumentURLField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentURLField, value) != true)) {
                    this.DocumentURLField = value;
                    this.RaisePropertyChanged("DocumentURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnergyLabelValue {
            get {
                return this.EnergyLabelValueField;
            }
            set {
                if ((object.ReferenceEquals(this.EnergyLabelValueField, value) != true)) {
                    this.EnergyLabelValueField = value;
                    this.RaisePropertyChanged("EnergyLabelValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((object.ReferenceEquals(this.GuidField, value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> NoOfYears {
            get {
                return this.NoOfYearsField;
            }
            set {
                if ((this.NoOfYearsField.Equals(value) != true)) {
                    this.NoOfYearsField = value;
                    this.RaisePropertyChanged("NoOfYears");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyType {
            get {
                return this.TenancyTypeField;
            }
            set {
                if ((this.TenancyTypeField.Equals(value) != true)) {
                    this.TenancyTypeField = value;
                    this.RaisePropertyChanged("TenancyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssignmentRule", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class AssignmentRule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AssignmentIdNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short OrderNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short[] RoomTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short[] TenancyTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.AssignmentCriteria[] WishCriteriaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AssignmentIdNo {
            get {
                return this.AssignmentIdNoField;
            }
            set {
                if ((this.AssignmentIdNoField.Equals(value) != true)) {
                    this.AssignmentIdNoField = value;
                    this.RaisePropertyChanged("AssignmentIdNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short OrderNo {
            get {
                return this.OrderNoField;
            }
            set {
                if ((this.OrderNoField.Equals(value) != true)) {
                    this.OrderNoField = value;
                    this.RaisePropertyChanged("OrderNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short[] RoomTypes {
            get {
                return this.RoomTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomTypesField, value) != true)) {
                    this.RoomTypesField = value;
                    this.RaisePropertyChanged("RoomTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short[] TenancyTypes {
            get {
                return this.TenancyTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.TenancyTypesField, value) != true)) {
                    this.TenancyTypesField = value;
                    this.RaisePropertyChanged("TenancyTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.AssignmentCriteria[] WishCriteria {
            get {
                return this.WishCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.WishCriteriaField, value) != true)) {
                    this.WishCriteriaField = value;
                    this.RaisePropertyChanged("WishCriteria");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssignmentCriteria", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class AssignmentCriteria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AutoNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RangeEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RangeStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AutoNo {
            get {
                return this.AutoNoField;
            }
            set {
                if ((this.AutoNoField.Equals(value) != true)) {
                    this.AutoNoField = value;
                    this.RaisePropertyChanged("AutoNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RangeEnd {
            get {
                return this.RangeEndField;
            }
            set {
                if ((object.ReferenceEquals(this.RangeEndField, value) != true)) {
                    this.RangeEndField = value;
                    this.RaisePropertyChanged("RangeEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RangeStart {
            get {
                return this.RangeStartField;
            }
            set {
                if ((object.ReferenceEquals(this.RangeStartField, value) != true)) {
                    this.RangeStartField = value;
                    this.RaisePropertyChanged("RangeStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RentKind", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class RentKind : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Company", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Company : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebtorGroupNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagementGroupNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoRevaluationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PBSNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> RegionNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TenantServiceGroupNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WaitingPeriodInMonthsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebtorGroupNo {
            get {
                return this.DebtorGroupNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DebtorGroupNoField, value) != true)) {
                    this.DebtorGroupNoField = value;
                    this.RaisePropertyChanged("DebtorGroupNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalCity {
            get {
                return this.LocalCityField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalCityField, value) != true)) {
                    this.LocalCityField = value;
                    this.RaisePropertyChanged("LocalCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagementGroupNo {
            get {
                return this.ManagementGroupNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagementGroupNoField, value) != true)) {
                    this.ManagementGroupNoField = value;
                    this.RaisePropertyChanged("ManagementGroupNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoRevaluation {
            get {
                return this.NoRevaluationField;
            }
            set {
                if ((this.NoRevaluationField.Equals(value) != true)) {
                    this.NoRevaluationField = value;
                    this.RaisePropertyChanged("NoRevaluation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PBSNo {
            get {
                return this.PBSNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PBSNoField, value) != true)) {
                    this.PBSNoField = value;
                    this.RaisePropertyChanged("PBSNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> RegionNo {
            get {
                return this.RegionNoField;
            }
            set {
                if ((this.RegionNoField.Equals(value) != true)) {
                    this.RegionNoField = value;
                    this.RaisePropertyChanged("RegionNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TenantServiceGroupNo {
            get {
                return this.TenantServiceGroupNoField;
            }
            set {
                if ((this.TenantServiceGroupNoField.Equals(value) != true)) {
                    this.TenantServiceGroupNoField = value;
                    this.RaisePropertyChanged("TenantServiceGroupNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WaitingPeriodInMonths {
            get {
                return this.WaitingPeriodInMonthsField;
            }
            set {
                if ((this.WaitingPeriodInMonthsField.Equals(value) != true)) {
                    this.WaitingPeriodInMonthsField = value;
                    this.RaisePropertyChanged("WaitingPeriodInMonths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCity {
            get {
                return this.ZipCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCityField, value) != true)) {
                    this.ZipCityField = value;
                    this.RaisePropertyChanged("ZipCity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Department : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.DepartmentAddress[] AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ArrearsNoOfPaymentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ArrearsThresholdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ElevatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaintenanceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoSignupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.TenancyQuantity[] TenancyQuantitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WaitingPeriodInMonthsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.DepartmentAddress[] Addresses {
            get {
                return this.AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesField, value) != true)) {
                    this.AddressesField = value;
                    this.RaisePropertyChanged("Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ArrearsNoOfPayments {
            get {
                return this.ArrearsNoOfPaymentsField;
            }
            set {
                if ((this.ArrearsNoOfPaymentsField.Equals(value) != true)) {
                    this.ArrearsNoOfPaymentsField = value;
                    this.RaisePropertyChanged("ArrearsNoOfPayments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ArrearsThreshold {
            get {
                return this.ArrearsThresholdField;
            }
            set {
                if ((this.ArrearsThresholdField.Equals(value) != true)) {
                    this.ArrearsThresholdField = value;
                    this.RaisePropertyChanged("ArrearsThreshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMail {
            get {
                return this.EMailField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailField, value) != true)) {
                    this.EMailField = value;
                    this.RaisePropertyChanged("EMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Elevator {
            get {
                return this.ElevatorField;
            }
            set {
                if ((this.ElevatorField.Equals(value) != true)) {
                    this.ElevatorField = value;
                    this.RaisePropertyChanged("Elevator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalCity {
            get {
                return this.LocalCityField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalCityField, value) != true)) {
                    this.LocalCityField = value;
                    this.RaisePropertyChanged("LocalCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaintenanceCode {
            get {
                return this.MaintenanceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MaintenanceCodeField, value) != true)) {
                    this.MaintenanceCodeField = value;
                    this.RaisePropertyChanged("MaintenanceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoSignup {
            get {
                return this.NoSignupField;
            }
            set {
                if ((this.NoSignupField.Equals(value) != true)) {
                    this.NoSignupField = value;
                    this.RaisePropertyChanged("NoSignup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.TenancyQuantity[] TenancyQuantities {
            get {
                return this.TenancyQuantitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.TenancyQuantitiesField, value) != true)) {
                    this.TenancyQuantitiesField = value;
                    this.RaisePropertyChanged("TenancyQuantities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WaitingPeriodInMonths {
            get {
                return this.WaitingPeriodInMonthsField;
            }
            set {
                if ((this.WaitingPeriodInMonthsField.Equals(value) != true)) {
                    this.WaitingPeriodInMonthsField = value;
                    this.RaisePropertyChanged("WaitingPeriodInMonths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCity {
            get {
                return this.ZipCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCityField, value) != true)) {
                    this.ZipCityField = value;
                    this.RaisePropertyChanged("ZipCity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentAddress", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class DepartmentAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalCity {
            get {
                return this.LocalCityField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalCityField, value) != true)) {
                    this.LocalCityField = value;
                    this.RaisePropertyChanged("LocalCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCity {
            get {
                return this.ZipCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCityField, value) != true)) {
                    this.ZipCityField = value;
                    this.RaisePropertyChanged("ZipCity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenancyQuantity", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class TenancyQuantity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BBRAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RoomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Area {
            get {
                return this.AreaField;
            }
            set {
                if ((this.AreaField.Equals(value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float BBRArea {
            get {
                return this.BBRAreaField;
            }
            set {
                if ((this.BBRAreaField.Equals(value) != true)) {
                    this.BBRAreaField = value;
                    this.RaisePropertyChanged("BBRArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Rooms {
            get {
                return this.RoomsField;
            }
            set {
                if ((this.RoomsField.Equals(value) != true)) {
                    this.RoomsField = value;
                    this.RaisePropertyChanged("Rooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyType {
            get {
                return this.TenancyTypeField;
            }
            set {
                if ((this.TenancyTypeField.Equals(value) != true)) {
                    this.TenancyTypeField = value;
                    this.RaisePropertyChanged("TenancyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentText", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class DepartmentText : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeadlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Headline {
            get {
                return this.HeadlineField;
            }
            set {
                if ((object.ReferenceEquals(this.HeadlineField, value) != true)) {
                    this.HeadlineField = value;
                    this.RaisePropertyChanged("Headline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tenancy", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Tenancy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApartmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BBRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BBRSqmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CountsAsResidentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Criteria5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DepositField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> FictiveDepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HousingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InternetAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InternetStandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MonthsOfDepositRentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MonthsOfPrepaidRentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MoveInDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> MunicipalityNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte PetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RentGrossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RentNetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.TenancyRent[] RentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RoomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TenancySqmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerminationPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApartmentType {
            get {
                return this.ApartmentTypeField;
            }
            set {
                if ((this.ApartmentTypeField.Equals(value) != true)) {
                    this.ApartmentTypeField = value;
                    this.RaisePropertyChanged("ApartmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BBRNo {
            get {
                return this.BBRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.BBRNoField, value) != true)) {
                    this.BBRNoField = value;
                    this.RaisePropertyChanged("BBRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float BBRSqm {
            get {
                return this.BBRSqmField;
            }
            set {
                if ((this.BBRSqmField.Equals(value) != true)) {
                    this.BBRSqmField = value;
                    this.RaisePropertyChanged("BBRSqm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CountsAsResident {
            get {
                return this.CountsAsResidentField;
            }
            set {
                if ((this.CountsAsResidentField.Equals(value) != true)) {
                    this.CountsAsResidentField = value;
                    this.RaisePropertyChanged("CountsAsResident");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria1 {
            get {
                return this.Criteria1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria1Field, value) != true)) {
                    this.Criteria1Field = value;
                    this.RaisePropertyChanged("Criteria1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria2 {
            get {
                return this.Criteria2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria2Field, value) != true)) {
                    this.Criteria2Field = value;
                    this.RaisePropertyChanged("Criteria2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria3 {
            get {
                return this.Criteria3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria3Field, value) != true)) {
                    this.Criteria3Field = value;
                    this.RaisePropertyChanged("Criteria3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria4 {
            get {
                return this.Criteria4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria4Field, value) != true)) {
                    this.Criteria4Field = value;
                    this.RaisePropertyChanged("Criteria4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Criteria5 {
            get {
                return this.Criteria5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Criteria5Field, value) != true)) {
                    this.Criteria5Field = value;
                    this.RaisePropertyChanged("Criteria5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Deposit {
            get {
                return this.DepositField;
            }
            set {
                if ((this.DepositField.Equals(value) != true)) {
                    this.DepositField = value;
                    this.RaisePropertyChanged("Deposit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> FictiveDepartmentNo {
            get {
                return this.FictiveDepartmentNoField;
            }
            set {
                if ((this.FictiveDepartmentNoField.Equals(value) != true)) {
                    this.FictiveDepartmentNoField = value;
                    this.RaisePropertyChanged("FictiveDepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HousingType {
            get {
                return this.HousingTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.HousingTypeField, value) != true)) {
                    this.HousingTypeField = value;
                    this.RaisePropertyChanged("HousingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InternetAvailable {
            get {
                return this.InternetAvailableField;
            }
            set {
                if ((this.InternetAvailableField.Equals(value) != true)) {
                    this.InternetAvailableField = value;
                    this.RaisePropertyChanged("InternetAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InternetStandard {
            get {
                return this.InternetStandardField;
            }
            set {
                if ((this.InternetStandardField.Equals(value) != true)) {
                    this.InternetStandardField = value;
                    this.RaisePropertyChanged("InternetStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalCity {
            get {
                return this.LocalCityField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalCityField, value) != true)) {
                    this.LocalCityField = value;
                    this.RaisePropertyChanged("LocalCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MonthsOfDepositRent {
            get {
                return this.MonthsOfDepositRentField;
            }
            set {
                if ((this.MonthsOfDepositRentField.Equals(value) != true)) {
                    this.MonthsOfDepositRentField = value;
                    this.RaisePropertyChanged("MonthsOfDepositRent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MonthsOfPrepaidRent {
            get {
                return this.MonthsOfPrepaidRentField;
            }
            set {
                if ((this.MonthsOfPrepaidRentField.Equals(value) != true)) {
                    this.MonthsOfPrepaidRentField = value;
                    this.RaisePropertyChanged("MonthsOfPrepaidRent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MoveInDate {
            get {
                return this.MoveInDateField;
            }
            set {
                if ((this.MoveInDateField.Equals(value) != true)) {
                    this.MoveInDateField = value;
                    this.RaisePropertyChanged("MoveInDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MunicipalityNo {
            get {
                return this.MunicipalityNoField;
            }
            set {
                if ((this.MunicipalityNoField.Equals(value) != true)) {
                    this.MunicipalityNoField = value;
                    this.RaisePropertyChanged("MunicipalityNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Pets {
            get {
                return this.PetsField;
            }
            set {
                if ((this.PetsField.Equals(value) != true)) {
                    this.PetsField = value;
                    this.RaisePropertyChanged("Pets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RentGross {
            get {
                return this.RentGrossField;
            }
            set {
                if ((this.RentGrossField.Equals(value) != true)) {
                    this.RentGrossField = value;
                    this.RaisePropertyChanged("RentGross");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RentNet {
            get {
                return this.RentNetField;
            }
            set {
                if ((this.RentNetField.Equals(value) != true)) {
                    this.RentNetField = value;
                    this.RaisePropertyChanged("RentNet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.TenancyRent[] Rents {
            get {
                return this.RentsField;
            }
            set {
                if ((object.ReferenceEquals(this.RentsField, value) != true)) {
                    this.RentsField = value;
                    this.RaisePropertyChanged("Rents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Rooms {
            get {
                return this.RoomsField;
            }
            set {
                if ((this.RoomsField.Equals(value) != true)) {
                    this.RoomsField = value;
                    this.RaisePropertyChanged("Rooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyNo {
            get {
                return this.TenancyNoField;
            }
            set {
                if ((this.TenancyNoField.Equals(value) != true)) {
                    this.TenancyNoField = value;
                    this.RaisePropertyChanged("TenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TenancySqm {
            get {
                return this.TenancySqmField;
            }
            set {
                if ((this.TenancySqmField.Equals(value) != true)) {
                    this.TenancySqmField = value;
                    this.RaisePropertyChanged("TenancySqm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyType {
            get {
                return this.TenancyTypeField;
            }
            set {
                if ((this.TenancyTypeField.Equals(value) != true)) {
                    this.TenancyTypeField = value;
                    this.RaisePropertyChanged("TenancyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerminationPeriod {
            get {
                return this.TerminationPeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.TerminationPeriodField, value) != true)) {
                    this.TerminationPeriodField = value;
                    this.RaisePropertyChanged("TerminationPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCity {
            get {
                return this.ZipCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCityField, value) != true)) {
                    this.ZipCityField = value;
                    this.RaisePropertyChanged("ZipCity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Tenancy.Type", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum Type : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Both = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Standard = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Available = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            All = 3,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenancyPremis", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class TenancyPremis : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanBeAddedToWishField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte PremisNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeAddedToWish {
            get {
                return this.CanBeAddedToWishField;
            }
            set {
                if ((this.CanBeAddedToWishField.Equals(value) != true)) {
                    this.CanBeAddedToWishField = value;
                    this.RaisePropertyChanged("CanBeAddedToWish");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte PremisNo {
            get {
                return this.PremisNoField;
            }
            set {
                if ((this.PremisNoField.Equals(value) != true)) {
                    this.PremisNoField = value;
                    this.RaisePropertyChanged("PremisNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenancyPremisValue", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class TenancyPremisValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte PremisNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte PremisNo {
            get {
                return this.PremisNoField;
            }
            set {
                if ((this.PremisNoField.Equals(value) != true)) {
                    this.PremisNoField = value;
                    this.RaisePropertyChanged("PremisNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyNo {
            get {
                return this.TenancyNoField;
            }
            set {
                if ((this.TenancyNoField.Equals(value) != true)) {
                    this.TenancyNoField = value;
                    this.RaisePropertyChanged("TenancyNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenancyType", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class TenancyType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CountsAsResidentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBiTenancyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CountsAsResident {
            get {
                return this.CountsAsResidentField;
            }
            set {
                if ((this.CountsAsResidentField.Equals(value) != true)) {
                    this.CountsAsResidentField = value;
                    this.RaisePropertyChanged("CountsAsResident");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBiTenancy {
            get {
                return this.IsBiTenancyField;
            }
            set {
                if ((this.IsBiTenancyField.Equals(value) != true)) {
                    this.IsBiTenancyField = value;
                    this.RaisePropertyChanged("IsBiTenancy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApartmentType", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class ApartmentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HousingType", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class HousingType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class File : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenancyNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileId {
            get {
                return this.FileIdField;
            }
            set {
                if ((this.FileIdField.Equals(value) != true)) {
                    this.FileIdField = value;
                    this.RaisePropertyChanged("FileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenancyNo {
            get {
                return this.TenancyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TenancyNoField, value) != true)) {
                    this.TenancyNoField = value;
                    this.RaisePropertyChanged("TenancyNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="File.Type", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
        public enum Type : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Department = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DepartmentOverview = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DepartmentMap = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DepartmentDocument = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BoardMember = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Tenancy = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            TenancyFloorPlan = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            TenancyMap = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            TenancyOverview = 8,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Caretaker = 9,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BanquetFacilitiesImage = 10,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            UnDefined = 11,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            TenancyFloorPlan3D = 12,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            TenancyFloorPlan4D = 13,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeA2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeA3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCodeA2 {
            get {
                return this.CountryCodeA2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeA2Field, value) != true)) {
                    this.CountryCodeA2Field = value;
                    this.RaisePropertyChanged("CountryCodeA2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCodeA3 {
            get {
                return this.CountryCodeA3Field;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeA3Field, value) != true)) {
                    this.CountryCodeA3Field = value;
                    this.RaisePropertyChanged("CountryCodeA3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Iso {
            get {
                return this.IsoField;
            }
            set {
                if ((object.ReferenceEquals(this.IsoField, value) != true)) {
                    this.IsoField = value;
                    this.RaisePropertyChanged("Iso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalName {
            get {
                return this.LocalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalNameField, value) != true)) {
                    this.LocalNameField = value;
                    this.RaisePropertyChanged("LocalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Child", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Child : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AutoNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> Cpr4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Cpr6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MemberNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AutoNo {
            get {
                return this.AutoNoField;
            }
            set {
                if ((this.AutoNoField.Equals(value) != true)) {
                    this.AutoNoField = value;
                    this.RaisePropertyChanged("AutoNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Cpr4 {
            get {
                return this.Cpr4Field;
            }
            set {
                if ((this.Cpr4Field.Equals(value) != true)) {
                    this.Cpr4Field = value;
                    this.RaisePropertyChanged("Cpr4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cpr6 {
            get {
                return this.Cpr6Field;
            }
            set {
                if ((this.Cpr6Field.Equals(value) != true)) {
                    this.Cpr6Field = value;
                    this.RaisePropertyChanged("Cpr6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MemberNo {
            get {
                return this.MemberNoField;
            }
            set {
                if ((this.MemberNoField.Equals(value) != true)) {
                    this.MemberNoField = value;
                    this.RaisePropertyChanged("MemberNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberFee", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class MemberFee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InternalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> NoOfYearsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> OfferByEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InternalAmount {
            get {
                return this.InternalAmountField;
            }
            set {
                if ((this.InternalAmountField.Equals(value) != true)) {
                    this.InternalAmountField = value;
                    this.RaisePropertyChanged("InternalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> NoOfYears {
            get {
                return this.NoOfYearsField;
            }
            set {
                if ((this.NoOfYearsField.Equals(value) != true)) {
                    this.NoOfYearsField = value;
                    this.RaisePropertyChanged("NoOfYears");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> OfferByEmail {
            get {
                return this.OfferByEmailField;
            }
            set {
                if ((this.OfferByEmailField.Equals(value) != true)) {
                    this.OfferByEmailField = value;
                    this.RaisePropertyChanged("OfferByEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OfferState", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    public enum OfferState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Answered = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnAnswered = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProgress = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Offer", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Offer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnswerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AnswerDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeadlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocumentAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MemberCompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MemberNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MoveInDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OfferIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> PlacementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityCodeXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.Tenancy TenancyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.File[] TenancyFloorPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TenantNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerField, value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnswerCode {
            get {
                return this.AnswerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerCodeField, value) != true)) {
                    this.AnswerCodeField = value;
                    this.RaisePropertyChanged("AnswerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AnswerDate {
            get {
                return this.AnswerDateField;
            }
            set {
                if ((this.AnswerDateField.Equals(value) != true)) {
                    this.AnswerDateField = value;
                    this.RaisePropertyChanged("AnswerDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Approved {
            get {
                return this.ApprovedField;
            }
            set {
                if ((this.ApprovedField.Equals(value) != true)) {
                    this.ApprovedField = value;
                    this.RaisePropertyChanged("Approved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Deadline {
            get {
                return this.DeadlineField;
            }
            set {
                if ((this.DeadlineField.Equals(value) != true)) {
                    this.DeadlineField = value;
                    this.RaisePropertyChanged("Deadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocumentAvailable {
            get {
                return this.DocumentAvailableField;
            }
            set {
                if ((this.DocumentAvailableField.Equals(value) != true)) {
                    this.DocumentAvailableField = value;
                    this.RaisePropertyChanged("DocumentAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MemberCompanyNo {
            get {
                return this.MemberCompanyNoField;
            }
            set {
                if ((this.MemberCompanyNoField.Equals(value) != true)) {
                    this.MemberCompanyNoField = value;
                    this.RaisePropertyChanged("MemberCompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MemberNo {
            get {
                return this.MemberNoField;
            }
            set {
                if ((this.MemberNoField.Equals(value) != true)) {
                    this.MemberNoField = value;
                    this.RaisePropertyChanged("MemberNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MoveInDate {
            get {
                return this.MoveInDateField;
            }
            set {
                if ((this.MoveInDateField.Equals(value) != true)) {
                    this.MoveInDateField = value;
                    this.RaisePropertyChanged("MoveInDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OfferId {
            get {
                return this.OfferIdField;
            }
            set {
                if ((this.OfferIdField.Equals(value) != true)) {
                    this.OfferIdField = value;
                    this.RaisePropertyChanged("OfferId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Placement {
            get {
                return this.PlacementField;
            }
            set {
                if ((this.PlacementField.Equals(value) != true)) {
                    this.PlacementField = value;
                    this.RaisePropertyChanged("Placement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriorityCode {
            get {
                return this.PriorityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityCodeField, value) != true)) {
                    this.PriorityCodeField = value;
                    this.RaisePropertyChanged("PriorityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriorityCodeX {
            get {
                return this.PriorityCodeXField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityCodeXField, value) != true)) {
                    this.PriorityCodeXField = value;
                    this.RaisePropertyChanged("PriorityCodeX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.Tenancy Tenancy {
            get {
                return this.TenancyField;
            }
            set {
                if ((object.ReferenceEquals(this.TenancyField, value) != true)) {
                    this.TenancyField = value;
                    this.RaisePropertyChanged("Tenancy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.File[] TenancyFloorPlan {
            get {
                return this.TenancyFloorPlanField;
            }
            set {
                if ((object.ReferenceEquals(this.TenancyFloorPlanField, value) != true)) {
                    this.TenancyFloorPlanField = value;
                    this.RaisePropertyChanged("TenancyFloorPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyNo {
            get {
                return this.TenancyNoField;
            }
            set {
                if ((this.TenancyNoField.Equals(value) != true)) {
                    this.TenancyNoField = value;
                    this.RaisePropertyChanged("TenancyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TenantNo {
            get {
                return this.TenantNoField;
            }
            set {
                if ((this.TenantNoField.Equals(value) != true)) {
                    this.TenantNoField = value;
                    this.RaisePropertyChanged("TenantNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OfferAnswer", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    public enum OfferAnswer : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Accept = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Decline = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WaitList", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class WaitList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> PriorityNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> PriorityNoActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RoomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestEgBoligHeldinTest.EgBoligService.Tenancy[] TenanciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WaitlistTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> PriorityNo {
            get {
                return this.PriorityNoField;
            }
            set {
                if ((this.PriorityNoField.Equals(value) != true)) {
                    this.PriorityNoField = value;
                    this.RaisePropertyChanged("PriorityNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> PriorityNoActive {
            get {
                return this.PriorityNoActiveField;
            }
            set {
                if ((this.PriorityNoActiveField.Equals(value) != true)) {
                    this.PriorityNoActiveField = value;
                    this.RaisePropertyChanged("PriorityNoActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Rooms {
            get {
                return this.RoomsField;
            }
            set {
                if ((this.RoomsField.Equals(value) != true)) {
                    this.RoomsField = value;
                    this.RaisePropertyChanged("Rooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestEgBoligHeldinTest.EgBoligService.Tenancy[] Tenancies {
            get {
                return this.TenanciesField;
            }
            set {
                if ((object.ReferenceEquals(this.TenanciesField, value) != true)) {
                    this.TenanciesField = value;
                    this.RaisePropertyChanged("Tenancies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyType {
            get {
                return this.TenancyTypeField;
            }
            set {
                if ((this.TenancyTypeField.Equals(value) != true)) {
                    this.TenancyTypeField = value;
                    this.RaisePropertyChanged("TenancyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WaitlistType {
            get {
                return this.WaitlistTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.WaitlistTypeField, value) != true)) {
                    this.WaitlistTypeField = value;
                    this.RaisePropertyChanged("WaitlistType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WaitTime", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class WaitTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApartmentCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApartmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaximumMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MinimumMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MovingPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TenancyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WaitTimeTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApartmentCount {
            get {
                return this.ApartmentCountField;
            }
            set {
                if ((this.ApartmentCountField.Equals(value) != true)) {
                    this.ApartmentCountField = value;
                    this.RaisePropertyChanged("ApartmentCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApartmentType {
            get {
                return this.ApartmentTypeField;
            }
            set {
                if ((this.ApartmentTypeField.Equals(value) != true)) {
                    this.ApartmentTypeField = value;
                    this.RaisePropertyChanged("ApartmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaximumMonth {
            get {
                return this.MaximumMonthField;
            }
            set {
                if ((this.MaximumMonthField.Equals(value) != true)) {
                    this.MaximumMonthField = value;
                    this.RaisePropertyChanged("MaximumMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MinimumMonth {
            get {
                return this.MinimumMonthField;
            }
            set {
                if ((this.MinimumMonthField.Equals(value) != true)) {
                    this.MinimumMonthField = value;
                    this.RaisePropertyChanged("MinimumMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MovingPercent {
            get {
                return this.MovingPercentField;
            }
            set {
                if ((this.MovingPercentField.Equals(value) != true)) {
                    this.MovingPercentField = value;
                    this.RaisePropertyChanged("MovingPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rooms {
            get {
                return this.RoomsField;
            }
            set {
                if ((this.RoomsField.Equals(value) != true)) {
                    this.RoomsField = value;
                    this.RaisePropertyChanged("Rooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TenancyType {
            get {
                return this.TenancyTypeField;
            }
            set {
                if ((this.TenancyTypeField.Equals(value) != true)) {
                    this.TenancyTypeField = value;
                    this.RaisePropertyChanged("TenancyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WaitTimeTypeId {
            get {
                return this.WaitTimeTypeIdField;
            }
            set {
                if ((this.WaitTimeTypeIdField.Equals(value) != true)) {
                    this.WaitTimeTypeIdField = value;
                    this.RaisePropertyChanged("WaitTimeTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WaitTimeType", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class WaitTimeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WaitTimeStatistics", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class WaitTimeStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApartmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> PeopleMovedInsideCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> PeopleMovedInsideDepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> PeopleMovedOutToExternalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> PlacementOnWaitListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> QualityWaitTimeCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> QualityWaitTimeDepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> QualityWaitTimeExternalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> RemainingOnWaitListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TenancyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeMeasuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WaitTimeCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WaitTimeDepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WaitTimeExternalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApartmentType {
            get {
                return this.ApartmentTypeField;
            }
            set {
                if ((this.ApartmentTypeField.Equals(value) != true)) {
                    this.ApartmentTypeField = value;
                    this.RaisePropertyChanged("ApartmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((this.DepartmentNoField.Equals(value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> PeopleMovedInsideCompany {
            get {
                return this.PeopleMovedInsideCompanyField;
            }
            set {
                if ((this.PeopleMovedInsideCompanyField.Equals(value) != true)) {
                    this.PeopleMovedInsideCompanyField = value;
                    this.RaisePropertyChanged("PeopleMovedInsideCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> PeopleMovedInsideDepartment {
            get {
                return this.PeopleMovedInsideDepartmentField;
            }
            set {
                if ((this.PeopleMovedInsideDepartmentField.Equals(value) != true)) {
                    this.PeopleMovedInsideDepartmentField = value;
                    this.RaisePropertyChanged("PeopleMovedInsideDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> PeopleMovedOutToExternal {
            get {
                return this.PeopleMovedOutToExternalField;
            }
            set {
                if ((this.PeopleMovedOutToExternalField.Equals(value) != true)) {
                    this.PeopleMovedOutToExternalField = value;
                    this.RaisePropertyChanged("PeopleMovedOutToExternal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> PlacementOnWaitList {
            get {
                return this.PlacementOnWaitListField;
            }
            set {
                if ((this.PlacementOnWaitListField.Equals(value) != true)) {
                    this.PlacementOnWaitListField = value;
                    this.RaisePropertyChanged("PlacementOnWaitList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> QualityWaitTimeCompany {
            get {
                return this.QualityWaitTimeCompanyField;
            }
            set {
                if ((this.QualityWaitTimeCompanyField.Equals(value) != true)) {
                    this.QualityWaitTimeCompanyField = value;
                    this.RaisePropertyChanged("QualityWaitTimeCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> QualityWaitTimeDepartment {
            get {
                return this.QualityWaitTimeDepartmentField;
            }
            set {
                if ((this.QualityWaitTimeDepartmentField.Equals(value) != true)) {
                    this.QualityWaitTimeDepartmentField = value;
                    this.RaisePropertyChanged("QualityWaitTimeDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> QualityWaitTimeExternal {
            get {
                return this.QualityWaitTimeExternalField;
            }
            set {
                if ((this.QualityWaitTimeExternalField.Equals(value) != true)) {
                    this.QualityWaitTimeExternalField = value;
                    this.RaisePropertyChanged("QualityWaitTimeExternal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> RemainingOnWaitList {
            get {
                return this.RemainingOnWaitListField;
            }
            set {
                if ((this.RemainingOnWaitListField.Equals(value) != true)) {
                    this.RemainingOnWaitListField = value;
                    this.RaisePropertyChanged("RemainingOnWaitList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rooms {
            get {
                return this.RoomsField;
            }
            set {
                if ((this.RoomsField.Equals(value) != true)) {
                    this.RoomsField = value;
                    this.RaisePropertyChanged("Rooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TenancyType {
            get {
                return this.TenancyTypeField;
            }
            set {
                if ((this.TenancyTypeField.Equals(value) != true)) {
                    this.TenancyTypeField = value;
                    this.RaisePropertyChanged("TenancyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeMeasured {
            get {
                return this.TimeMeasuredField;
            }
            set {
                if ((this.TimeMeasuredField.Equals(value) != true)) {
                    this.TimeMeasuredField = value;
                    this.RaisePropertyChanged("TimeMeasured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WaitTimeCompany {
            get {
                return this.WaitTimeCompanyField;
            }
            set {
                if ((this.WaitTimeCompanyField.Equals(value) != true)) {
                    this.WaitTimeCompanyField = value;
                    this.RaisePropertyChanged("WaitTimeCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WaitTimeDepartment {
            get {
                return this.WaitTimeDepartmentField;
            }
            set {
                if ((this.WaitTimeDepartmentField.Equals(value) != true)) {
                    this.WaitTimeDepartmentField = value;
                    this.RaisePropertyChanged("WaitTimeDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WaitTimeExternal {
            get {
                return this.WaitTimeExternalField;
            }
            set {
                if ((this.WaitTimeExternalField.Equals(value) != true)) {
                    this.WaitTimeExternalField = value;
                    this.RaisePropertyChanged("WaitTimeExternal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Membership", Namespace="http://schemas.datacontract.org/2004/07/EGBoligWS.DTO")]
    [System.SerializableAttribute()]
    public partial class Membership : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcemptFromFeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JoinDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MemberCompanyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MemberNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> QuitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RenewalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SuspendedToDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TenancyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WaitListTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivationDate {
            get {
                return this.ActivationDateField;
            }
            set {
                if ((this.ActivationDateField.Equals(value) != true)) {
                    this.ActivationDateField = value;
                    this.RaisePropertyChanged("ActivationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CompanyNo {
            get {
                return this.CompanyNoField;
            }
            set {
                if ((this.CompanyNoField.Equals(value) != true)) {
                    this.CompanyNoField = value;
                    this.RaisePropertyChanged("CompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExcemptFromFees {
            get {
                return this.ExcemptFromFeesField;
            }
            set {
                if ((this.ExcemptFromFeesField.Equals(value) != true)) {
                    this.ExcemptFromFeesField = value;
                    this.RaisePropertyChanged("ExcemptFromFees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> JoinDate {
            get {
                return this.JoinDateField;
            }
            set {
                if ((this.JoinDateField.Equals(value) != true)) {
                    this.JoinDateField = value;
                    this.RaisePropertyChanged("JoinDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MemberCompanyNo {
            get {
                return this.MemberCompanyNoField;
            }
            set {
                if ((this.MemberCompanyNoField.Equals(value) != true)) {
                    this.MemberCompanyNoField = value;
                    this.RaisePropertyChanged("MemberCompanyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MemberNo {
            get {
                return this.MemberNoField;
            }
            set {
                if ((this.MemberNoField.Equals(value) != true)) {
                    this.MemberNoField = value;
                    this.RaisePropertyChanged("MemberNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewStatus {
            get {
                return this.NewStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.NewStatusField, value) != true)) {
                    this.NewStatusField = value;
                    this.RaisePropertyChanged("NewStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> QuitDate {
            get {
                return this.QuitDateField;
            }
            set {
                if ((this.QuitDateField.Equals(value) != true)) {
                    this.QuitDateField = value;
                    this.RaisePropertyChanged("QuitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RenewalDate {
            get {
                return this.RenewalDateField;
            }
            set {
                if ((this.RenewalDateField.Equals(value) != true)) {
                    this.RenewalDateField = value;
                    this.RaisePropertyChanged("RenewalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SuspendedToDate {
            get {
                return this.SuspendedToDateField;
            }
            set {
                if ((this.SuspendedToDateField.Equals(value) != true)) {
                    this.SuspendedToDateField = value;
                    this.RaisePropertyChanged("SuspendedToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TenancyType {
            get {
                return this.TenancyTypeField;
            }
            set {
                if ((this.TenancyTypeField.Equals(value) != true)) {
                    this.TenancyTypeField = value;
                    this.RaisePropertyChanged("TenancyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WaitListType {
            get {
                return this.WaitListTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.WaitListTypeField, value) != true)) {
                    this.WaitListTypeField = value;
                    this.RaisePropertyChanged("WaitListType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EgBoligService.IService10540")]
    public interface IService10540 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByRoom", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByRoomResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] TenancyInspectionPictureGetListByRoom(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionRoom room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByRoom", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByRoomResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[]> TenancyInspectionPictureGetListByRoomAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionRoom room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByTenancyInspectio" +
            "n", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByTenancyInspectio" +
            "nResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] TenancyInspectionPictureGetListByTenancyInspection(RestEgBoligHeldinTest.EgBoligService.TenancyInspection tenancyInspection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByTenancyInspectio" +
            "n", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByTenancyInspectio" +
            "nResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[]> TenancyInspectionPictureGetListByTenancyInspectionAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspection tenancyInspection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByTenant", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByTenantResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] TenancyInspectionPictureGetListByTenant(short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByTenant", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByTenantResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[]> TenancyInspectionPictureGetListByTenantAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureAdd", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureAddResponse")]
        void TenancyInspectionPictureAdd(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture picture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureAdd", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureAddResponse")]
        System.Threading.Tasks.Task TenancyInspectionPictureAddAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture picture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureAddList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureAddListResponse")]
        void TenancyInspectionPictureAddList(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] pictures);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureAddList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureAddListResponse")]
        System.Threading.Tasks.Task TenancyInspectionPictureAddListAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] pictures);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureUpdate", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureUpdateResponse")]
        void TenancyInspectionPictureUpdate(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture picture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureUpdate", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureUpdateResponse")]
        System.Threading.Tasks.Task TenancyInspectionPictureUpdateAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture picture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureUpdateList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureUpdateListResponse")]
        void TenancyInspectionPictureUpdateList(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] pictures);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureUpdateList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureUpdateListResponse")]
        System.Threading.Tasks.Task TenancyInspectionPictureUpdateListAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] pictures);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureDelete", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureDeleteResponse")]
        void TenancyInspectionPictureDelete(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture picture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureDelete", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureDeleteResponse")]
        System.Threading.Tasks.Task TenancyInspectionPictureDeleteAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture picture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureDeleteList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureDeleteListResponse")]
        void TenancyInspectionPictureDeleteList(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] pictures);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureDeleteList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureDeleteListResponse")]
        System.Threading.Tasks.Task TenancyInspectionPictureDeleteListAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] pictures);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionTreatmentGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionTreatmentGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyInspectionTreatment[] TenancyInspectionTreatmentGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionTreatmentGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionTreatmentGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionTreatment[]> TenancyInspectionTreatmentGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GOBoligGetDocumentInfoByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/GOBoligGetDocumentInfoByInteressentNoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.IO.InvalidDataException), Action="http://tempuri.org/IBaseService/GOBoligGetDocumentInfoByInteressentNoInvalidDataE" +
            "xceptionFault", Name="InvalidDataException", Namespace="http://schemas.datacontract.org/2004/07/System.IO")]
        RestEgBoligHeldinTest.EgBoligService.GOBoligDocumentInfo[] GOBoligGetDocumentInfoByInteressentNo(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GOBoligGetDocumentInfoByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/GOBoligGetDocumentInfoByInteressentNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.GOBoligDocumentInfo[]> GOBoligGetDocumentInfoByInteressentNoAsync(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GOBoligGetDocument", ReplyAction="http://tempuri.org/IBaseService/GOBoligGetDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.IO.InvalidDataException), Action="http://tempuri.org/IBaseService/GOBoligGetDocumentInvalidDataExceptionFault", Name="InvalidDataException", Namespace="http://schemas.datacontract.org/2004/07/System.IO")]
        byte[] GOBoligGetDocument(int documentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GOBoligGetDocument", ReplyAction="http://tempuri.org/IBaseService/GOBoligGetDocumentResponse")]
        System.Threading.Tasks.Task<byte[]> GOBoligGetDocumentAsync(int documentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByDepartment", ReplyAction="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByDepartmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByDepartmentArgumentExcep" +
            "tionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.IO.InvalidDataException), Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByDepartmentInvalidDataEx" +
            "ceptionFault", Name="InvalidDataException", Namespace="http://schemas.datacontract.org/2004/07/System.IO")]
        RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[] CrossworkGetDocumentInfoByDepartment(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByDepartment", ReplyAction="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByDepartmentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[]> CrossworkGetDocumentInfoByDepartmentAsync(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByInteressentNoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByInteressentNoArgumentEx" +
            "ceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.IO.InvalidDataException), Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByInteressentNoInvalidDat" +
            "aExceptionFault", Name="InvalidDataException", Namespace="http://schemas.datacontract.org/2004/07/System.IO")]
        RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[] CrossworkGetDocumentInfoByInteressentNo(int interessentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByInteressentNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[]> CrossworkGetDocumentInfoByInteressentNoAsync(int interessentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByDepartmentExternOnly", ReplyAction="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByDepartmentExternOnlyRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByDepartmentExternOnlyArg" +
            "umentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.IO.InvalidDataException), Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByDepartmentExternOnlyInv" +
            "alidDataExceptionFault", Name="InvalidDataException", Namespace="http://schemas.datacontract.org/2004/07/System.IO")]
        RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[] CrossworkGetDocumentInfoByDepartmentExternOnly(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByDepartmentExternOnly", ReplyAction="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByDepartmentExternOnlyRes" +
            "ponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[]> CrossworkGetDocumentInfoByDepartmentExternOnlyAsync(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByInteressentNoExternOnly" +
            "", ReplyAction="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByInteressentNoExternOnly" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByInteressentNoExternOnly" +
            "ArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.IO.InvalidDataException), Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByInteressentNoExternOnly" +
            "InvalidDataExceptionFault", Name="InvalidDataException", Namespace="http://schemas.datacontract.org/2004/07/System.IO")]
        RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[] CrossworkGetDocumentInfoByInteressentNoExternOnly(int interessentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByInteressentNoExternOnly" +
            "", ReplyAction="http://tempuri.org/IBaseService/CrossworkGetDocumentInfoByInteressentNoExternOnly" +
            "Response")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[]> CrossworkGetDocumentInfoByInteressentNoExternOnlyAsync(int interessentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CrossworkGetDocument", ReplyAction="http://tempuri.org/IBaseService/CrossworkGetDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/CrossworkGetDocumentArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.IO.InvalidDataException), Action="http://tempuri.org/IBaseService/CrossworkGetDocumentInvalidDataExceptionFault", Name="InvalidDataException", Namespace="http://schemas.datacontract.org/2004/07/System.IO")]
        byte[] CrossworkGetDocument(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CrossworkGetDocument", ReplyAction="http://tempuri.org/IBaseService/CrossworkGetDocumentResponse")]
        System.Threading.Tasks.Task<byte[]> CrossworkGetDocumentAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CrossworkAddTenantDocument", ReplyAction="http://tempuri.org/IBaseService/CrossworkAddTenantDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/CrossworkAddTenantDocumentArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.IO.InvalidDataException), Action="http://tempuri.org/IBaseService/CrossworkAddTenantDocumentInvalidDataExceptionFau" +
            "lt", Name="InvalidDataException", Namespace="http://schemas.datacontract.org/2004/07/System.IO")]
        void CrossworkAddTenantDocument(string fileName, string fileExtension, byte[] fileData, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory category, bool internetVisible, short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CrossworkAddTenantDocument", ReplyAction="http://tempuri.org/IBaseService/CrossworkAddTenantDocumentResponse")]
        System.Threading.Tasks.Task CrossworkAddTenantDocumentAsync(string fileName, string fileExtension, byte[] fileData, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory category, bool internetVisible, short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CrossworkCategoryGetList", ReplyAction="http://tempuri.org/IBaseService/CrossworkCategoryGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] CrossworkCategoryGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CrossworkCategoryGetList", ReplyAction="http://tempuri.org/IBaseService/CrossworkCategoryGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[]> CrossworkCategoryGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMUserGet", ReplyAction="http://tempuri.org/IBaseService/FMUserGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMUser FMUserGet(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMUserGet", ReplyAction="http://tempuri.org/IBaseService/FMUserGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMUser> FMUserGetAsync(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMUserGetList", ReplyAction="http://tempuri.org/IBaseService/FMUserGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMUser[] FMUserGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMUserGetList", ReplyAction="http://tempuri.org/IBaseService/FMUserGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMUser[]> FMUserGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMCompanyGetList", ReplyAction="http://tempuri.org/IBaseService/FMCompanyGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMCompany[] FMCompanyGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMCompanyGetList", ReplyAction="http://tempuri.org/IBaseService/FMCompanyGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMCompany[]> FMCompanyGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMDepartmentGetList", ReplyAction="http://tempuri.org/IBaseService/FMDepartmentGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMDepartment[] FMDepartmentGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMDepartmentGetList", ReplyAction="http://tempuri.org/IBaseService/FMDepartmentGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMDepartment[]> FMDepartmentGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMBuildingGetList", ReplyAction="http://tempuri.org/IBaseService/FMBuildingGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMBuilding[] FMBuildingGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMBuildingGetList", ReplyAction="http://tempuri.org/IBaseService/FMBuildingGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMBuilding[]> FMBuildingGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenancyGetList", ReplyAction="http://tempuri.org/IBaseService/FMTenancyGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMTenancy[] FMTenancyGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenancyGetList", ReplyAction="http://tempuri.org/IBaseService/FMTenancyGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMTenancy[]> FMTenancyGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenantGetList", ReplyAction="http://tempuri.org/IBaseService/FMTenantGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMTenant[] FMTenantGetList(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenantGetList", ReplyAction="http://tempuri.org/IBaseService/FMTenantGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMTenant[]> FMTenantGetListAsync(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMCreditorGetList", ReplyAction="http://tempuri.org/IBaseService/FMCreditorGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMCreditor[] FMCreditorGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMCreditorGetList", ReplyAction="http://tempuri.org/IBaseService/FMCreditorGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMCreditor[]> FMCreditorGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMAccountGetList", ReplyAction="http://tempuri.org/IBaseService/FMAccountGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMAccount[] FMAccountGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMAccountGetList", ReplyAction="http://tempuri.org/IBaseService/FMAccountGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMAccount[]> FMAccountGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMAccountGetRemainingBalance", ReplyAction="http://tempuri.org/IBaseService/FMAccountGetRemainingBalanceResponse")]
        decimal FMAccountGetRemainingBalance(short companyNo, short departmentNo, decimal accountNo, System.DateTime budgetDate, string managementClassification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMAccountGetRemainingBalance", ReplyAction="http://tempuri.org/IBaseService/FMAccountGetRemainingBalanceResponse")]
        System.Threading.Tasks.Task<decimal> FMAccountGetRemainingBalanceAsync(short companyNo, short departmentNo, decimal accountNo, System.DateTime budgetDate, string managementClassification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMAllocationKeyGetList", ReplyAction="http://tempuri.org/IBaseService/FMAllocationKeyGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMAllocationKey[] FMAllocationKeyGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMAllocationKeyGetList", ReplyAction="http://tempuri.org/IBaseService/FMAllocationKeyGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMAllocationKey[]> FMAllocationKeyGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMRequisitionAdd", ReplyAction="http://tempuri.org/IBaseService/FMRequisitionAddResponse")]
        int FMRequisitionAdd(RestEgBoligHeldinTest.EgBoligService.FMRequisition requisition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMRequisitionAdd", ReplyAction="http://tempuri.org/IBaseService/FMRequisitionAddResponse")]
        System.Threading.Tasks.Task<int> FMRequisitionAddAsync(RestEgBoligHeldinTest.EgBoligService.FMRequisition requisition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMRequisitionGetList", ReplyAction="http://tempuri.org/IBaseService/FMRequisitionGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMRequisition[] FMRequisitionGetList(int[] requisitionNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMRequisitionGetList", ReplyAction="http://tempuri.org/IBaseService/FMRequisitionGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMRequisition[]> FMRequisitionGetListAsync(int[] requisitionNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMRequisitionGetListByTenancy", ReplyAction="http://tempuri.org/IBaseService/FMRequisitionGetListByTenancyResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMRequisition[] FMRequisitionGetListByTenancy(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMRequisitionGetListByTenancy", ReplyAction="http://tempuri.org/IBaseService/FMRequisitionGetListByTenancyResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMRequisition[]> FMRequisitionGetListByTenancyAsync(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMInvoiceGetList", ReplyAction="http://tempuri.org/IBaseService/FMInvoiceGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMInvoice[] FMInvoiceGetList(int requisitionNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMInvoiceGetList", ReplyAction="http://tempuri.org/IBaseService/FMInvoiceGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMInvoice[]> FMInvoiceGetListAsync(int requisitionNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMBudgetAdd", ReplyAction="http://tempuri.org/IBaseService/FMBudgetAddResponse")]
        System.Guid FMBudgetAdd(RestEgBoligHeldinTest.EgBoligService.FMBudget budget);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMBudgetAdd", ReplyAction="http://tempuri.org/IBaseService/FMBudgetAddResponse")]
        System.Threading.Tasks.Task<System.Guid> FMBudgetAddAsync(RestEgBoligHeldinTest.EgBoligService.FMBudget budget);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMBudgetStatusChanged", ReplyAction="http://tempuri.org/IBaseService/FMBudgetStatusChangedResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMBudgetChange[] FMBudgetStatusChanged(System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMBudgetStatusChanged", ReplyAction="http://tempuri.org/IBaseService/FMBudgetStatusChangedResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMBudgetChange[]> FMBudgetStatusChangedAsync(System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenantServiceTaskAdd", ReplyAction="http://tempuri.org/IBaseService/FMTenantServiceTaskAddResponse")]
        System.Guid FMTenantServiceTaskAdd(RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask tenantServiceTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenantServiceTaskAdd", ReplyAction="http://tempuri.org/IBaseService/FMTenantServiceTaskAddResponse")]
        System.Threading.Tasks.Task<System.Guid> FMTenantServiceTaskAddAsync(RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask tenantServiceTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenantServiceTaskAddAdministrative", ReplyAction="http://tempuri.org/IBaseService/FMTenantServiceTaskAddAdministrativeResponse")]
        System.Guid FMTenantServiceTaskAddAdministrative(RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask tenantServiceTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenantServiceTaskAddAdministrative", ReplyAction="http://tempuri.org/IBaseService/FMTenantServiceTaskAddAdministrativeResponse")]
        System.Threading.Tasks.Task<System.Guid> FMTenantServiceTaskAddAdministrativeAsync(RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask tenantServiceTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenantServiceTaskGetListByIds", ReplyAction="http://tempuri.org/IBaseService/FMTenantServiceTaskGetListByIdsResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask[] FMTenantServiceTaskGetListByIds(System.Guid[] tenantServiceTaskIds, System.Nullable<bool> includeFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenantServiceTaskGetListByIds", ReplyAction="http://tempuri.org/IBaseService/FMTenantServiceTaskGetListByIdsResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask[]> FMTenantServiceTaskGetListByIdsAsync(System.Guid[] tenantServiceTaskIds, System.Nullable<bool> includeFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenantServiceTaskGetListByDate", ReplyAction="http://tempuri.org/IBaseService/FMTenantServiceTaskGetListByDateResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask[] FMTenantServiceTaskGetListByDate(System.DateTime fromDate, System.Nullable<bool> includeFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenantServiceTaskGetListByDate", ReplyAction="http://tempuri.org/IBaseService/FMTenantServiceTaskGetListByDateResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask[]> FMTenantServiceTaskGetListByDateAsync(System.DateTime fromDate, System.Nullable<bool> includeFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenantServiceTaskGetListByTenant", ReplyAction="http://tempuri.org/IBaseService/FMTenantServiceTaskGetListByTenantResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask[] FMTenantServiceTaskGetListByTenant(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.Nullable<bool> includeFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenantServiceTaskGetListByTenant", ReplyAction="http://tempuri.org/IBaseService/FMTenantServiceTaskGetListByTenantResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask[]> FMTenantServiceTaskGetListByTenantAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.Nullable<bool> includeFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenantServiceTaskUpdate", ReplyAction="http://tempuri.org/IBaseService/FMTenantServiceTaskUpdateResponse")]
        void FMTenantServiceTaskUpdate(RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask tenantServiceTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMTenantServiceTaskUpdate", ReplyAction="http://tempuri.org/IBaseService/FMTenantServiceTaskUpdateResponse")]
        System.Threading.Tasks.Task FMTenantServiceTaskUpdateAsync(RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask tenantServiceTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMIdentityChangeGetList", ReplyAction="http://tempuri.org/IBaseService/FMIdentityChangeGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.FMIdentityChange[] FMIdentityChangeGetList(System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FMIdentityChangeGetList", ReplyAction="http://tempuri.org/IBaseService/FMIdentityChangeGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMIdentityChange[]> FMIdentityChangeGetListAsync(System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ConsentDefinitionGet", ReplyAction="http://tempuri.org/IBaseService/ConsentDefinitionGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.ConsentDefinition ConsentDefinitionGet(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ConsentDefinitionGet", ReplyAction="http://tempuri.org/IBaseService/ConsentDefinitionGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ConsentDefinition> ConsentDefinitionGetAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ConsentDefinitionGetList", ReplyAction="http://tempuri.org/IBaseService/ConsentDefinitionGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.ConsentDefinition[] ConsentDefinitionGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ConsentDefinitionGetList", ReplyAction="http://tempuri.org/IBaseService/ConsentDefinitionGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ConsentDefinition[]> ConsentDefinitionGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ConsentReplyGetList", ReplyAction="http://tempuri.org/IBaseService/ConsentReplyGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.ConsentReply[] ConsentReplyGetList(int interessentNo, bool includeHistoricConsentReplies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ConsentReplyGetList", ReplyAction="http://tempuri.org/IBaseService/ConsentReplyGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ConsentReply[]> ConsentReplyGetListAsync(int interessentNo, bool includeHistoricConsentReplies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ConsentReplyAdd", ReplyAction="http://tempuri.org/IBaseService/ConsentReplyAddResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/ConsentReplyAddArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void ConsentReplyAdd(RestEgBoligHeldinTest.EgBoligService.ConsentReply reply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ConsentReplyAdd", ReplyAction="http://tempuri.org/IBaseService/ConsentReplyAddResponse")]
        System.Threading.Tasks.Task ConsentReplyAddAsync(RestEgBoligHeldinTest.EgBoligService.ConsentReply reply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ConsentReplyUpdate", ReplyAction="http://tempuri.org/IBaseService/ConsentReplyUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/ConsentReplyUpdateArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void ConsentReplyUpdate(RestEgBoligHeldinTest.EgBoligService.ConsentReply reply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ConsentReplyUpdate", ReplyAction="http://tempuri.org/IBaseService/ConsentReplyUpdateResponse")]
        System.Threading.Tasks.Task ConsentReplyUpdateAsync(RestEgBoligHeldinTest.EgBoligService.ConsentReply reply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DataExportMemberGetList", ReplyAction="http://tempuri.org/IBaseService/DataExportMemberGetListResponse")]
        string DataExportMemberGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DataExportMemberGetList", ReplyAction="http://tempuri.org/IBaseService/DataExportMemberGetListResponse")]
        System.Threading.Tasks.Task<string> DataExportMemberGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DataExportTenantGetListWithDebt", ReplyAction="http://tempuri.org/IBaseService/DataExportTenantGetListWithDebtResponse")]
        string DataExportTenantGetListWithDebt(System.Nullable<short> companyNo, System.Nullable<short> departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DataExportTenantGetListWithDebt", ReplyAction="http://tempuri.org/IBaseService/DataExportTenantGetListWithDebtResponse")]
        System.Threading.Tasks.Task<string> DataExportTenantGetListWithDebtAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MainRegionGet", ReplyAction="http://tempuri.org/IBaseService/MainRegionGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.MainRegion MainRegionGet(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MainRegionGet", ReplyAction="http://tempuri.org/IBaseService/MainRegionGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.MainRegion> MainRegionGetAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MainRegionGetList", ReplyAction="http://tempuri.org/IBaseService/MainRegionGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.MainRegion[] MainRegionGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MainRegionGetList", ReplyAction="http://tempuri.org/IBaseService/MainRegionGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.MainRegion[]> MainRegionGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationStartCheck", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationStartCheckResponse")]
        RestEgBoligHeldinTest.EgBoligService.ValidationResult LeaseTerminationStartCheck(int interessentNo, short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationStartCheck", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationStartCheckResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> LeaseTerminationStartCheckAsync(int interessentNo, short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationGetStartInfo", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationGetStartInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/LeaseTerminationGetStartInfoArgumentExceptionFaul" +
            "t", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo LeaseTerminationGetStartInfo(int interessentNo, short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationGetStartInfo", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationGetStartInfoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo> LeaseTerminationGetStartInfoAsync(int interessentNo, short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationFindTenant2", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationFindTenant2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IBaseService/LeaseTerminationFindTenant2ArgumentNullExceptionF" +
            "ault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/LeaseTerminationFindTenant2ArgumentExceptionFault" +
            "", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        System.Nullable<int> LeaseTerminationFindTenant2(string cprNo, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationFindTenant2", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationFindTenant2Response")]
        System.Threading.Tasks.Task<System.Nullable<int>> LeaseTerminationFindTenant2Async(string cprNo, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationAddNewPersonAsTenant2", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationAddNewPersonAsTenant2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IBaseService/LeaseTerminationAddNewPersonAsTenant2ArgumentNull" +
            "ExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/LeaseTerminationAddNewPersonAsTenant2ArgumentExce" +
            "ptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void LeaseTerminationAddNewPersonAsTenant2(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, RestEgBoligHeldinTest.EgBoligService.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationAddNewPersonAsTenant2", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationAddNewPersonAsTenant2Response")]
        System.Threading.Tasks.Task LeaseTerminationAddNewPersonAsTenant2Async(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, RestEgBoligHeldinTest.EgBoligService.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationAddExistingPersonAsTenant2", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationAddExistingPersonAsTenant2Respons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/LeaseTerminationAddExistingPersonAsTenant2Argumen" +
            "tExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void LeaseTerminationAddExistingPersonAsTenant2(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationAddExistingPersonAsTenant2", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationAddExistingPersonAsTenant2Respons" +
            "e")]
        System.Threading.Tasks.Task LeaseTerminationAddExistingPersonAsTenant2Async(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationRemoveTenant2", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationRemoveTenant2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/LeaseTerminationRemoveTenant2ArgumentExceptionFau" +
            "lt", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void LeaseTerminationRemoveTenant2(short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationRemoveTenant2", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationRemoveTenant2Response")]
        System.Threading.Tasks.Task LeaseTerminationRemoveTenant2Async(short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationGetKeyDates", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationGetKeyDatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Data.DataException), Action="http://tempuri.org/IBaseService/LeaseTerminationGetKeyDatesDataExceptionFault", Name="DataException", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/LeaseTerminationGetKeyDatesArgumentExceptionFault" +
            "", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        RestEgBoligHeldinTest.EgBoligService.LeaseTermination.KeyDates LeaseTerminationGetKeyDates(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.DateTime desiredVacateDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationGetKeyDates", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationGetKeyDatesResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.LeaseTermination.KeyDates> LeaseTerminationGetKeyDatesAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.DateTime desiredVacateDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationTenancyInspectionEnabled", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationTenancyInspectionEnabledResponse")]
        bool LeaseTerminationTenancyInspectionEnabled(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationTenancyInspectionEnabled", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationTenancyInspectionEnabledResponse")]
        System.Threading.Tasks.Task<bool> LeaseTerminationTenancyInspectionEnabledAsync(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationGetAvailableTenancyInspectionTime" +
            "s", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationGetAvailableTenancyInspectionTime" +
            "sResponse")]
        RestEgBoligHeldinTest.EgBoligService.LeaseTermination.TenancyInspectionTime[] LeaseTerminationGetAvailableTenancyInspectionTimes(short companyNo, short departmentNo, System.DateTime desiredVacateDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationGetAvailableTenancyInspectionTime" +
            "s", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationGetAvailableTenancyInspectionTime" +
            "sResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.LeaseTermination.TenancyInspectionTime[]> LeaseTerminationGetAvailableTenancyInspectionTimesAsync(short companyNo, short departmentNo, System.DateTime desiredVacateDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationGetVacateReasons", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationGetVacateReasonsResponse")]
        RestEgBoligHeldinTest.EgBoligService.VacateReason[] LeaseTerminationGetVacateReasons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationGetVacateReasons", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationGetVacateReasonsResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.VacateReason[]> LeaseTerminationGetVacateReasonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationValidate", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationValidateResponse")]
        RestEgBoligHeldinTest.EgBoligService.ValidationResult[] LeaseTerminationValidate(RestEgBoligHeldinTest.EgBoligService.LeaseTermination leaseTermination);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationValidate", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationValidateResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult[]> LeaseTerminationValidateAsync(RestEgBoligHeldinTest.EgBoligService.LeaseTermination leaseTermination);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationAdd", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationAddResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IBaseService/LeaseTerminationAddArgumentNullExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/LeaseTerminationAddArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.IO.InvalidDataException), Action="http://tempuri.org/IBaseService/LeaseTerminationAddInvalidDataExceptionFault", Name="InvalidDataException", Namespace="http://schemas.datacontract.org/2004/07/System.IO")]
        System.Guid LeaseTerminationAdd(RestEgBoligHeldinTest.EgBoligService.LeaseTermination leaseTermination);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationAdd", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationAddResponse")]
        System.Threading.Tasks.Task<System.Guid> LeaseTerminationAddAsync(RestEgBoligHeldinTest.EgBoligService.LeaseTermination leaseTermination);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationUpdateMovingAddress", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationUpdateMovingAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/LeaseTerminationUpdateMovingAddressArgumentExcept" +
            "ionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Data.DataException), Action="http://tempuri.org/IBaseService/LeaseTerminationUpdateMovingAddressDataExceptionF" +
            "ault", Name="DataException", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
        void LeaseTerminationUpdateMovingAddress(System.Guid leaseTerminationId, byte tenantLevel, RestEgBoligHeldinTest.EgBoligService.LeaseTermination.MovingAddress movingAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationUpdateMovingAddress", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationUpdateMovingAddressResponse")]
        System.Threading.Tasks.Task LeaseTerminationUpdateMovingAddressAsync(System.Guid leaseTerminationId, byte tenantLevel, RestEgBoligHeldinTest.EgBoligService.LeaseTermination.MovingAddress movingAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationGetList", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary[] LeaseTerminationGetList(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LeaseTerminationGetList", ReplyAction="http://tempuri.org/IBaseService/LeaseTerminationGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary[]> LeaseTerminationGetListAsync(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyImprovementGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyImprovementGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyImprovement[] TenancyImprovementGetList(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.DateTime atDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyImprovementGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyImprovementGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyImprovement[]> TenancyImprovementGetListAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.DateTime atDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyCountGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyCountGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyCount[] TenancyCountGetList(System.Nullable<short> companyNo, System.Nullable<short> departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyCountGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyCountGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyCount[]> TenancyCountGetListAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentServiceInvoiceAdd", ReplyAction="http://tempuri.org/IBaseService/PaymentServiceInvoiceAddResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/PaymentServiceInvoiceAddArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void PaymentServiceInvoiceAdd(RestEgBoligHeldinTest.EgBoligService.PaymentServiceInvoice paymentServiceInvoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentServiceInvoiceAdd", ReplyAction="http://tempuri.org/IBaseService/PaymentServiceInvoiceAddResponse")]
        System.Threading.Tasks.Task PaymentServiceInvoiceAddAsync(RestEgBoligHeldinTest.EgBoligService.PaymentServiceInvoice paymentServiceInvoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishGetListByDepartmentNo", ReplyAction="http://tempuri.org/IBaseService/WishGetListByDepartmentNoResponse")]
        RestEgBoligHeldinTest.EgBoligService.Wish[] WishGetListByDepartmentNo(short memberCompanyNo, decimal memberNo, short companyNoMin, short departmentNoMin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishGetListByDepartmentNo", ReplyAction="http://tempuri.org/IBaseService/WishGetListByDepartmentNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Wish[]> WishGetListByDepartmentNoAsync(short memberCompanyNo, decimal memberNo, short companyNoMin, short departmentNoMin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishAdd", ReplyAction="http://tempuri.org/IBaseService/WishAddResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IBaseService/WishAddArgumentNullExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/WishAddArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void WishAdd(RestEgBoligHeldinTest.EgBoligService.Wish wish, string ifFreeWhatWaitlistTypeForMembership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishAdd", ReplyAction="http://tempuri.org/IBaseService/WishAddResponse")]
        System.Threading.Tasks.Task WishAddAsync(RestEgBoligHeldinTest.EgBoligService.Wish wish, string ifFreeWhatWaitlistTypeForMembership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishAddList", ReplyAction="http://tempuri.org/IBaseService/WishAddListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IBaseService/WishAddListArgumentNullExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/WishAddListArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void WishAddList(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes, string ifFreeWhatWaitlistTypeForMembership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishAddList", ReplyAction="http://tempuri.org/IBaseService/WishAddListResponse")]
        System.Threading.Tasks.Task WishAddListAsync(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes, string ifFreeWhatWaitlistTypeForMembership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishUpdate", ReplyAction="http://tempuri.org/IBaseService/WishUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IBaseService/WishUpdateArgumentNullExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/WishUpdateArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void WishUpdate(RestEgBoligHeldinTest.EgBoligService.Wish wish);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishUpdate", ReplyAction="http://tempuri.org/IBaseService/WishUpdateResponse")]
        System.Threading.Tasks.Task WishUpdateAsync(RestEgBoligHeldinTest.EgBoligService.Wish wish);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishUpdateList", ReplyAction="http://tempuri.org/IBaseService/WishUpdateListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IBaseService/WishUpdateListArgumentNullExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/WishUpdateListArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void WishUpdateList(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishUpdateList", ReplyAction="http://tempuri.org/IBaseService/WishUpdateListResponse")]
        System.Threading.Tasks.Task WishUpdateListAsync(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishDelete", ReplyAction="http://tempuri.org/IBaseService/WishDeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IBaseService/WishDeleteArgumentNullExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/WishDeleteArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void WishDelete(RestEgBoligHeldinTest.EgBoligService.Wish wish);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishDelete", ReplyAction="http://tempuri.org/IBaseService/WishDeleteResponse")]
        System.Threading.Tasks.Task WishDeleteAsync(RestEgBoligHeldinTest.EgBoligService.Wish wish);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishDeleteList", ReplyAction="http://tempuri.org/IBaseService/WishDeleteListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IBaseService/WishDeleteListArgumentNullExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/WishDeleteListArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void WishDeleteList(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishDeleteList", ReplyAction="http://tempuri.org/IBaseService/WishDeleteListResponse")]
        System.Threading.Tasks.Task WishDeleteListAsync(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishDeleteByMember", ReplyAction="http://tempuri.org/IBaseService/WishDeleteByMemberResponse")]
        void WishDeleteByMember(short memberCompanyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishDeleteByMember", ReplyAction="http://tempuri.org/IBaseService/WishDeleteByMemberResponse")]
        System.Threading.Tasks.Task WishDeleteByMemberAsync(short memberCompanyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ValidateWish", ReplyAction="http://tempuri.org/IBaseService/ValidateWishResponse")]
        RestEgBoligHeldinTest.EgBoligService.ValidationResult ValidateWish(RestEgBoligHeldinTest.EgBoligService.Wish wish, string ifFreeWhatWaitlistTypeForMembership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ValidateWish", ReplyAction="http://tempuri.org/IBaseService/ValidateWishResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> ValidateWishAsync(RestEgBoligHeldinTest.EgBoligService.Wish wish, string ifFreeWhatWaitlistTypeForMembership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ValidateWishes", ReplyAction="http://tempuri.org/IBaseService/ValidateWishesResponse")]
        RestEgBoligHeldinTest.EgBoligService.ValidationResult[] ValidateWishes(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes, string ifFreeWhatWaitlistTypeForMembership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ValidateWishes", ReplyAction="http://tempuri.org/IBaseService/ValidateWishesResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult[]> ValidateWishesAsync(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes, string ifFreeWhatWaitlistTypeForMembership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PetGet", ReplyAction="http://tempuri.org/IBaseService/PetGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.Pet PetGet(short companyNo, byte id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PetGet", ReplyAction="http://tempuri.org/IBaseService/PetGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Pet> PetGetAsync(short companyNo, byte id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PetGetList", ReplyAction="http://tempuri.org/IBaseService/PetGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.Pet[] PetGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PetGetList", ReplyAction="http://tempuri.org/IBaseService/PetGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Pet[]> PetGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PetGetListByCompany", ReplyAction="http://tempuri.org/IBaseService/PetGetListByCompanyResponse")]
        RestEgBoligHeldinTest.EgBoligService.Pet[] PetGetListByCompany(short companyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PetGetListByCompany", ReplyAction="http://tempuri.org/IBaseService/PetGetListByCompanyResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Pet[]> PetGetListByCompanyAsync(short companyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/EducationGet", ReplyAction="http://tempuri.org/IBaseService/EducationGetResponse")]
        string EducationGet(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/EducationGet", ReplyAction="http://tempuri.org/IBaseService/EducationGetResponse")]
        System.Threading.Tasks.Task<string> EducationGetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/EducationGetList", ReplyAction="http://tempuri.org/IBaseService/EducationGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.Education[] EducationGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/EducationGetList", ReplyAction="http://tempuri.org/IBaseService/EducationGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Education[]> EducationGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/EducationalInstitutionGet", ReplyAction="http://tempuri.org/IBaseService/EducationalInstitutionGetResponse")]
        string EducationalInstitutionGet(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/EducationalInstitutionGet", ReplyAction="http://tempuri.org/IBaseService/EducationalInstitutionGetResponse")]
        System.Threading.Tasks.Task<string> EducationalInstitutionGetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/EducationalInstitutionGetList", ReplyAction="http://tempuri.org/IBaseService/EducationalInstitutionGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.EducationalInstitution[] EducationalInstitutionGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/EducationalInstitutionGetList", ReplyAction="http://tempuri.org/IBaseService/EducationalInstitutionGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.EducationalInstitution[]> EducationalInstitutionGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/SpecialCriteriaGet", ReplyAction="http://tempuri.org/IBaseService/SpecialCriteriaGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.SpecialCriteria SpecialCriteriaGet(string type, byte number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/SpecialCriteriaGet", ReplyAction="http://tempuri.org/IBaseService/SpecialCriteriaGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.SpecialCriteria> SpecialCriteriaGetAsync(string type, byte number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/SpecialCriteriaGetList", ReplyAction="http://tempuri.org/IBaseService/SpecialCriteriaGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.SpecialCriteria[] SpecialCriteriaGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/SpecialCriteriaGetList", ReplyAction="http://tempuri.org/IBaseService/SpecialCriteriaGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.SpecialCriteria[]> SpecialCriteriaGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/SpecialCriteriaGetListByType", ReplyAction="http://tempuri.org/IBaseService/SpecialCriteriaGetListByTypeResponse")]
        RestEgBoligHeldinTest.EgBoligService.SpecialCriteria[] SpecialCriteriaGetListByType(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/SpecialCriteriaGetListByType", ReplyAction="http://tempuri.org/IBaseService/SpecialCriteriaGetListByTypeResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.SpecialCriteria[]> SpecialCriteriaGetListByTypeAsync(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/SpecialCriteriaGetListByMemberType", ReplyAction="http://tempuri.org/IBaseService/SpecialCriteriaGetListByMemberTypeResponse")]
        RestEgBoligHeldinTest.EgBoligService.SpecialCriteria[] SpecialCriteriaGetListByMemberType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/SpecialCriteriaGetListByMemberType", ReplyAction="http://tempuri.org/IBaseService/SpecialCriteriaGetListByMemberTypeResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.SpecialCriteria[]> SpecialCriteriaGetListByMemberTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/VersionGet", ReplyAction="http://tempuri.org/IBaseService/VersionGetResponse")]
        string VersionGet(bool fromDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/VersionGet", ReplyAction="http://tempuri.org/IBaseService/VersionGetResponse")]
        System.Threading.Tasks.Task<string> VersionGetAsync(bool fromDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TestFtpConnection", ReplyAction="http://tempuri.org/IBaseService/TestFtpConnectionResponse")]
        RestEgBoligHeldinTest.EgBoligService.ValidationResult TestFtpConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TestFtpConnection", ReplyAction="http://tempuri.org/IBaseService/TestFtpConnectionResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> TestFtpConnectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RegionGet", ReplyAction="http://tempuri.org/IBaseService/RegionGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.Region RegionGet(short omraadeNr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RegionGet", ReplyAction="http://tempuri.org/IBaseService/RegionGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Region> RegionGetAsync(short omraadeNr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RegionGetList", ReplyAction="http://tempuri.org/IBaseService/RegionGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.Region[] RegionGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RegionGetList", ReplyAction="http://tempuri.org/IBaseService/RegionGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Region[]> RegionGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RegionDetailGetList", ReplyAction="http://tempuri.org/IBaseService/RegionDetailGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.RegionDetail[] RegionDetailGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RegionDetailGetList", ReplyAction="http://tempuri.org/IBaseService/RegionDetailGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.RegionDetail[]> RegionDetailGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetListByCurrent", ReplyAction="http://tempuri.org/IBaseService/TenantGetListByCurrentResponse")]
        RestEgBoligHeldinTest.EgBoligService.Tenant[] TenantGetListByCurrent(bool includeTenant2, System.Nullable<bool> includeIdleTenants);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetListByCurrent", ReplyAction="http://tempuri.org/IBaseService/TenantGetListByCurrentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenant[]> TenantGetListByCurrentAsync(bool includeTenant2, System.Nullable<bool> includeIdleTenants);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetListByPast", ReplyAction="http://tempuri.org/IBaseService/TenantGetListByPastResponse")]
        RestEgBoligHeldinTest.EgBoligService.Tenant[] TenantGetListByPast(bool includeTenant2, byte howManyYearsBack, System.Nullable<bool> includeIdleTenants);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetListByPast", ReplyAction="http://tempuri.org/IBaseService/TenantGetListByPastResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenant[]> TenantGetListByPastAsync(bool includeTenant2, byte howManyYearsBack, System.Nullable<bool> includeIdleTenants);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetListByFuture", ReplyAction="http://tempuri.org/IBaseService/TenantGetListByFutureResponse")]
        RestEgBoligHeldinTest.EgBoligService.Tenant[] TenantGetListByFuture(bool includeTenant2, System.Nullable<bool> includeIdleTenants);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetListByFuture", ReplyAction="http://tempuri.org/IBaseService/TenantGetListByFutureResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenant[]> TenantGetListByFutureAsync(bool includeTenant2, System.Nullable<bool> includeIdleTenants);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/TenantGetListByDepartmentResponse")]
        RestEgBoligHeldinTest.EgBoligService.Tenant[] TenantGetListByDepartment(short companyNo, System.Nullable<short> departmentNo, System.Nullable<bool> includePastTenants, System.Nullable<bool> includeFutureTenants, System.Nullable<bool> includeIdleTenants);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/TenantGetListByDepartmentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenant[]> TenantGetListByDepartmentAsync(short companyNo, System.Nullable<short> departmentNo, System.Nullable<bool> includePastTenants, System.Nullable<bool> includeFutureTenants, System.Nullable<bool> includeIdleTenants);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetList", ReplyAction="http://tempuri.org/IBaseService/TenantGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.Tenant[] TenantGetList(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetList", ReplyAction="http://tempuri.org/IBaseService/TenantGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenant[]> TenantGetListAsync(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetRent", ReplyAction="http://tempuri.org/IBaseService/TenantGetRentResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyRent[] TenantGetRent(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.Nullable<System.DateTime> yearAndMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetRent", ReplyAction="http://tempuri.org/IBaseService/TenantGetRentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyRent[]> TenantGetRentAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.Nullable<System.DateTime> yearAndMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetBAccountBalance", ReplyAction="http://tempuri.org/IBaseService/TenantGetBAccountBalanceResponse")]
        decimal TenantGetBAccountBalance(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetBAccountBalance", ReplyAction="http://tempuri.org/IBaseService/TenantGetBAccountBalanceResponse")]
        System.Threading.Tasks.Task<decimal> TenantGetBAccountBalanceAsync(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetBAccountReservedAmount", ReplyAction="http://tempuri.org/IBaseService/TenantGetBAccountReservedAmountResponse")]
        decimal TenantGetBAccountReservedAmount(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetBAccountReservedAmount", ReplyAction="http://tempuri.org/IBaseService/TenantGetBAccountReservedAmountResponse")]
        System.Threading.Tasks.Task<decimal> TenantGetBAccountReservedAmountAsync(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetBAccountTransactions", ReplyAction="http://tempuri.org/IBaseService/TenantGetBAccountTransactionsResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenantTransaction[] TenantGetBAccountTransactions(short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetBAccountTransactions", ReplyAction="http://tempuri.org/IBaseService/TenantGetBAccountTransactionsResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenantTransaction[]> TenantGetBAccountTransactionsAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantUpdate", ReplyAction="http://tempuri.org/IBaseService/TenantUpdateResponse")]
        void TenantUpdate(RestEgBoligHeldinTest.EgBoligService.Tenant tenant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantUpdate", ReplyAction="http://tempuri.org/IBaseService/TenantUpdateResponse")]
        System.Threading.Tasks.Task TenantUpdateAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantUpdateCprNo", ReplyAction="http://tempuri.org/IBaseService/TenantUpdateCprNoResponse")]
        void TenantUpdateCprNo(int interessentNo, string cprNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantUpdateCprNo", ReplyAction="http://tempuri.org/IBaseService/TenantUpdateCprNoResponse")]
        System.Threading.Tasks.Task TenantUpdateCprNoAsync(int interessentNo, string cprNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetKeys", ReplyAction="http://tempuri.org/IBaseService/TenantGetKeysResponse")]
        RestEgBoligHeldinTest.EgBoligService.KeySet[] TenantGetKeys(short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetKeys", ReplyAction="http://tempuri.org/IBaseService/TenantGetKeysResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.KeySet[]> TenantGetKeysAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetRentTransactions", ReplyAction="http://tempuri.org/IBaseService/TenantGetRentTransactionsResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenantTransaction[] TenantGetRentTransactions(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to, System.Nullable<short> filterByType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetRentTransactions", ReplyAction="http://tempuri.org/IBaseService/TenantGetRentTransactionsResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenantTransaction[]> TenantGetRentTransactionsAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to, System.Nullable<short> filterByType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetDeposit", ReplyAction="http://tempuri.org/IBaseService/TenantGetDepositResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenantDeposit[] TenantGetDeposit(RestEgBoligHeldinTest.EgBoligService.Tenant tenant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetDeposit", ReplyAction="http://tempuri.org/IBaseService/TenantGetDepositResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenantDeposit[]> TenantGetDepositAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetDepositAmountDue", ReplyAction="http://tempuri.org/IBaseService/TenantGetDepositAmountDueResponse")]
        decimal TenantGetDepositAmountDue(short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetDepositAmountDue", ReplyAction="http://tempuri.org/IBaseService/TenantGetDepositAmountDueResponse")]
        System.Threading.Tasks.Task<decimal> TenantGetDepositAmountDueAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetUtilityConsumptionSummaries", ReplyAction="http://tempuri.org/IBaseService/TenantGetUtilityConsumptionSummariesResponse")]
        RestEgBoligHeldinTest.EgBoligService.UtilityConsumptionSummary[] TenantGetUtilityConsumptionSummaries(RestEgBoligHeldinTest.EgBoligService.Tenant tenant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetUtilityConsumptionSummaries", ReplyAction="http://tempuri.org/IBaseService/TenantGetUtilityConsumptionSummariesResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.UtilityConsumptionSummary[]> TenantGetUtilityConsumptionSummariesAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetUtilityConsumptionSpec", ReplyAction="http://tempuri.org/IBaseService/TenantGetUtilityConsumptionSpecResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenantTransaction[] TenantGetUtilityConsumptionSpec(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetUtilityConsumptionSpec", ReplyAction="http://tempuri.org/IBaseService/TenantGetUtilityConsumptionSpecResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenantTransaction[]> TenantGetUtilityConsumptionSpecAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetUtilityConsumptionMeasurements", ReplyAction="http://tempuri.org/IBaseService/TenantGetUtilityConsumptionMeasurementsResponse")]
        RestEgBoligHeldinTest.EgBoligService.UtilityMeter[] TenantGetUtilityConsumptionMeasurements(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetUtilityConsumptionMeasurements", ReplyAction="http://tempuri.org/IBaseService/TenantGetUtilityConsumptionMeasurementsResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.UtilityMeter[]> TenantGetUtilityConsumptionMeasurementsAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetHistory", ReplyAction="http://tempuri.org/IBaseService/TenantGetHistoryResponse")]
        RestEgBoligHeldinTest.EgBoligService.History[] TenantGetHistory(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, string[] types, System.Nullable<System.DateTime> fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetHistory", ReplyAction="http://tempuri.org/IBaseService/TenantGetHistoryResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.History[]> TenantGetHistoryAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, string[] types, System.Nullable<System.DateTime> fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetRentSpec", ReplyAction="http://tempuri.org/IBaseService/TenantGetRentSpecResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IBaseService/TenantGetRentSpecArgumentNullExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        RestEgBoligHeldinTest.EgBoligService.TenancyRentSpec[] TenantGetRentSpec(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.DateTime yearAndMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetRentSpec", ReplyAction="http://tempuri.org/IBaseService/TenantGetRentSpecResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyRentSpec[]> TenantGetRentSpecAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.DateTime yearAndMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetRentSpecByTenants", ReplyAction="http://tempuri.org/IBaseService/TenantGetRentSpecByTenantsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IBaseService/TenantGetRentSpecByTenantsArgumentNullExceptionFa" +
            "ult", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        RestEgBoligHeldinTest.EgBoligService.TenancyRentSpec[] TenantGetRentSpecByTenants(RestEgBoligHeldinTest.EgBoligService.Tenant[] tenants, System.DateTime yearAndMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetRentSpecByTenants", ReplyAction="http://tempuri.org/IBaseService/TenantGetRentSpecByTenantsResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyRentSpec[]> TenantGetRentSpecByTenantsAsync(RestEgBoligHeldinTest.EgBoligService.Tenant[] tenants, System.DateTime yearAndMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantUpdateEducation", ReplyAction="http://tempuri.org/IBaseService/TenantUpdateEducationResponse")]
        void TenantUpdateEducation(RestEgBoligHeldinTest.EgBoligService.Tenant tenant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantUpdateEducation", ReplyAction="http://tempuri.org/IBaseService/TenantUpdateEducationResponse")]
        System.Threading.Tasks.Task TenantUpdateEducationAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantUpdateCriterias", ReplyAction="http://tempuri.org/IBaseService/TenantUpdateCriteriasResponse")]
        void TenantUpdateCriterias(RestEgBoligHeldinTest.EgBoligService.Tenant tenant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantUpdateCriterias", ReplyAction="http://tempuri.org/IBaseService/TenantUpdateCriteriasResponse")]
        System.Threading.Tasks.Task TenantUpdateCriteriasAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetBankAccountInformation", ReplyAction="http://tempuri.org/IBaseService/TenantGetBankAccountInformationResponse")]
        RestEgBoligHeldinTest.EgBoligService.BankAccountInformation TenantGetBankAccountInformation(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantGetBankAccountInformation", ReplyAction="http://tempuri.org/IBaseService/TenantGetBankAccountInformationResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.BankAccountInformation> TenantGetBankAccountInformationAsync(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantUpdateBankAccountInformation", ReplyAction="http://tempuri.org/IBaseService/TenantUpdateBankAccountInformationResponse")]
        void TenantUpdateBankAccountInformation(RestEgBoligHeldinTest.EgBoligService.BankAccountInformation bankAccountInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenantUpdateBankAccountInformation", ReplyAction="http://tempuri.org/IBaseService/TenantUpdateBankAccountInformationResponse")]
        System.Threading.Tasks.Task TenantUpdateBankAccountInformationAsync(RestEgBoligHeldinTest.EgBoligService.BankAccountInformation bankAccountInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentNewMember", ReplyAction="http://tempuri.org/IBaseService/PaymentNewMemberResponse")]
        RestEgBoligHeldinTest.EgBoligService.Login PaymentNewMember(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, RestEgBoligHeldinTest.EgBoligService.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentNewMember", ReplyAction="http://tempuri.org/IBaseService/PaymentNewMemberResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login> PaymentNewMemberAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, RestEgBoligHeldinTest.EgBoligService.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentExistingMemberNotPaid", ReplyAction="http://tempuri.org/IBaseService/PaymentExistingMemberNotPaidResponse")]
        bool PaymentExistingMemberNotPaid(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, short memberCompanyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentExistingMemberNotPaid", ReplyAction="http://tempuri.org/IBaseService/PaymentExistingMemberNotPaidResponse")]
        System.Threading.Tasks.Task<bool> PaymentExistingMemberNotPaidAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, short memberCompanyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentNewMembership", ReplyAction="http://tempuri.org/IBaseService/PaymentNewMembershipResponse")]
        bool PaymentNewMembership(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentNewMembership", ReplyAction="http://tempuri.org/IBaseService/PaymentNewMembershipResponse")]
        System.Threading.Tasks.Task<bool> PaymentNewMembershipAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentRenewMembership", ReplyAction="http://tempuri.org/IBaseService/PaymentRenewMembershipResponse")]
        bool PaymentRenewMembership(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentRenewMembership", ReplyAction="http://tempuri.org/IBaseService/PaymentRenewMembershipResponse")]
        System.Threading.Tasks.Task<bool> PaymentRenewMembershipAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentUpgradeMembership", ReplyAction="http://tempuri.org/IBaseService/PaymentUpgradeMembershipResponse")]
        bool PaymentUpgradeMembership(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentUpgradeMembership", ReplyAction="http://tempuri.org/IBaseService/PaymentUpgradeMembershipResponse")]
        System.Threading.Tasks.Task<bool> PaymentUpgradeMembershipAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentTenantDeposit", ReplyAction="http://tempuri.org/IBaseService/PaymentTenantDepositResponse")]
        bool PaymentTenantDeposit(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentTenantDeposit", ReplyAction="http://tempuri.org/IBaseService/PaymentTenantDepositResponse")]
        System.Threading.Tasks.Task<bool> PaymentTenantDepositAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentTenantRent", ReplyAction="http://tempuri.org/IBaseService/PaymentTenantRentResponse")]
        bool PaymentTenantRent(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentTenantRent", ReplyAction="http://tempuri.org/IBaseService/PaymentTenantRentResponse")]
        System.Threading.Tasks.Task<bool> PaymentTenantRentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentBooking", ReplyAction="http://tempuri.org/IBaseService/PaymentBookingResponse")]
        bool PaymentBooking(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentBooking", ReplyAction="http://tempuri.org/IBaseService/PaymentBookingResponse")]
        System.Threading.Tasks.Task<bool> PaymentBookingAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateNewMemberPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateNewMemberPaymentResponse")]
        RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateNewMemberPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, RestEgBoligHeldinTest.EgBoligService.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateNewMemberPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateNewMemberPaymentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateNewMemberPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, RestEgBoligHeldinTest.EgBoligService.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateExistingMemberNotPaidPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateExistingMemberNotPaidPaymentRespon" +
            "se")]
        RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateExistingMemberNotPaidPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, short memberCompanyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateExistingMemberNotPaidPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateExistingMemberNotPaidPaymentRespon" +
            "se")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateExistingMemberNotPaidPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, short memberCompanyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateNewMembershipPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateNewMembershipPaymentResponse")]
        RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateNewMembershipPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateNewMembershipPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateNewMembershipPaymentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateNewMembershipPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateRenewMembershipPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateRenewMembershipPaymentResponse")]
        RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateRenewMembershipPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateRenewMembershipPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateRenewMembershipPaymentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateRenewMembershipPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateUpgradeMembershipPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateUpgradeMembershipPaymentResponse")]
        RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateUpgradeMembershipPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateUpgradeMembershipPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateUpgradeMembershipPaymentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateUpgradeMembershipPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateTenantDepositPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateTenantDepositPaymentResponse")]
        RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateTenantDepositPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateTenantDepositPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateTenantDepositPaymentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateTenantDepositPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateTenantRentPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateTenantRentPaymentResponse")]
        RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateTenantRentPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateTenantRentPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateTenantRentPaymentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateTenantRentPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateBookingPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateBookingPaymentResponse")]
        RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateBookingPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PaymentValidateBookingPayment", ReplyAction="http://tempuri.org/IBaseService/PaymentValidateBookingPaymentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateBookingPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CampaignGetById", ReplyAction="http://tempuri.org/IBaseService/CampaignGetByIdResponse")]
        RestEgBoligHeldinTest.EgBoligService.Campaign CampaignGetById(byte id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CampaignGetById", ReplyAction="http://tempuri.org/IBaseService/CampaignGetByIdResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Campaign> CampaignGetByIdAsync(byte id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CampaignGetByCode", ReplyAction="http://tempuri.org/IBaseService/CampaignGetByCodeResponse")]
        RestEgBoligHeldinTest.EgBoligService.Campaign CampaignGetByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CampaignGetByCode", ReplyAction="http://tempuri.org/IBaseService/CampaignGetByCodeResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Campaign> CampaignGetByCodeAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CampaignGetList", ReplyAction="http://tempuri.org/IBaseService/CampaignGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.Campaign[] CampaignGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CampaignGetList", ReplyAction="http://tempuri.org/IBaseService/CampaignGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Campaign[]> CampaignGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CampaignGetListByCompanyNo", ReplyAction="http://tempuri.org/IBaseService/CampaignGetListByCompanyNoResponse")]
        RestEgBoligHeldinTest.EgBoligService.Campaign[] CampaignGetListByCompanyNo(short companyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CampaignGetListByCompanyNo", ReplyAction="http://tempuri.org/IBaseService/CampaignGetListByCompanyNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Campaign[]> CampaignGetListByCompanyNoAsync(short companyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGet", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.FunctionRoom FunctionRoomGet(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGet", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FunctionRoom> FunctionRoomGetAsync(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGetListByCompany", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetListByCompanyResponse")]
        RestEgBoligHeldinTest.EgBoligService.FunctionRoom[] FunctionRoomGetListByCompany(short companyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGetListByCompany", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetListByCompanyResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FunctionRoom[]> FunctionRoomGetListByCompanyAsync(short companyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGetListByDepartmentKeys", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetListByDepartmentKeysResponse")]
        RestEgBoligHeldinTest.EgBoligService.FunctionRoom[] FunctionRoomGetListByDepartmentKeys(RestEgBoligHeldinTest.EgBoligService.DepartmentKey[] departmentKeys);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGetListByDepartmentKeys", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetListByDepartmentKeysResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FunctionRoom[]> FunctionRoomGetListByDepartmentKeysAsync(RestEgBoligHeldinTest.EgBoligService.DepartmentKey[] departmentKeys);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGetBookingsByRoom", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetBookingsByRoomResponse")]
        RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking[] FunctionRoomGetBookingsByRoom(RestEgBoligHeldinTest.EgBoligService.FunctionRoom functionRoom, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGetBookingsByRoom", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetBookingsByRoomResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking[]> FunctionRoomGetBookingsByRoomAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoom functionRoom, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGetBookingsByInteressent", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetBookingsByInteressentResponse")]
        RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking[] FunctionRoomGetBookingsByInteressent(int interessentNo, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to, System.Nullable<bool> canceled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGetBookingsByInteressent", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetBookingsByInteressentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking[]> FunctionRoomGetBookingsByInteressentAsync(int interessentNo, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to, System.Nullable<bool> canceled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomAddBooking", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomAddBookingResponse")]
        void FunctionRoomAddBooking(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomAddBooking", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomAddBookingResponse")]
        System.Threading.Tasks.Task FunctionRoomAddBookingAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomConfirmBooking", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomConfirmBookingResponse")]
        void FunctionRoomConfirmBooking(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking, string initials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomConfirmBooking", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomConfirmBookingResponse")]
        System.Threading.Tasks.Task FunctionRoomConfirmBookingAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking, string initials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomDeleteBooking", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomDeleteBookingResponse")]
        void FunctionRoomDeleteBooking(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomDeleteBooking", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomDeleteBookingResponse")]
        System.Threading.Tasks.Task FunctionRoomDeleteBookingAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomAddBooker", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomAddBookerResponse")]
        int FunctionRoomAddBooker(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooker functionRoomBooker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomAddBooker", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomAddBookerResponse")]
        System.Threading.Tasks.Task<int> FunctionRoomAddBookerAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooker functionRoomBooker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGetBooker", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetBookerResponse")]
        RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooker FunctionRoomGetBooker(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGetBooker", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetBookerResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooker> FunctionRoomGetBookerAsync(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomUpdateBooker", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomUpdateBookerResponse")]
        void FunctionRoomUpdateBooker(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooker functionRoomBooker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomUpdateBooker", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomUpdateBookerResponse")]
        System.Threading.Tasks.Task FunctionRoomUpdateBookerAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooker functionRoomBooker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGetBookingFee", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetBookingFeeResponse")]
        RestEgBoligHeldinTest.EgBoligService.Payment.FunctionRoomBookingAmount FunctionRoomGetBookingFee(RestEgBoligHeldinTest.EgBoligService.FunctionRoom functionRoom, System.DateTime start, System.DateTime end, bool internalBooker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGetBookingFee", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetBookingFeeResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.FunctionRoomBookingAmount> FunctionRoomGetBookingFeeAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoom functionRoom, System.DateTime start, System.DateTime end, bool internalBooker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGetBookingBalance", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetBookingBalanceResponse")]
        RestEgBoligHeldinTest.EgBoligService.Payment.FunctionRoomBookingAmount FunctionRoomGetBookingBalance(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FunctionRoomGetBookingBalance", ReplyAction="http://tempuri.org/IBaseService/FunctionRoomGetBookingBalanceResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.FunctionRoomBookingAmount> FunctionRoomGetBookingBalanceAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CreditorGetList", ReplyAction="http://tempuri.org/IBaseService/CreditorGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.Creditor[] CreditorGetList(string name, RestEgBoligHeldinTest.EgBoligService.Profession[] professions, string zipCode, int minRatingAverage, string preferredBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CreditorGetList", ReplyAction="http://tempuri.org/IBaseService/CreditorGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Creditor[]> CreditorGetListAsync(string name, RestEgBoligHeldinTest.EgBoligService.Profession[] professions, string zipCode, int minRatingAverage, string preferredBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CreditorUpdate", ReplyAction="http://tempuri.org/IBaseService/CreditorUpdateResponse")]
        void CreditorUpdate(RestEgBoligHeldinTest.EgBoligService.Creditor creditor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CreditorUpdate", ReplyAction="http://tempuri.org/IBaseService/CreditorUpdateResponse")]
        System.Threading.Tasks.Task CreditorUpdateAsync(RestEgBoligHeldinTest.EgBoligService.Creditor creditor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CreditorGetLatestRated", ReplyAction="http://tempuri.org/IBaseService/CreditorGetLatestRatedResponse")]
        RestEgBoligHeldinTest.EgBoligService.Creditor[] CreditorGetLatestRated(int howMany, System.Nullable<System.DateTime> howFarBack);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CreditorGetLatestRated", ReplyAction="http://tempuri.org/IBaseService/CreditorGetLatestRatedResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Creditor[]> CreditorGetLatestRatedAsync(int howMany, System.Nullable<System.DateTime> howFarBack);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ProfessionGetList", ReplyAction="http://tempuri.org/IBaseService/ProfessionGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.Profession[] ProfessionGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ProfessionGetList", ReplyAction="http://tempuri.org/IBaseService/ProfessionGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Profession[]> ProfessionGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RatingGetListByCreditor", ReplyAction="http://tempuri.org/IBaseService/RatingGetListByCreditorResponse")]
        RestEgBoligHeldinTest.EgBoligService.Rating[] RatingGetListByCreditor(RestEgBoligHeldinTest.EgBoligService.Creditor creditor, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RatingGetListByCreditor", ReplyAction="http://tempuri.org/IBaseService/RatingGetListByCreditorResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Rating[]> RatingGetListByCreditorAsync(RestEgBoligHeldinTest.EgBoligService.Creditor creditor, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RatingGetListByCreditorNo", ReplyAction="http://tempuri.org/IBaseService/RatingGetListByCreditorNoResponse")]
        RestEgBoligHeldinTest.EgBoligService.Rating[] RatingGetListByCreditorNo(decimal creditorNo, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RatingGetListByCreditorNo", ReplyAction="http://tempuri.org/IBaseService/RatingGetListByCreditorNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Rating[]> RatingGetListByCreditorNoAsync(decimal creditorNo, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RatingAdd", ReplyAction="http://tempuri.org/IBaseService/RatingAddResponse")]
        bool RatingAdd(RestEgBoligHeldinTest.EgBoligService.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RatingAdd", ReplyAction="http://tempuri.org/IBaseService/RatingAddResponse")]
        System.Threading.Tasks.Task<bool> RatingAddAsync(RestEgBoligHeldinTest.EgBoligService.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RatingDelete", ReplyAction="http://tempuri.org/IBaseService/RatingDeleteResponse")]
        bool RatingDelete(RestEgBoligHeldinTest.EgBoligService.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RatingDelete", ReplyAction="http://tempuri.org/IBaseService/RatingDeleteResponse")]
        System.Threading.Tasks.Task<bool> RatingDeleteAsync(RestEgBoligHeldinTest.EgBoligService.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RatingUpdate", ReplyAction="http://tempuri.org/IBaseService/RatingUpdateResponse")]
        bool RatingUpdate(RestEgBoligHeldinTest.EgBoligService.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RatingUpdate", ReplyAction="http://tempuri.org/IBaseService/RatingUpdateResponse")]
        System.Threading.Tasks.Task<bool> RatingUpdateAsync(RestEgBoligHeldinTest.EgBoligService.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RequisitionCreateBRequisition", ReplyAction="http://tempuri.org/IBaseService/RequisitionCreateBRequisitionResponse")]
        int RequisitionCreateBRequisition(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, decimal creditorNo, string bookkeepingText, string workDescription, decimal estimateWithoutVAT, System.Nullable<bool> ignoreTenantIsMoving);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RequisitionCreateBRequisition", ReplyAction="http://tempuri.org/IBaseService/RequisitionCreateBRequisitionResponse")]
        System.Threading.Tasks.Task<int> RequisitionCreateBRequisitionAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, decimal creditorNo, string bookkeepingText, string workDescription, decimal estimateWithoutVAT, System.Nullable<bool> ignoreTenantIsMoving);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RequisitionAddRequisitionOrderLines", ReplyAction="http://tempuri.org/IBaseService/RequisitionAddRequisitionOrderLinesResponse")]
        RestEgBoligHeldinTest.EgBoligService.ValidationResult RequisitionAddRequisitionOrderLines(int cvrNo, string initials, RestEgBoligHeldinTest.EgBoligService.RequisitionOrderLine[] orderLines);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RequisitionAddRequisitionOrderLines", ReplyAction="http://tempuri.org/IBaseService/RequisitionAddRequisitionOrderLinesResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> RequisitionAddRequisitionOrderLinesAsync(int cvrNo, string initials, RestEgBoligHeldinTest.EgBoligService.RequisitionOrderLine[] orderLines);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RentTypeGetList", ReplyAction="http://tempuri.org/IBaseService/RentTypeGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.RentType[] RentTypeGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RentTypeGetList", ReplyAction="http://tempuri.org/IBaseService/RentTypeGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.RentType[]> RentTypeGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokDocumentInfoGet", ReplyAction="http://tempuri.org/IBaseService/WebDokDocumentInfoGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo WebDokDocumentInfoGet(int webDokNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokDocumentInfoGet", ReplyAction="http://tempuri.org/IBaseService/WebDokDocumentInfoGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo> WebDokDocumentInfoGetAsync(int webDokNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByCompany", ReplyAction="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByCompanyResponse")]
        RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[] WebDokDocumentInfoGetListByCompany(short companyNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByCompany", ReplyAction="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByCompanyResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[]> WebDokDocumentInfoGetListByCompanyAsync(short companyNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByDepartmentResponse")]
        RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[] WebDokDocumentInfoGetListByDepartment(short companyNo, short departmentNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByDepartmentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[]> WebDokDocumentInfoGetListByDepartmentAsync(short companyNo, short departmentNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByTenant", ReplyAction="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByTenantResponse")]
        RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[] WebDokDocumentInfoGetListByTenant(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByTenant", ReplyAction="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByTenantResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[]> WebDokDocumentInfoGetListByTenantAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByMember", ReplyAction="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByMemberResponse")]
        RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[] WebDokDocumentInfoGetListByMember(short memberCompanyNo, decimal memberNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByMember", ReplyAction="http://tempuri.org/IBaseService/WebDokDocumentInfoGetListByMemberResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[]> WebDokDocumentInfoGetListByMemberAsync(short memberCompanyNo, decimal memberNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokCategoryGet", ReplyAction="http://tempuri.org/IBaseService/WebDokCategoryGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.WebDokCategory WebDokCategoryGet(short categoryNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokCategoryGet", ReplyAction="http://tempuri.org/IBaseService/WebDokCategoryGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokCategory> WebDokCategoryGetAsync(short categoryNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokCategoryGetList", ReplyAction="http://tempuri.org/IBaseService/WebDokCategoryGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.WebDokCategory[] WebDokCategoryGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokCategoryGetList", ReplyAction="http://tempuri.org/IBaseService/WebDokCategoryGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokCategory[]> WebDokCategoryGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokFileGetByNumber", ReplyAction="http://tempuri.org/IBaseService/WebDokFileGetByNumberResponse")]
        RestEgBoligHeldinTest.EgBoligService.WebDokFile WebDokFileGetByNumber(int webDokNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokFileGetByNumber", ReplyAction="http://tempuri.org/IBaseService/WebDokFileGetByNumberResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokFile> WebDokFileGetByNumberAsync(int webDokNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokFileGetByDocumentInfo", ReplyAction="http://tempuri.org/IBaseService/WebDokFileGetByDocumentInfoResponse")]
        RestEgBoligHeldinTest.EgBoligService.WebDokFile WebDokFileGetByDocumentInfo(RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo webDokDocumentInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WebDokFileGetByDocumentInfo", ReplyAction="http://tempuri.org/IBaseService/WebDokFileGetByDocumentInfoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokFile> WebDokFileGetByDocumentInfoAsync(RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo webDokDocumentInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FinancialDocumentGetDocument", ReplyAction="http://tempuri.org/IBaseService/FinancialDocumentGetDocumentResponse")]
        RestEgBoligHeldinTest.EgBoligService.FinancialDocument[] FinancialDocumentGetDocument(System.Nullable<int> journal, System.Nullable<int> reference, System.Nullable<double> documentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FinancialDocumentGetDocument", ReplyAction="http://tempuri.org/IBaseService/FinancialDocumentGetDocumentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FinancialDocument[]> FinancialDocumentGetDocumentAsync(System.Nullable<int> journal, System.Nullable<int> reference, System.Nullable<double> documentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FinancialTransactionGetTransactions", ReplyAction="http://tempuri.org/IBaseService/FinancialTransactionGetTransactionsResponse")]
        RestEgBoligHeldinTest.EgBoligService.FinancialTransaction[] FinancialTransactionGetTransactions(short companyNo, short departmentNo, System.Nullable<decimal> accountNo, string[] projectNames, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FinancialTransactionGetTransactions", ReplyAction="http://tempuri.org/IBaseService/FinancialTransactionGetTransactionsResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FinancialTransaction[]> FinancialTransactionGetTransactionsAsync(short companyNo, short departmentNo, System.Nullable<decimal> accountNo, string[] projectNames, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FinancialStatementGetListByOffset", ReplyAction="http://tempuri.org/IBaseService/FinancialStatementGetListByOffsetResponse")]
        RestEgBoligHeldinTest.EgBoligService.FinancialStatement[] FinancialStatementGetListByOffset(short companyNo, short departmentNo, short offset, string[] projectNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FinancialStatementGetListByOffset", ReplyAction="http://tempuri.org/IBaseService/FinancialStatementGetListByOffsetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FinancialStatement[]> FinancialStatementGetListByOffsetAsync(short companyNo, short departmentNo, short offset, string[] projectNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FinancialStatementGetListByDateInterval", ReplyAction="http://tempuri.org/IBaseService/FinancialStatementGetListByDateIntervalResponse")]
        RestEgBoligHeldinTest.EgBoligService.FinancialStatement[] FinancialStatementGetListByDateInterval(short companyNo, short departmentNo, System.DateTime startDate, System.DateTime endDate, string[] projectNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FinancialStatementGetListByDateInterval", ReplyAction="http://tempuri.org/IBaseService/FinancialStatementGetListByDateIntervalResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FinancialStatement[]> FinancialStatementGetListByDateIntervalAsync(short companyNo, short departmentNo, System.DateTime startDate, System.DateTime endDate, string[] projectNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FinancialYearGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/FinancialYearGetListByDepartmentResponse")]
        RestEgBoligHeldinTest.EgBoligService.FinancialYear[] FinancialYearGetListByDepartment(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FinancialYearGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/FinancialYearGetListByDepartmentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FinancialYear[]> FinancialYearGetListByDepartmentAsync(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FinancialProjectGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/FinancialProjectGetListByDepartmentResponse")]
        RestEgBoligHeldinTest.EgBoligService.FinancialProject[] FinancialProjectGetListByDepartment(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FinancialProjectGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/FinancialProjectGetListByDepartmentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FinancialProject[]> FinancialProjectGetListByDepartmentAsync(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/EnergyLabelGetList", ReplyAction="http://tempuri.org/IBaseService/EnergyLabelGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.EnergyLabel[] EnergyLabelGetList(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, System.Nullable<short> tenancyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/EnergyLabelGetList", ReplyAction="http://tempuri.org/IBaseService/EnergyLabelGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.EnergyLabel[]> EnergyLabelGetListAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, System.Nullable<short> tenancyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/AssignmentRuleGetList", ReplyAction="http://tempuri.org/IBaseService/AssignmentRuleGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.AssignmentRule[] AssignmentRuleGetList(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, System.Nullable<short> tenancyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/AssignmentRuleGetList", ReplyAction="http://tempuri.org/IBaseService/AssignmentRuleGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.AssignmentRule[]> AssignmentRuleGetListAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, System.Nullable<short> tenancyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RentKindGet", ReplyAction="http://tempuri.org/IBaseService/RentKindGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.RentKind RentKindGet(short companyNo, short departmentNo, short rentKindId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RentKindGet", ReplyAction="http://tempuri.org/IBaseService/RentKindGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.RentKind> RentKindGetAsync(short companyNo, short departmentNo, short rentKindId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RentKindGetList", ReplyAction="http://tempuri.org/IBaseService/RentKindGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.RentKind[] RentKindGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RentKindGetList", ReplyAction="http://tempuri.org/IBaseService/RentKindGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.RentKind[]> RentKindGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionGet", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyInspection TenancyInspectionGet(int tenancyInspectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionGet", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspection> TenancyInspectionGetAsync(int tenancyInspectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyInspection[] TenancyInspectionGetList(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, bool onlyActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspection[]> TenancyInspectionGetListAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, bool onlyActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByRoom", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByRoomRespons" +
            "e")]
        RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] TenancyInspectionDamageReportGetListByRoom(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionRoom room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByRoom", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByRoomRespons" +
            "e")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[]> TenancyInspectionDamageReportGetListByRoomAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionRoom room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByTenancyInsp" +
            "ection", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByTenancyInsp" +
            "ectionResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] TenancyInspectionDamageReportGetListByTenancyInspection(RestEgBoligHeldinTest.EgBoligService.TenancyInspection tenancyInspection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByTenancyInsp" +
            "ection", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByTenancyInsp" +
            "ectionResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[]> TenancyInspectionDamageReportGetListByTenancyInspectionAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspection tenancyInspection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByTenancyInsp" +
            "ections", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByTenancyInsp" +
            "ectionsResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] TenancyInspectionDamageReportGetListByTenancyInspections(RestEgBoligHeldinTest.EgBoligService.TenancyInspection[] tenancyInspections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByTenancyInsp" +
            "ections", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByTenancyInsp" +
            "ectionsResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[]> TenancyInspectionDamageReportGetListByTenancyInspectionsAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspection[] tenancyInspections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByTenant", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByTenantRespo" +
            "nse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] TenancyInspectionDamageReportGetListByTenant(short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByTenant", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportGetListByTenantRespo" +
            "nse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[]> TenancyInspectionDamageReportGetListByTenantAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportAdd", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportAddResponse")]
        void TenancyInspectionDamageReportAdd(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportAdd", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportAddResponse")]
        System.Threading.Tasks.Task TenancyInspectionDamageReportAddAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportAddList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportAddListResponse")]
        void TenancyInspectionDamageReportAddList(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] damageReports);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportAddList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportAddListResponse")]
        System.Threading.Tasks.Task TenancyInspectionDamageReportAddListAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] damageReports);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportUpdate", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportUpdateResponse")]
        void TenancyInspectionDamageReportUpdate(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportUpdate", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportUpdateResponse")]
        System.Threading.Tasks.Task TenancyInspectionDamageReportUpdateAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportUpdateList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportUpdateListResponse")]
        void TenancyInspectionDamageReportUpdateList(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] damageReports);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportUpdateList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportUpdateListResponse")]
        System.Threading.Tasks.Task TenancyInspectionDamageReportUpdateListAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] damageReports);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportDelete", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportDeleteResponse")]
        void TenancyInspectionDamageReportDelete(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportDelete", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportDeleteResponse")]
        System.Threading.Tasks.Task TenancyInspectionDamageReportDeleteAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportDeleteList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportDeleteListResponse")]
        void TenancyInspectionDamageReportDeleteList(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] damageReports);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionDamageReportDeleteList", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionDamageReportDeleteListResponse")]
        System.Threading.Tasks.Task TenancyInspectionDamageReportDeleteListAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] damageReports);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByDamageReport", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByDamageReportResp" +
            "onse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] TenancyInspectionPictureGetListByDamageReport(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByDamageReport", ReplyAction="http://tempuri.org/IBaseService/TenancyInspectionPictureGetListByDamageReportResp" +
            "onse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[]> TenancyInspectionPictureGetListByDamageReportAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CompanyGet", ReplyAction="http://tempuri.org/IBaseService/CompanyGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.Company CompanyGet(short companyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CompanyGet", ReplyAction="http://tempuri.org/IBaseService/CompanyGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Company> CompanyGetAsync(short companyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CompanyGetList", ReplyAction="http://tempuri.org/IBaseService/CompanyGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.Company[] CompanyGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CompanyGetList", ReplyAction="http://tempuri.org/IBaseService/CompanyGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Company[]> CompanyGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGet", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.Department DepartmentGet(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGet", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department> DepartmentGetAsync(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetList", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetList", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByKeys", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByKeysResponse")]
        RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByKeys(RestEgBoligHeldinTest.EgBoligService.DepartmentKey[] keys);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByKeys", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByKeysResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByKeysAsync(RestEgBoligHeldinTest.EgBoligService.DepartmentKey[] keys);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByCompany", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByCompanyResponse")]
        RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByCompany(short companyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByCompany", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByCompanyResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByCompanyAsync(short companyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByZipCode", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByZipCodeResponse")]
        RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByZipCode(int zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByZipCode", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByZipCodeResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByZipCodeAsync(int zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByStreet", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByStreetResponse")]
        RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByStreet(string streetName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByStreet", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByStreetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByStreetAsync(string streetName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByExactStreet", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByExactStreetResponse")]
        RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByExactStreet(string streetName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByExactStreet", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByExactStreetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByExactStreetAsync(string streetName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByGetListByRegion", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByGetListByRegionResponse")]
        RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByGetListByRegion(short regionNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByGetListByRegion", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByGetListByRegionResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByGetListByRegionAsync(short regionNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByRegion", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByRegionResponse")]
        RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByRegion(short regionNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByRegion", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByRegionResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByRegionAsync(short regionNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByOffice", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByOfficeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IBaseService/DepartmentGetListByOfficeArgumentNullExceptionFau" +
            "lt", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByOffice(RestEgBoligHeldinTest.EgBoligService.Office office);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentGetListByOffice", ReplyAction="http://tempuri.org/IBaseService/DepartmentGetListByOfficeResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByOfficeAsync(RestEgBoligHeldinTest.EgBoligService.Office office);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentTextGetList", ReplyAction="http://tempuri.org/IBaseService/DepartmentTextGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.DepartmentText[] DepartmentTextGetList(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/DepartmentTextGetList", ReplyAction="http://tempuri.org/IBaseService/DepartmentTextGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.DepartmentText[]> DepartmentTextGetListAsync(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGet", ReplyAction="http://tempuri.org/IBaseService/TenancyGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.Tenancy TenancyGet(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGet", ReplyAction="http://tempuri.org/IBaseService/TenancyGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenancy> TenancyGetAsync(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.Tenancy[] TenancyGetList(RestEgBoligHeldinTest.EgBoligService.Tenancy.Type type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenancy[]> TenancyGetListAsync(RestEgBoligHeldinTest.EgBoligService.Tenancy.Type type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGetListByCompany", ReplyAction="http://tempuri.org/IBaseService/TenancyGetListByCompanyResponse")]
        RestEgBoligHeldinTest.EgBoligService.Tenancy[] TenancyGetListByCompany(short companyNo, RestEgBoligHeldinTest.EgBoligService.Tenancy.Type type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGetListByCompany", ReplyAction="http://tempuri.org/IBaseService/TenancyGetListByCompanyResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenancy[]> TenancyGetListByCompanyAsync(short companyNo, RestEgBoligHeldinTest.EgBoligService.Tenancy.Type type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/TenancyGetListByDepartmentResponse")]
        RestEgBoligHeldinTest.EgBoligService.Tenancy[] TenancyGetListByDepartment(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.Tenancy.Type type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/TenancyGetListByDepartmentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenancy[]> TenancyGetListByDepartmentAsync(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.Tenancy.Type type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGetListByWish", ReplyAction="http://tempuri.org/IBaseService/TenancyGetListByWishResponse")]
        RestEgBoligHeldinTest.EgBoligService.Tenancy[] TenancyGetListByWish(short memberCompanyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGetListByWish", ReplyAction="http://tempuri.org/IBaseService/TenancyGetListByWishResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenancy[]> TenancyGetListByWishAsync(short memberCompanyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGetListByTenants", ReplyAction="http://tempuri.org/IBaseService/TenancyGetListByTenantsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IBaseService/TenancyGetListByTenantsArgumentNullExceptionFault" +
            "", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        RestEgBoligHeldinTest.EgBoligService.Tenancy[] TenancyGetListByTenants(RestEgBoligHeldinTest.EgBoligService.Tenant[] tenants);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGetListByTenants", ReplyAction="http://tempuri.org/IBaseService/TenancyGetListByTenantsResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenancy[]> TenancyGetListByTenantsAsync(RestEgBoligHeldinTest.EgBoligService.Tenant[] tenants);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGetRent", ReplyAction="http://tempuri.org/IBaseService/TenancyGetRentResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyRent[] TenancyGetRent(RestEgBoligHeldinTest.EgBoligService.Tenancy tenancy, System.DateTime when);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGetRent", ReplyAction="http://tempuri.org/IBaseService/TenancyGetRentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyRent[]> TenancyGetRentAsync(RestEgBoligHeldinTest.EgBoligService.Tenancy tenancy, System.DateTime when);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGetHistory", ReplyAction="http://tempuri.org/IBaseService/TenancyGetHistoryResponse")]
        RestEgBoligHeldinTest.EgBoligService.History[] TenancyGetHistory(RestEgBoligHeldinTest.EgBoligService.Tenancy tenancy, string[] types, System.Nullable<System.DateTime> fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyGetHistory", ReplyAction="http://tempuri.org/IBaseService/TenancyGetHistoryResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.History[]> TenancyGetHistoryAsync(RestEgBoligHeldinTest.EgBoligService.Tenancy tenancy, string[] types, System.Nullable<System.DateTime> fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyPremis[] TenancyPremisGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremis[]> TenancyPremisGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisGetListByDepartmentResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyPremis[] TenancyPremisGetListByDepartment(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisGetListByDepartmentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremis[]> TenancyPremisGetListByDepartmentAsync(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisGetListByTenancy", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisGetListByTenancyResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyPremis[] TenancyPremisGetListByTenancy(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisGetListByTenancy", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisGetListByTenancyResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremis[]> TenancyPremisGetListByTenancyAsync(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisValueGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisValueGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] TenancyPremisValueGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisValueGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisValueGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[]> TenancyPremisValueGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisValueGetListByCompany", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisValueGetListByCompanyResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] TenancyPremisValueGetListByCompany(short companyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisValueGetListByCompany", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisValueGetListByCompanyResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[]> TenancyPremisValueGetListByCompanyAsync(short companyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisValueGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisValueGetListByDepartmentResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] TenancyPremisValueGetListByDepartment(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisValueGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisValueGetListByDepartmentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[]> TenancyPremisValueGetListByDepartmentAsync(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisValueGetListByTenancy", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisValueGetListByTenancyResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] TenancyPremisValueGetListByTenancy(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisValueGetListByTenancy", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisValueGetListByTenancyResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[]> TenancyPremisValueGetListByTenancyAsync(short companyNo, short departmentNo, short tenancyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisValueGetListForAllTenancies", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisValueGetListForAllTenanciesResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] TenancyPremisValueGetListForAllTenancies(System.Nullable<short> companyNo, System.Nullable<short> departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisValueGetListForAllTenancies", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisValueGetListForAllTenanciesResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[]> TenancyPremisValueGetListForAllTenanciesAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisValueAdd", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisValueAddResponse")]
        void TenancyPremisValueAdd(RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] tenancyPremisValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisValueAdd", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisValueAddResponse")]
        System.Threading.Tasks.Task TenancyPremisValueAddAsync(RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] tenancyPremisValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisValueDelete", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisValueDeleteResponse")]
        void TenancyPremisValueDelete(RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] tenancyPremisValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyPremisValueDelete", ReplyAction="http://tempuri.org/IBaseService/TenancyPremisValueDeleteResponse")]
        System.Threading.Tasks.Task TenancyPremisValueDeleteAsync(RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] tenancyPremisValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyTypeGet", ReplyAction="http://tempuri.org/IBaseService/TenancyTypeGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyType TenancyTypeGet(short code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyTypeGet", ReplyAction="http://tempuri.org/IBaseService/TenancyTypeGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyType> TenancyTypeGetAsync(short code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyTypeGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyTypeGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.TenancyType[] TenancyTypeGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/TenancyTypeGetList", ReplyAction="http://tempuri.org/IBaseService/TenancyTypeGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyType[]> TenancyTypeGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ApartmentTypeGet", ReplyAction="http://tempuri.org/IBaseService/ApartmentTypeGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.ApartmentType ApartmentTypeGet(short code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ApartmentTypeGet", ReplyAction="http://tempuri.org/IBaseService/ApartmentTypeGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ApartmentType> ApartmentTypeGetAsync(short code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ApartmentTypeGetList", ReplyAction="http://tempuri.org/IBaseService/ApartmentTypeGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.ApartmentType[] ApartmentTypeGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ApartmentTypeGetList", ReplyAction="http://tempuri.org/IBaseService/ApartmentTypeGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ApartmentType[]> ApartmentTypeGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/HousingTypeGet", ReplyAction="http://tempuri.org/IBaseService/HousingTypeGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.HousingType HousingTypeGet(short companyNo, short departmentNo, string typeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/HousingTypeGet", ReplyAction="http://tempuri.org/IBaseService/HousingTypeGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.HousingType> HousingTypeGetAsync(short companyNo, short departmentNo, string typeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/HousingTypeGetList", ReplyAction="http://tempuri.org/IBaseService/HousingTypeGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.HousingType[] HousingTypeGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/HousingTypeGetList", ReplyAction="http://tempuri.org/IBaseService/HousingTypeGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.HousingType[]> HousingTypeGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileGetListByFileType", ReplyAction="http://tempuri.org/IBaseService/FileGetListByFileTypeResponse")]
        RestEgBoligHeldinTest.EgBoligService.File[] FileGetListByFileType(RestEgBoligHeldinTest.EgBoligService.File.Type type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileGetListByFileType", ReplyAction="http://tempuri.org/IBaseService/FileGetListByFileTypeResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.File[]> FileGetListByFileTypeAsync(RestEgBoligHeldinTest.EgBoligService.File.Type type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/FileGetListByDepartmentResponse")]
        RestEgBoligHeldinTest.EgBoligService.File[] FileGetListByDepartment(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.File.Type type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/FileGetListByDepartmentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.File[]> FileGetListByDepartmentAsync(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.File.Type type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileGetListByTenancy", ReplyAction="http://tempuri.org/IBaseService/FileGetListByTenancyResponse")]
        RestEgBoligHeldinTest.EgBoligService.File[] FileGetListByTenancy(short companyNo, short departmentNo, string tenancyNo, RestEgBoligHeldinTest.EgBoligService.File.Type type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileGetListByTenancy", ReplyAction="http://tempuri.org/IBaseService/FileGetListByTenancyResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.File[]> FileGetListByTenancyAsync(short companyNo, short departmentNo, string tenancyNo, RestEgBoligHeldinTest.EgBoligService.File.Type type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileAdd", ReplyAction="http://tempuri.org/IBaseService/FileAddResponse")]
        void FileAdd(RestEgBoligHeldinTest.EgBoligService.File file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileAdd", ReplyAction="http://tempuri.org/IBaseService/FileAddResponse")]
        System.Threading.Tasks.Task FileAddAsync(RestEgBoligHeldinTest.EgBoligService.File file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileAddList", ReplyAction="http://tempuri.org/IBaseService/FileAddListResponse")]
        void FileAddList(RestEgBoligHeldinTest.EgBoligService.File[] files);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileAddList", ReplyAction="http://tempuri.org/IBaseService/FileAddListResponse")]
        System.Threading.Tasks.Task FileAddListAsync(RestEgBoligHeldinTest.EgBoligService.File[] files);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileUpdate", ReplyAction="http://tempuri.org/IBaseService/FileUpdateResponse")]
        void FileUpdate(RestEgBoligHeldinTest.EgBoligService.File file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileUpdate", ReplyAction="http://tempuri.org/IBaseService/FileUpdateResponse")]
        System.Threading.Tasks.Task FileUpdateAsync(RestEgBoligHeldinTest.EgBoligService.File file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileUpdateList", ReplyAction="http://tempuri.org/IBaseService/FileUpdateListResponse")]
        void FileUpdateList(RestEgBoligHeldinTest.EgBoligService.File[] files);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileUpdateList", ReplyAction="http://tempuri.org/IBaseService/FileUpdateListResponse")]
        System.Threading.Tasks.Task FileUpdateListAsync(RestEgBoligHeldinTest.EgBoligService.File[] files);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileDelete", ReplyAction="http://tempuri.org/IBaseService/FileDeleteResponse")]
        void FileDelete(RestEgBoligHeldinTest.EgBoligService.File file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileDelete", ReplyAction="http://tempuri.org/IBaseService/FileDeleteResponse")]
        System.Threading.Tasks.Task FileDeleteAsync(RestEgBoligHeldinTest.EgBoligService.File file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileDeleteList", ReplyAction="http://tempuri.org/IBaseService/FileDeleteListResponse")]
        void FileDeleteList(RestEgBoligHeldinTest.EgBoligService.File[] files);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/FileDeleteList", ReplyAction="http://tempuri.org/IBaseService/FileDeleteListResponse")]
        System.Threading.Tasks.Task FileDeleteListAsync(RestEgBoligHeldinTest.EgBoligService.File[] files);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CountryGetAll", ReplyAction="http://tempuri.org/IBaseService/CountryGetAllResponse")]
        RestEgBoligHeldinTest.EgBoligService.Country[] CountryGetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/CountryGetAll", ReplyAction="http://tempuri.org/IBaseService/CountryGetAllResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Country[]> CountryGetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ChildGetByMember", ReplyAction="http://tempuri.org/IBaseService/ChildGetByMemberResponse")]
        RestEgBoligHeldinTest.EgBoligService.Child[] ChildGetByMember(short companyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ChildGetByMember", ReplyAction="http://tempuri.org/IBaseService/ChildGetByMemberResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Child[]> ChildGetByMemberAsync(short companyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ChildAdd", ReplyAction="http://tempuri.org/IBaseService/ChildAddResponse")]
        void ChildAdd(RestEgBoligHeldinTest.EgBoligService.Child child);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ChildAdd", ReplyAction="http://tempuri.org/IBaseService/ChildAddResponse")]
        System.Threading.Tasks.Task ChildAddAsync(RestEgBoligHeldinTest.EgBoligService.Child child);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ChildAddChildren", ReplyAction="http://tempuri.org/IBaseService/ChildAddChildrenResponse")]
        void ChildAddChildren(RestEgBoligHeldinTest.EgBoligService.Child[] children);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ChildAddChildren", ReplyAction="http://tempuri.org/IBaseService/ChildAddChildrenResponse")]
        System.Threading.Tasks.Task ChildAddChildrenAsync(RestEgBoligHeldinTest.EgBoligService.Child[] children);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ChildUpdate", ReplyAction="http://tempuri.org/IBaseService/ChildUpdateResponse")]
        void ChildUpdate(RestEgBoligHeldinTest.EgBoligService.Child child);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ChildUpdate", ReplyAction="http://tempuri.org/IBaseService/ChildUpdateResponse")]
        System.Threading.Tasks.Task ChildUpdateAsync(RestEgBoligHeldinTest.EgBoligService.Child child);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ChildUpdateChildren", ReplyAction="http://tempuri.org/IBaseService/ChildUpdateChildrenResponse")]
        void ChildUpdateChildren(RestEgBoligHeldinTest.EgBoligService.Child[] children);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ChildUpdateChildren", ReplyAction="http://tempuri.org/IBaseService/ChildUpdateChildrenResponse")]
        System.Threading.Tasks.Task ChildUpdateChildrenAsync(RestEgBoligHeldinTest.EgBoligService.Child[] children);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ChildDelete", ReplyAction="http://tempuri.org/IBaseService/ChildDeleteResponse")]
        void ChildDelete(RestEgBoligHeldinTest.EgBoligService.Child child);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ChildDelete", ReplyAction="http://tempuri.org/IBaseService/ChildDeleteResponse")]
        System.Threading.Tasks.Task ChildDeleteAsync(RestEgBoligHeldinTest.EgBoligService.Child child);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ChildDeleteChildren", ReplyAction="http://tempuri.org/IBaseService/ChildDeleteChildrenResponse")]
        void ChildDeleteChildren(RestEgBoligHeldinTest.EgBoligService.Child[] children);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ChildDeleteChildren", ReplyAction="http://tempuri.org/IBaseService/ChildDeleteChildrenResponse")]
        System.Threading.Tasks.Task ChildDeleteChildrenAsync(RestEgBoligHeldinTest.EgBoligService.Child[] children);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RoleTypeGet", ReplyAction="http://tempuri.org/IBaseService/RoleTypeGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.RoleType RoleTypeGet(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RoleTypeGet", ReplyAction="http://tempuri.org/IBaseService/RoleTypeGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.RoleType> RoleTypeGetAsync(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RoleTypeGetList", ReplyAction="http://tempuri.org/IBaseService/RoleTypeGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.RoleType[] RoleTypeGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/RoleTypeGetList", ReplyAction="http://tempuri.org/IBaseService/RoleTypeGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.RoleType[]> RoleTypeGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/PersonnelGetListByDepartmentResponse")]
        RestEgBoligHeldinTest.EgBoligService.Personnel[] PersonnelGetListByDepartment(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/PersonnelGetListByDepartmentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Personnel[]> PersonnelGetListByDepartmentAsync(short companyNo, short departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelGetListByRoleType", ReplyAction="http://tempuri.org/IBaseService/PersonnelGetListByRoleTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/PersonnelGetListByRoleTypeArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        RestEgBoligHeldinTest.EgBoligService.Personnel[] PersonnelGetListByRoleType(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string roleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelGetListByRoleType", ReplyAction="http://tempuri.org/IBaseService/PersonnelGetListByRoleTypeResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Personnel[]> PersonnelGetListByRoleTypeAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string roleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelGetListByRoleArt", ReplyAction="http://tempuri.org/IBaseService/PersonnelGetListByRoleArtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/PersonnelGetListByRoleArtArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        RestEgBoligHeldinTest.EgBoligService.Personnel[] PersonnelGetListByRoleArt(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string roleArt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelGetListByRoleArt", ReplyAction="http://tempuri.org/IBaseService/PersonnelGetListByRoleArtResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Personnel[]> PersonnelGetListByRoleArtAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string roleArt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelGetListByOccupation", ReplyAction="http://tempuri.org/IBaseService/PersonnelGetListByOccupationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/PersonnelGetListByOccupationArgumentExceptionFaul" +
            "t", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        RestEgBoligHeldinTest.EgBoligService.Personnel[] PersonnelGetListByOccupation(short companyNo, short departmentNo, string occupation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelGetListByOccupation", ReplyAction="http://tempuri.org/IBaseService/PersonnelGetListByOccupationResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Personnel[]> PersonnelGetListByOccupationAsync(short companyNo, short departmentNo, string occupation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelGetListByName", ReplyAction="http://tempuri.org/IBaseService/PersonnelGetListByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/PersonnelGetListByNameArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        RestEgBoligHeldinTest.EgBoligService.Personnel[] PersonnelGetListByName(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelGetListByName", ReplyAction="http://tempuri.org/IBaseService/PersonnelGetListByNameResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Personnel[]> PersonnelGetListByNameAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelGetListByInitials", ReplyAction="http://tempuri.org/IBaseService/PersonnelGetListByInitialsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/PersonnelGetListByInitialsArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        RestEgBoligHeldinTest.EgBoligService.Personnel[] PersonnelGetListByInitials(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string initials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelGetListByInitials", ReplyAction="http://tempuri.org/IBaseService/PersonnelGetListByInitialsResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Personnel[]> PersonnelGetListByInitialsAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string initials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelGetListByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/PersonnelGetListByInteressentNoResponse")]
        RestEgBoligHeldinTest.EgBoligService.Personnel[] PersonnelGetListByInteressentNo(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelGetListByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/PersonnelGetListByInteressentNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Personnel[]> PersonnelGetListByInteressentNoAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelUpdate", ReplyAction="http://tempuri.org/IBaseService/PersonnelUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IBaseService/PersonnelUpdateArgumentNullExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void PersonnelUpdate(RestEgBoligHeldinTest.EgBoligService.Personnel personnel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PersonnelUpdate", ReplyAction="http://tempuri.org/IBaseService/PersonnelUpdateResponse")]
        System.Threading.Tasks.Task PersonnelUpdateAsync(RestEgBoligHeldinTest.EgBoligService.Personnel personnel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForNewMember", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForNewMemberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForNewMemberArgumentEx" +
            "ceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Data.DataException), Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForNewMemberDataExcept" +
            "ionFault", Name="DataException", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
        RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount MemberFeeGetMembershipPriceForNewMember(short companyNo, byte noOfYears, byte offerByEmail, byte status, short[] lmtyper, string waitlistType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForNewMember", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForNewMemberResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount> MemberFeeGetMembershipPriceForNewMemberAsync(short companyNo, byte noOfYears, byte offerByEmail, byte status, short[] lmtyper, string waitlistType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceListForNewMember", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceListForNewMemberRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceListForNewMemberArgume" +
            "ntExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Data.DataException), Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceListForNewMemberDataEx" +
            "ceptionFault", Name="DataException", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
        RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount[] MemberFeeGetMembershipPriceListForNewMember(System.Collections.Generic.Dictionary<short, short[]> companyNoAndTenancyTypes, byte noOfYears, byte offerByEmail, byte status, string waitlistType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceListForNewMember", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceListForNewMemberRespon" +
            "se")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount[]> MemberFeeGetMembershipPriceListForNewMemberAsync(System.Collections.Generic.Dictionary<short, short[]> companyNoAndTenancyTypes, byte noOfYears, byte offerByEmail, byte status, string waitlistType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberByMem" +
            "berNo", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberByMem" +
            "berNoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberByMem" +
            "berNoArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Data.DataException), Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberByMem" +
            "berNoDataExceptionFault", Name="DataException", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
        RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount MemberFeeGetMembershipPriceForExistingMemberByMemberNo(short memberCompanyNo, decimal memberNo, short newCompanyNo, byte noOfYears, byte status, short[] lmtyper, string waitlistType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberByMem" +
            "berNo", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberByMem" +
            "berNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount> MemberFeeGetMembershipPriceForExistingMemberByMemberNoAsync(short memberCompanyNo, decimal memberNo, short newCompanyNo, byte noOfYears, byte status, short[] lmtyper, string waitlistType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberByInt" +
            "eressentNo", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberByInt" +
            "eressentNoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberByInt" +
            "eressentNoArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Data.DataException), Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberByInt" +
            "eressentNoDataExceptionFault", Name="DataException", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
        RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount MemberFeeGetMembershipPriceForExistingMemberByInteressentNo(int interessentNo, short newCompanyNo, byte noOfYears, byte status, short[] lmtyper, string waitlistType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberByInt" +
            "eressentNo", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberByInt" +
            "eressentNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount> MemberFeeGetMembershipPriceForExistingMemberByInteressentNoAsync(int interessentNo, short newCompanyNo, byte noOfYears, byte status, short[] lmtyper, string waitlistType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetUpgradeMembershipPrice", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetUpgradeMembershipPriceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/MemberFeeGetUpgradeMembershipPriceArgumentExcepti" +
            "onFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Data.DataException), Action="http://tempuri.org/IBaseService/MemberFeeGetUpgradeMembershipPriceDataExceptionFa" +
            "ult", Name="DataException", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
        RestEgBoligHeldinTest.EgBoligService.Payment.UpgradeAmount MemberFeeGetUpgradeMembershipPrice(short memberCompanyNo, decimal memberNo, short upgradeCompanyNo, string waitlistType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetUpgradeMembershipPrice", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetUpgradeMembershipPriceResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.UpgradeAmount> MemberFeeGetUpgradeMembershipPriceAsync(short memberCompanyNo, decimal memberNo, short upgradeCompanyNo, string waitlistType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetRenewMembershipPrice", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetRenewMembershipPriceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/MemberFeeGetRenewMembershipPriceArgumentException" +
            "Fault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Data.DataException), Action="http://tempuri.org/IBaseService/MemberFeeGetRenewMembershipPriceDataExceptionFaul" +
            "t", Name="DataException", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
        RestEgBoligHeldinTest.EgBoligService.Payment.RenewAmount MemberFeeGetRenewMembershipPrice(short companyNo, decimal memberNo, short renewCompanyNo, string waitlistType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetRenewMembershipPrice", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetRenewMembershipPriceResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.RenewAmount> MemberFeeGetRenewMembershipPriceAsync(short companyNo, decimal memberNo, short renewCompanyNo, string waitlistType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberNotPa" +
            "id", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberNotPa" +
            "idResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberNotPa" +
            "idArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Data.DataException), Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberNotPa" +
            "idDataExceptionFault", Name="DataException", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
        RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount[] MemberFeeGetMembershipPriceForExistingMemberNotPaid(short memberCompanyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberNotPa" +
            "id", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetMembershipPriceForExistingMemberNotPa" +
            "idResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount[]> MemberFeeGetMembershipPriceForExistingMemberNotPaidAsync(short memberCompanyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetList", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.MemberFee[] MemberFeeGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberFeeGetList", ReplyAction="http://tempuri.org/IBaseService/MemberFeeGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.MemberFee[]> MemberFeeGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/BoardMemberGetListByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/BoardMemberGetListByInteressentNoResponse")]
        RestEgBoligHeldinTest.EgBoligService.BoardMember[] BoardMemberGetListByInteressentNo(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/BoardMemberGetListByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/BoardMemberGetListByInteressentNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.BoardMember[]> BoardMemberGetListByInteressentNoAsync(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/BoardMemberGetListByGroupName", ReplyAction="http://tempuri.org/IBaseService/BoardMemberGetListByGroupNameResponse")]
        RestEgBoligHeldinTest.EgBoligService.BoardMember[] BoardMemberGetListByGroupName(short companyNo, short departmentNo, string groupName, System.Nullable<bool> onlyActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/BoardMemberGetListByGroupName", ReplyAction="http://tempuri.org/IBaseService/BoardMemberGetListByGroupNameResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.BoardMember[]> BoardMemberGetListByGroupNameAsync(short companyNo, short departmentNo, string groupName, System.Nullable<bool> onlyActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/BoardGroupNames", ReplyAction="http://tempuri.org/IBaseService/BoardGroupNamesResponse")]
        string[] BoardGroupNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/BoardGroupNames", ReplyAction="http://tempuri.org/IBaseService/BoardGroupNamesResponse")]
        System.Threading.Tasks.Task<string[]> BoardGroupNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/BoardMemberGetListByName", ReplyAction="http://tempuri.org/IBaseService/BoardMemberGetListByNameResponse")]
        RestEgBoligHeldinTest.EgBoligService.BoardMember[] BoardMemberGetListByName(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string groupName, string name, System.Nullable<bool> onlyActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/BoardMemberGetListByName", ReplyAction="http://tempuri.org/IBaseService/BoardMemberGetListByNameResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.BoardMember[]> BoardMemberGetListByNameAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string groupName, string name, System.Nullable<bool> onlyActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/BoardMemberUpdate", ReplyAction="http://tempuri.org/IBaseService/BoardMemberUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IBaseService/BoardMemberUpdateArgumentNullExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void BoardMemberUpdate(RestEgBoligHeldinTest.EgBoligService.BoardMember boardMember);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/BoardMemberUpdate", ReplyAction="http://tempuri.org/IBaseService/BoardMemberUpdateResponse")]
        System.Threading.Tasks.Task BoardMemberUpdateAsync(RestEgBoligHeldinTest.EgBoligService.BoardMember boardMember);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/BoardMemberUpdateCprNo", ReplyAction="http://tempuri.org/IBaseService/BoardMemberUpdateCprNoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IBaseService/BoardMemberUpdateCprNoArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void BoardMemberUpdateCprNo(int interessentNo, System.Nullable<System.DateTime> birthday, string cprSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/BoardMemberUpdateCprNo", ReplyAction="http://tempuri.org/IBaseService/BoardMemberUpdateCprNoResponse")]
        System.Threading.Tasks.Task BoardMemberUpdateCprNoAsync(int interessentNo, System.Nullable<System.DateTime> birthday, string cprSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/LoginByInteressentNoResponse")]
        RestEgBoligHeldinTest.EgBoligService.Login LoginByInteressentNo(int interessentNo, string password, System.Nullable<bool> doNotUpdateLoginTimestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/LoginByInteressentNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login> LoginByInteressentNoAsync(int interessentNo, string password, System.Nullable<bool> doNotUpdateLoginTimestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginByEmail", ReplyAction="http://tempuri.org/IBaseService/LoginByEmailResponse")]
        RestEgBoligHeldinTest.EgBoligService.Login LoginByEmail(string email, string password, System.Nullable<bool> doNotUpdateLoginTimestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginByEmail", ReplyAction="http://tempuri.org/IBaseService/LoginByEmailResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login> LoginByEmailAsync(string email, string password, System.Nullable<bool> doNotUpdateLoginTimestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginByCprNo", ReplyAction="http://tempuri.org/IBaseService/LoginByCprNoResponse")]
        RestEgBoligHeldinTest.EgBoligService.Login LoginByCprNo(string cprNo, string password, System.Nullable<bool> doNotUpdateLoginTimestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginByCprNo", ReplyAction="http://tempuri.org/IBaseService/LoginByCprNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login> LoginByCprNoAsync(string cprNo, string password, System.Nullable<bool> doNotUpdateLoginTimestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginByInitials", ReplyAction="http://tempuri.org/IBaseService/LoginByInitialsResponse")]
        RestEgBoligHeldinTest.EgBoligService.Login LoginByInitials(string initials, System.Nullable<bool> doNotUpdateLoginTimestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginByInitials", ReplyAction="http://tempuri.org/IBaseService/LoginByInitialsResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login> LoginByInitialsAsync(string initials, System.Nullable<bool> doNotUpdateLoginTimestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginByNemID", ReplyAction="http://tempuri.org/IBaseService/LoginByNemIDResponse")]
        RestEgBoligHeldinTest.EgBoligService.Login LoginByNemID(string pid, System.Nullable<bool> doNotUpdateLoginTimestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginByNemID", ReplyAction="http://tempuri.org/IBaseService/LoginByNemIDResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login> LoginByNemIDAsync(string pid, System.Nullable<bool> doNotUpdateLoginTimestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PasswordByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/PasswordByInteressentNoResponse")]
        string PasswordByInteressentNo(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PasswordByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/PasswordByInteressentNoResponse")]
        System.Threading.Tasks.Task<string> PasswordByInteressentNoAsync(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PasswordByEmail", ReplyAction="http://tempuri.org/IBaseService/PasswordByEmailResponse")]
        string PasswordByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PasswordByEmail", ReplyAction="http://tempuri.org/IBaseService/PasswordByEmailResponse")]
        System.Threading.Tasks.Task<string> PasswordByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PasswordByCprNo", ReplyAction="http://tempuri.org/IBaseService/PasswordByCprNoResponse")]
        string PasswordByCprNo(string cprNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/PasswordByCprNo", ReplyAction="http://tempuri.org/IBaseService/PasswordByCprNoResponse")]
        System.Threading.Tasks.Task<string> PasswordByCprNoAsync(string cprNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginResetPassword", ReplyAction="http://tempuri.org/IBaseService/LoginResetPasswordResponse")]
        string LoginResetPassword(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginResetPassword", ReplyAction="http://tempuri.org/IBaseService/LoginResetPasswordResponse")]
        System.Threading.Tasks.Task<string> LoginResetPasswordAsync(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginChangePassword", ReplyAction="http://tempuri.org/IBaseService/LoginChangePasswordResponse")]
        void LoginChangePassword(int interessentNo, string newPassword, string oldPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginChangePassword", ReplyAction="http://tempuri.org/IBaseService/LoginChangePasswordResponse")]
        System.Threading.Tasks.Task LoginChangePasswordAsync(int interessentNo, string newPassword, string oldPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginGetUserLoginsByEmail", ReplyAction="http://tempuri.org/IBaseService/LoginGetUserLoginsByEmailResponse")]
        RestEgBoligHeldinTest.EgBoligService.Login[] LoginGetUserLoginsByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginGetUserLoginsByEmail", ReplyAction="http://tempuri.org/IBaseService/LoginGetUserLoginsByEmailResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login[]> LoginGetUserLoginsByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginGetUserLoginsByCprNo", ReplyAction="http://tempuri.org/IBaseService/LoginGetUserLoginsByCprNoResponse")]
        RestEgBoligHeldinTest.EgBoligService.Login[] LoginGetUserLoginsByCprNo(System.DateTime birthday, string serialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginGetUserLoginsByCprNo", ReplyAction="http://tempuri.org/IBaseService/LoginGetUserLoginsByCprNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login[]> LoginGetUserLoginsByCprNoAsync(System.DateTime birthday, string serialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginGetUserLoginByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/LoginGetUserLoginByInteressentNoResponse")]
        RestEgBoligHeldinTest.EgBoligService.Login LoginGetUserLoginByInteressentNo(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/LoginGetUserLoginByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/LoginGetUserLoginByInteressentNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login> LoginGetUserLoginByInteressentNoAsync(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OfferGetList", ReplyAction="http://tempuri.org/IBaseService/OfferGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.Offer[] OfferGetList(short memberCompanyNo, decimal memberNo, System.DateTime from, System.DateTime to, RestEgBoligHeldinTest.EgBoligService.OfferState state, int max);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OfferGetList", ReplyAction="http://tempuri.org/IBaseService/OfferGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Offer[]> OfferGetListAsync(short memberCompanyNo, decimal memberNo, System.DateTime from, System.DateTime to, RestEgBoligHeldinTest.EgBoligService.OfferState state, int max);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OfferGetListWithoutTenancies", ReplyAction="http://tempuri.org/IBaseService/OfferGetListWithoutTenanciesResponse")]
        RestEgBoligHeldinTest.EgBoligService.Offer[] OfferGetListWithoutTenancies(short memberCompanyNo, decimal memberNo, System.DateTime from, System.DateTime to, RestEgBoligHeldinTest.EgBoligService.OfferState state, int max);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OfferGetListWithoutTenancies", ReplyAction="http://tempuri.org/IBaseService/OfferGetListWithoutTenanciesResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Offer[]> OfferGetListWithoutTenanciesAsync(short memberCompanyNo, decimal memberNo, System.DateTime from, System.DateTime to, RestEgBoligHeldinTest.EgBoligService.OfferState state, int max);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OfferUpdate", ReplyAction="http://tempuri.org/IBaseService/OfferUpdateResponse")]
        void OfferUpdate(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.DateTime offerDate, string priorityNo, string priorityXNo, short memberCompanyNo, decimal memberNo, RestEgBoligHeldinTest.EgBoligService.OfferAnswer answer, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OfferUpdate", ReplyAction="http://tempuri.org/IBaseService/OfferUpdateResponse")]
        System.Threading.Tasks.Task OfferUpdateAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.DateTime offerDate, string priorityNo, string priorityXNo, short memberCompanyNo, decimal memberNo, RestEgBoligHeldinTest.EgBoligService.OfferAnswer answer, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OfferGetDocument", ReplyAction="http://tempuri.org/IBaseService/OfferGetDocumentResponse")]
        byte[] OfferGetDocument(RestEgBoligHeldinTest.EgBoligService.Offer offer, int chunkNo, int chunkSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OfferGetDocument", ReplyAction="http://tempuri.org/IBaseService/OfferGetDocumentResponse")]
        System.Threading.Tasks.Task<byte[]> OfferGetDocumentAsync(RestEgBoligHeldinTest.EgBoligService.Offer offer, int chunkNo, int chunkSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OfferGetNumberOfAccepts", ReplyAction="http://tempuri.org/IBaseService/OfferGetNumberOfAcceptsResponse")]
        int OfferGetNumberOfAccepts(RestEgBoligHeldinTest.EgBoligService.Offer offer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OfferGetNumberOfAccepts", ReplyAction="http://tempuri.org/IBaseService/OfferGetNumberOfAcceptsResponse")]
        System.Threading.Tasks.Task<int> OfferGetNumberOfAcceptsAsync(RestEgBoligHeldinTest.EgBoligService.Offer offer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WaitListGetList", ReplyAction="http://tempuri.org/IBaseService/WaitListGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.WaitList[] WaitListGetList(short memberCompany, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WaitListGetList", ReplyAction="http://tempuri.org/IBaseService/WaitListGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WaitList[]> WaitListGetListAsync(short memberCompany, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WaitListGetListWithoutTenancies", ReplyAction="http://tempuri.org/IBaseService/WaitListGetListWithoutTenanciesResponse")]
        RestEgBoligHeldinTest.EgBoligService.WaitList[] WaitListGetListWithoutTenancies(short memberCompany, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WaitListGetListWithoutTenancies", ReplyAction="http://tempuri.org/IBaseService/WaitListGetListWithoutTenanciesResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WaitList[]> WaitListGetListWithoutTenanciesAsync(short memberCompany, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WaitTimeGetList", ReplyAction="http://tempuri.org/IBaseService/WaitTimeGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.WaitTime[] WaitTimeGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WaitTimeGetList", ReplyAction="http://tempuri.org/IBaseService/WaitTimeGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WaitTime[]> WaitTimeGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WaitTimeGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/WaitTimeGetListByDepartmentResponse")]
        RestEgBoligHeldinTest.EgBoligService.WaitTime[] WaitTimeGetListByDepartment(int companyNo, int departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WaitTimeGetListByDepartment", ReplyAction="http://tempuri.org/IBaseService/WaitTimeGetListByDepartmentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WaitTime[]> WaitTimeGetListByDepartmentAsync(int companyNo, int departmentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WaitTimeGetListByTypes", ReplyAction="http://tempuri.org/IBaseService/WaitTimeGetListByTypesResponse")]
        RestEgBoligHeldinTest.EgBoligService.WaitTime[] WaitTimeGetListByTypes(int companyNo, int departmentNo, int apartmentTypeCode, int tenancyTypeCode, int rooms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WaitTimeGetListByTypes", ReplyAction="http://tempuri.org/IBaseService/WaitTimeGetListByTypesResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WaitTime[]> WaitTimeGetListByTypesAsync(int companyNo, int departmentNo, int apartmentTypeCode, int tenancyTypeCode, int rooms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WaitTimeTypeGetList", ReplyAction="http://tempuri.org/IBaseService/WaitTimeTypeGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.WaitTimeType[] WaitTimeTypeGetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WaitTimeTypeGetList", ReplyAction="http://tempuri.org/IBaseService/WaitTimeTypeGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WaitTimeType[]> WaitTimeTypeGetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WaitTimeGetStatistics", ReplyAction="http://tempuri.org/IBaseService/WaitTimeGetStatisticsResponse")]
        RestEgBoligHeldinTest.EgBoligService.WaitTimeStatistics[] WaitTimeGetStatistics(System.Nullable<int> companyNo, System.Nullable<int> departmentNo, System.Nullable<int> apartmentTypeCode, System.Nullable<int> tenancyTypeCode, System.Nullable<int> rooms, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WaitTimeGetStatistics", ReplyAction="http://tempuri.org/IBaseService/WaitTimeGetStatisticsResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WaitTimeStatistics[]> WaitTimeGetStatisticsAsync(System.Nullable<int> companyNo, System.Nullable<int> departmentNo, System.Nullable<int> apartmentTypeCode, System.Nullable<int> tenancyTypeCode, System.Nullable<int> rooms, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberGet", ReplyAction="http://tempuri.org/IBaseService/MemberGetResponse")]
        RestEgBoligHeldinTest.EgBoligService.Member MemberGet(short companyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberGet", ReplyAction="http://tempuri.org/IBaseService/MemberGetResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Member> MemberGetAsync(short companyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberGetListByEmail", ReplyAction="http://tempuri.org/IBaseService/MemberGetListByEmailResponse")]
        RestEgBoligHeldinTest.EgBoligService.Member[] MemberGetListByEmail(string email, System.Nullable<bool> includeDeletedMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberGetListByEmail", ReplyAction="http://tempuri.org/IBaseService/MemberGetListByEmailResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Member[]> MemberGetListByEmailAsync(string email, System.Nullable<bool> includeDeletedMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberGetListByCprNo", ReplyAction="http://tempuri.org/IBaseService/MemberGetListByCprNoResponse")]
        RestEgBoligHeldinTest.EgBoligService.Member[] MemberGetListByCprNo(string cprNo, System.Nullable<bool> includeDeletedMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberGetListByCprNo", ReplyAction="http://tempuri.org/IBaseService/MemberGetListByCprNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Member[]> MemberGetListByCprNoAsync(string cprNo, System.Nullable<bool> includeDeletedMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberGetListByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/MemberGetListByInteressentNoResponse")]
        RestEgBoligHeldinTest.EgBoligService.Member[] MemberGetListByInteressentNo(int interessentNo, System.Nullable<bool> includeDeletedMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberGetListByInteressentNo", ReplyAction="http://tempuri.org/IBaseService/MemberGetListByInteressentNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Member[]> MemberGetListByInteressentNoAsync(int interessentNo, System.Nullable<bool> includeDeletedMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberGetListByWishParameters", ReplyAction="http://tempuri.org/IBaseService/MemberGetListByWishParametersResponse")]
        RestEgBoligHeldinTest.EgBoligService.Member[] MemberGetListByWishParameters(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, System.Nullable<byte> numberOfRooms, System.Nullable<short> tenancyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberGetListByWishParameters", ReplyAction="http://tempuri.org/IBaseService/MemberGetListByWishParametersResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Member[]> MemberGetListByWishParametersAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, System.Nullable<byte> numberOfRooms, System.Nullable<short> tenancyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberUpdate", ReplyAction="http://tempuri.org/IBaseService/MemberUpdateResponse")]
        void MemberUpdate(RestEgBoligHeldinTest.EgBoligService.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberUpdate", ReplyAction="http://tempuri.org/IBaseService/MemberUpdateResponse")]
        System.Threading.Tasks.Task MemberUpdateAsync(RestEgBoligHeldinTest.EgBoligService.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberUpdateCprNo", ReplyAction="http://tempuri.org/IBaseService/MemberUpdateCprNoResponse")]
        void MemberUpdateCprNo(int interessentNo, string cprNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberUpdateCprNo", ReplyAction="http://tempuri.org/IBaseService/MemberUpdateCprNoResponse")]
        System.Threading.Tasks.Task MemberUpdateCprNoAsync(int interessentNo, string cprNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberUpdatePartner", ReplyAction="http://tempuri.org/IBaseService/MemberUpdatePartnerResponse")]
        void MemberUpdatePartner(short memberCompanyNo, decimal memberNo, string name, System.Nullable<int> cpr62, System.Nullable<short> cpr42);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberUpdatePartner", ReplyAction="http://tempuri.org/IBaseService/MemberUpdatePartnerResponse")]
        System.Threading.Tasks.Task MemberUpdatePartnerAsync(short memberCompanyNo, decimal memberNo, string name, System.Nullable<int> cpr62, System.Nullable<short> cpr42);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberUpdateCriterias", ReplyAction="http://tempuri.org/IBaseService/MemberUpdateCriteriasResponse")]
        void MemberUpdateCriterias(RestEgBoligHeldinTest.EgBoligService.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberUpdateCriterias", ReplyAction="http://tempuri.org/IBaseService/MemberUpdateCriteriasResponse")]
        System.Threading.Tasks.Task MemberUpdateCriteriasAsync(RestEgBoligHeldinTest.EgBoligService.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberUpdateEducation", ReplyAction="http://tempuri.org/IBaseService/MemberUpdateEducationResponse")]
        void MemberUpdateEducation(RestEgBoligHeldinTest.EgBoligService.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberUpdateEducation", ReplyAction="http://tempuri.org/IBaseService/MemberUpdateEducationResponse")]
        System.Threading.Tasks.Task MemberUpdateEducationAsync(RestEgBoligHeldinTest.EgBoligService.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberUpdateResidence", ReplyAction="http://tempuri.org/IBaseService/MemberUpdateResidenceResponse")]
        void MemberUpdateResidence(RestEgBoligHeldinTest.EgBoligService.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberUpdateResidence", ReplyAction="http://tempuri.org/IBaseService/MemberUpdateResidenceResponse")]
        System.Threading.Tasks.Task MemberUpdateResidenceAsync(RestEgBoligHeldinTest.EgBoligService.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberValidateNewMember", ReplyAction="http://tempuri.org/IBaseService/MemberValidateNewMemberResponse")]
        RestEgBoligHeldinTest.EgBoligService.ValidationResult MemberValidateNewMember(RestEgBoligHeldinTest.EgBoligService.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberValidateNewMember", ReplyAction="http://tempuri.org/IBaseService/MemberValidateNewMemberResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> MemberValidateNewMemberAsync(RestEgBoligHeldinTest.EgBoligService.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberGetNumberOfMembersWithSpecifiedFirstnameAnd" +
            "Birthdate", ReplyAction="http://tempuri.org/IBaseService/MemberGetNumberOfMembersWithSpecifiedFirstnameAnd" +
            "BirthdateResponse")]
        int MemberGetNumberOfMembersWithSpecifiedFirstnameAndBirthdate(string name, System.DateTime birthdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberGetNumberOfMembersWithSpecifiedFirstnameAnd" +
            "Birthdate", ReplyAction="http://tempuri.org/IBaseService/MemberGetNumberOfMembersWithSpecifiedFirstnameAnd" +
            "BirthdateResponse")]
        System.Threading.Tasks.Task<int> MemberGetNumberOfMembersWithSpecifiedFirstnameAndBirthdateAsync(string name, System.DateTime birthdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MembershipGetList", ReplyAction="http://tempuri.org/IBaseService/MembershipGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.Membership[] MembershipGetList(short memberCompanyNo, decimal memberNo, System.Nullable<bool> includeDeletedMemberships);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MembershipGetList", ReplyAction="http://tempuri.org/IBaseService/MembershipGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Membership[]> MembershipGetListAsync(short memberCompanyNo, decimal memberNo, System.Nullable<bool> includeDeletedMemberships);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MembershipSuspendMembership", ReplyAction="http://tempuri.org/IBaseService/MembershipSuspendMembershipResponse")]
        void MembershipSuspendMembership(RestEgBoligHeldinTest.EgBoligService.Membership membership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MembershipSuspendMembership", ReplyAction="http://tempuri.org/IBaseService/MembershipSuspendMembershipResponse")]
        System.Threading.Tasks.Task MembershipSuspendMembershipAsync(RestEgBoligHeldinTest.EgBoligService.Membership membership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MembershipDeleteMembership", ReplyAction="http://tempuri.org/IBaseService/MembershipDeleteMembershipResponse")]
        void MembershipDeleteMembership(RestEgBoligHeldinTest.EgBoligService.Membership membership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MembershipDeleteMembership", ReplyAction="http://tempuri.org/IBaseService/MembershipDeleteMembershipResponse")]
        System.Threading.Tasks.Task MembershipDeleteMembershipAsync(RestEgBoligHeldinTest.EgBoligService.Membership membership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MembershipActivateMembership", ReplyAction="http://tempuri.org/IBaseService/MembershipActivateMembershipResponse")]
        void MembershipActivateMembership(RestEgBoligHeldinTest.EgBoligService.Membership membership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MembershipActivateMembership", ReplyAction="http://tempuri.org/IBaseService/MembershipActivateMembershipResponse")]
        System.Threading.Tasks.Task MembershipActivateMembershipAsync(RestEgBoligHeldinTest.EgBoligService.Membership membership);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberGetBankAccountInformation", ReplyAction="http://tempuri.org/IBaseService/MemberGetBankAccountInformationResponse")]
        RestEgBoligHeldinTest.EgBoligService.BankAccountInformation MemberGetBankAccountInformation(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberGetBankAccountInformation", ReplyAction="http://tempuri.org/IBaseService/MemberGetBankAccountInformationResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.BankAccountInformation> MemberGetBankAccountInformationAsync(int interessentNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberUpdateBankAccountInformation", ReplyAction="http://tempuri.org/IBaseService/MemberUpdateBankAccountInformationResponse")]
        void MemberUpdateBankAccountInformation(RestEgBoligHeldinTest.EgBoligService.BankAccountInformation bankAccountInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/MemberUpdateBankAccountInformation", ReplyAction="http://tempuri.org/IBaseService/MemberUpdateBankAccountInformationResponse")]
        System.Threading.Tasks.Task MemberUpdateBankAccountInformationAsync(RestEgBoligHeldinTest.EgBoligService.BankAccountInformation bankAccountInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetOfficeByDepartment", ReplyAction="http://tempuri.org/IBaseService/GetOfficeByDepartmentResponse")]
        RestEgBoligHeldinTest.EgBoligService.Office[] GetOfficeByDepartment(short companyNo, short departmentNo, string roleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetOfficeByDepartment", ReplyAction="http://tempuri.org/IBaseService/GetOfficeByDepartmentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Office[]> GetOfficeByDepartmentAsync(short companyNo, short departmentNo, string roleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetOfficeByCompany", ReplyAction="http://tempuri.org/IBaseService/GetOfficeByCompanyResponse")]
        RestEgBoligHeldinTest.EgBoligService.Office[] GetOfficeByCompany(short companyNo, string roleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetOfficeByCompany", ReplyAction="http://tempuri.org/IBaseService/GetOfficeByCompanyResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Office[]> GetOfficeByCompanyAsync(short companyNo, string roleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OfficeByDepartment", ReplyAction="http://tempuri.org/IBaseService/OfficeByDepartmentResponse")]
        RestEgBoligHeldinTest.EgBoligService.Office[] OfficeByDepartment(short companyNo, short departmentNo, string roleType, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OfficeByDepartment", ReplyAction="http://tempuri.org/IBaseService/OfficeByDepartmentResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Office[]> OfficeByDepartmentAsync(short companyNo, short departmentNo, string roleType, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OfficeByCompany", ReplyAction="http://tempuri.org/IBaseService/OfficeByCompanyResponse")]
        RestEgBoligHeldinTest.EgBoligService.Office[] OfficeByCompany(short companyNo, string roleType, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OfficeByCompany", ReplyAction="http://tempuri.org/IBaseService/OfficeByCompanyResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Office[]> OfficeByCompanyAsync(short companyNo, string roleType, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishGetList", ReplyAction="http://tempuri.org/IBaseService/WishGetListResponse")]
        RestEgBoligHeldinTest.EgBoligService.Wish[] WishGetList(short memberCompanyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishGetList", ReplyAction="http://tempuri.org/IBaseService/WishGetListResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Wish[]> WishGetListAsync(short memberCompanyNo, decimal memberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishGetListByCompanyNo", ReplyAction="http://tempuri.org/IBaseService/WishGetListByCompanyNoResponse")]
        RestEgBoligHeldinTest.EgBoligService.Wish[] WishGetListByCompanyNo(short memberCompanyNo, decimal memberNo, short companyNoMin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/WishGetListByCompanyNo", ReplyAction="http://tempuri.org/IBaseService/WishGetListByCompanyNoResponse")]
        System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Wish[]> WishGetListByCompanyNoAsync(short memberCompanyNo, decimal memberNo, short companyNoMin);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService10540Channel : RestEgBoligHeldinTest.EgBoligService.IService10540, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service10540Client : System.ServiceModel.ClientBase<RestEgBoligHeldinTest.EgBoligService.IService10540>, RestEgBoligHeldinTest.EgBoligService.IService10540 {
        
        public Service10540Client() {
        }
        
        public Service10540Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service10540Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service10540Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service10540Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] TenancyInspectionPictureGetListByRoom(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionRoom room) {
            return base.Channel.TenancyInspectionPictureGetListByRoom(room);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[]> TenancyInspectionPictureGetListByRoomAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionRoom room) {
            return base.Channel.TenancyInspectionPictureGetListByRoomAsync(room);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] TenancyInspectionPictureGetListByTenancyInspection(RestEgBoligHeldinTest.EgBoligService.TenancyInspection tenancyInspection) {
            return base.Channel.TenancyInspectionPictureGetListByTenancyInspection(tenancyInspection);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[]> TenancyInspectionPictureGetListByTenancyInspectionAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspection tenancyInspection) {
            return base.Channel.TenancyInspectionPictureGetListByTenancyInspectionAsync(tenancyInspection);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] TenancyInspectionPictureGetListByTenant(short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.TenancyInspectionPictureGetListByTenant(companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[]> TenancyInspectionPictureGetListByTenantAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.TenancyInspectionPictureGetListByTenantAsync(companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public void TenancyInspectionPictureAdd(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture picture) {
            base.Channel.TenancyInspectionPictureAdd(picture);
        }
        
        public System.Threading.Tasks.Task TenancyInspectionPictureAddAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture picture) {
            return base.Channel.TenancyInspectionPictureAddAsync(picture);
        }
        
        public void TenancyInspectionPictureAddList(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] pictures) {
            base.Channel.TenancyInspectionPictureAddList(pictures);
        }
        
        public System.Threading.Tasks.Task TenancyInspectionPictureAddListAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] pictures) {
            return base.Channel.TenancyInspectionPictureAddListAsync(pictures);
        }
        
        public void TenancyInspectionPictureUpdate(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture picture) {
            base.Channel.TenancyInspectionPictureUpdate(picture);
        }
        
        public System.Threading.Tasks.Task TenancyInspectionPictureUpdateAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture picture) {
            return base.Channel.TenancyInspectionPictureUpdateAsync(picture);
        }
        
        public void TenancyInspectionPictureUpdateList(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] pictures) {
            base.Channel.TenancyInspectionPictureUpdateList(pictures);
        }
        
        public System.Threading.Tasks.Task TenancyInspectionPictureUpdateListAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] pictures) {
            return base.Channel.TenancyInspectionPictureUpdateListAsync(pictures);
        }
        
        public void TenancyInspectionPictureDelete(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture picture) {
            base.Channel.TenancyInspectionPictureDelete(picture);
        }
        
        public System.Threading.Tasks.Task TenancyInspectionPictureDeleteAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture picture) {
            return base.Channel.TenancyInspectionPictureDeleteAsync(picture);
        }
        
        public void TenancyInspectionPictureDeleteList(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] pictures) {
            base.Channel.TenancyInspectionPictureDeleteList(pictures);
        }
        
        public System.Threading.Tasks.Task TenancyInspectionPictureDeleteListAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] pictures) {
            return base.Channel.TenancyInspectionPictureDeleteListAsync(pictures);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyInspectionTreatment[] TenancyInspectionTreatmentGetList() {
            return base.Channel.TenancyInspectionTreatmentGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionTreatment[]> TenancyInspectionTreatmentGetListAsync() {
            return base.Channel.TenancyInspectionTreatmentGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.GOBoligDocumentInfo[] GOBoligGetDocumentInfoByInteressentNo(int interessentNo) {
            return base.Channel.GOBoligGetDocumentInfoByInteressentNo(interessentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.GOBoligDocumentInfo[]> GOBoligGetDocumentInfoByInteressentNoAsync(int interessentNo) {
            return base.Channel.GOBoligGetDocumentInfoByInteressentNoAsync(interessentNo);
        }
        
        public byte[] GOBoligGetDocument(int documentId) {
            return base.Channel.GOBoligGetDocument(documentId);
        }
        
        public System.Threading.Tasks.Task<byte[]> GOBoligGetDocumentAsync(int documentId) {
            return base.Channel.GOBoligGetDocumentAsync(documentId);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[] CrossworkGetDocumentInfoByDepartment(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories) {
            return base.Channel.CrossworkGetDocumentInfoByDepartment(companyNo, departmentNo, categories);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[]> CrossworkGetDocumentInfoByDepartmentAsync(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories) {
            return base.Channel.CrossworkGetDocumentInfoByDepartmentAsync(companyNo, departmentNo, categories);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[] CrossworkGetDocumentInfoByInteressentNo(int interessentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories) {
            return base.Channel.CrossworkGetDocumentInfoByInteressentNo(interessentNo, categories);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[]> CrossworkGetDocumentInfoByInteressentNoAsync(int interessentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories) {
            return base.Channel.CrossworkGetDocumentInfoByInteressentNoAsync(interessentNo, categories);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[] CrossworkGetDocumentInfoByDepartmentExternOnly(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories) {
            return base.Channel.CrossworkGetDocumentInfoByDepartmentExternOnly(companyNo, departmentNo, categories);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[]> CrossworkGetDocumentInfoByDepartmentExternOnlyAsync(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories) {
            return base.Channel.CrossworkGetDocumentInfoByDepartmentExternOnlyAsync(companyNo, departmentNo, categories);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[] CrossworkGetDocumentInfoByInteressentNoExternOnly(int interessentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories) {
            return base.Channel.CrossworkGetDocumentInfoByInteressentNoExternOnly(interessentNo, categories);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.CrossworkDocumentInfo[]> CrossworkGetDocumentInfoByInteressentNoExternOnlyAsync(int interessentNo, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] categories) {
            return base.Channel.CrossworkGetDocumentInfoByInteressentNoExternOnlyAsync(interessentNo, categories);
        }
        
        public byte[] CrossworkGetDocument(string url) {
            return base.Channel.CrossworkGetDocument(url);
        }
        
        public System.Threading.Tasks.Task<byte[]> CrossworkGetDocumentAsync(string url) {
            return base.Channel.CrossworkGetDocumentAsync(url);
        }
        
        public void CrossworkAddTenantDocument(string fileName, string fileExtension, byte[] fileData, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory category, bool internetVisible, short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            base.Channel.CrossworkAddTenantDocument(fileName, fileExtension, fileData, category, internetVisible, companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public System.Threading.Tasks.Task CrossworkAddTenantDocumentAsync(string fileName, string fileExtension, byte[] fileData, RestEgBoligHeldinTest.EgBoligService.CrossworkCategory category, bool internetVisible, short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.CrossworkAddTenantDocumentAsync(fileName, fileExtension, fileData, category, internetVisible, companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[] CrossworkCategoryGetList() {
            return base.Channel.CrossworkCategoryGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.CrossworkCategory[]> CrossworkCategoryGetListAsync() {
            return base.Channel.CrossworkCategoryGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMUser FMUserGet(int interessentNo) {
            return base.Channel.FMUserGet(interessentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMUser> FMUserGetAsync(int interessentNo) {
            return base.Channel.FMUserGetAsync(interessentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMUser[] FMUserGetList() {
            return base.Channel.FMUserGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMUser[]> FMUserGetListAsync() {
            return base.Channel.FMUserGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMCompany[] FMCompanyGetList() {
            return base.Channel.FMCompanyGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMCompany[]> FMCompanyGetListAsync() {
            return base.Channel.FMCompanyGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMDepartment[] FMDepartmentGetList() {
            return base.Channel.FMDepartmentGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMDepartment[]> FMDepartmentGetListAsync() {
            return base.Channel.FMDepartmentGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMBuilding[] FMBuildingGetList() {
            return base.Channel.FMBuildingGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMBuilding[]> FMBuildingGetListAsync() {
            return base.Channel.FMBuildingGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMTenancy[] FMTenancyGetList() {
            return base.Channel.FMTenancyGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMTenancy[]> FMTenancyGetListAsync() {
            return base.Channel.FMTenancyGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMTenant[] FMTenantGetList(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.FMTenantGetList(companyNo, departmentNo, tenancyNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMTenant[]> FMTenantGetListAsync(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.FMTenantGetListAsync(companyNo, departmentNo, tenancyNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMCreditor[] FMCreditorGetList() {
            return base.Channel.FMCreditorGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMCreditor[]> FMCreditorGetListAsync() {
            return base.Channel.FMCreditorGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMAccount[] FMAccountGetList() {
            return base.Channel.FMAccountGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMAccount[]> FMAccountGetListAsync() {
            return base.Channel.FMAccountGetListAsync();
        }
        
        public decimal FMAccountGetRemainingBalance(short companyNo, short departmentNo, decimal accountNo, System.DateTime budgetDate, string managementClassification) {
            return base.Channel.FMAccountGetRemainingBalance(companyNo, departmentNo, accountNo, budgetDate, managementClassification);
        }
        
        public System.Threading.Tasks.Task<decimal> FMAccountGetRemainingBalanceAsync(short companyNo, short departmentNo, decimal accountNo, System.DateTime budgetDate, string managementClassification) {
            return base.Channel.FMAccountGetRemainingBalanceAsync(companyNo, departmentNo, accountNo, budgetDate, managementClassification);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMAllocationKey[] FMAllocationKeyGetList() {
            return base.Channel.FMAllocationKeyGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMAllocationKey[]> FMAllocationKeyGetListAsync() {
            return base.Channel.FMAllocationKeyGetListAsync();
        }
        
        public int FMRequisitionAdd(RestEgBoligHeldinTest.EgBoligService.FMRequisition requisition) {
            return base.Channel.FMRequisitionAdd(requisition);
        }
        
        public System.Threading.Tasks.Task<int> FMRequisitionAddAsync(RestEgBoligHeldinTest.EgBoligService.FMRequisition requisition) {
            return base.Channel.FMRequisitionAddAsync(requisition);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMRequisition[] FMRequisitionGetList(int[] requisitionNumbers) {
            return base.Channel.FMRequisitionGetList(requisitionNumbers);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMRequisition[]> FMRequisitionGetListAsync(int[] requisitionNumbers) {
            return base.Channel.FMRequisitionGetListAsync(requisitionNumbers);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMRequisition[] FMRequisitionGetListByTenancy(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.FMRequisitionGetListByTenancy(companyNo, departmentNo, tenancyNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMRequisition[]> FMRequisitionGetListByTenancyAsync(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.FMRequisitionGetListByTenancyAsync(companyNo, departmentNo, tenancyNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMInvoice[] FMInvoiceGetList(int requisitionNo) {
            return base.Channel.FMInvoiceGetList(requisitionNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMInvoice[]> FMInvoiceGetListAsync(int requisitionNo) {
            return base.Channel.FMInvoiceGetListAsync(requisitionNo);
        }
        
        public System.Guid FMBudgetAdd(RestEgBoligHeldinTest.EgBoligService.FMBudget budget) {
            return base.Channel.FMBudgetAdd(budget);
        }
        
        public System.Threading.Tasks.Task<System.Guid> FMBudgetAddAsync(RestEgBoligHeldinTest.EgBoligService.FMBudget budget) {
            return base.Channel.FMBudgetAddAsync(budget);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMBudgetChange[] FMBudgetStatusChanged(System.DateTime fromDate) {
            return base.Channel.FMBudgetStatusChanged(fromDate);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMBudgetChange[]> FMBudgetStatusChangedAsync(System.DateTime fromDate) {
            return base.Channel.FMBudgetStatusChangedAsync(fromDate);
        }
        
        public System.Guid FMTenantServiceTaskAdd(RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask tenantServiceTask) {
            return base.Channel.FMTenantServiceTaskAdd(tenantServiceTask);
        }
        
        public System.Threading.Tasks.Task<System.Guid> FMTenantServiceTaskAddAsync(RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask tenantServiceTask) {
            return base.Channel.FMTenantServiceTaskAddAsync(tenantServiceTask);
        }
        
        public System.Guid FMTenantServiceTaskAddAdministrative(RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask tenantServiceTask) {
            return base.Channel.FMTenantServiceTaskAddAdministrative(tenantServiceTask);
        }
        
        public System.Threading.Tasks.Task<System.Guid> FMTenantServiceTaskAddAdministrativeAsync(RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask tenantServiceTask) {
            return base.Channel.FMTenantServiceTaskAddAdministrativeAsync(tenantServiceTask);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask[] FMTenantServiceTaskGetListByIds(System.Guid[] tenantServiceTaskIds, System.Nullable<bool> includeFiles) {
            return base.Channel.FMTenantServiceTaskGetListByIds(tenantServiceTaskIds, includeFiles);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask[]> FMTenantServiceTaskGetListByIdsAsync(System.Guid[] tenantServiceTaskIds, System.Nullable<bool> includeFiles) {
            return base.Channel.FMTenantServiceTaskGetListByIdsAsync(tenantServiceTaskIds, includeFiles);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask[] FMTenantServiceTaskGetListByDate(System.DateTime fromDate, System.Nullable<bool> includeFiles) {
            return base.Channel.FMTenantServiceTaskGetListByDate(fromDate, includeFiles);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask[]> FMTenantServiceTaskGetListByDateAsync(System.DateTime fromDate, System.Nullable<bool> includeFiles) {
            return base.Channel.FMTenantServiceTaskGetListByDateAsync(fromDate, includeFiles);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask[] FMTenantServiceTaskGetListByTenant(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.Nullable<bool> includeFiles) {
            return base.Channel.FMTenantServiceTaskGetListByTenant(companyNo, departmentNo, tenancyNo, tenantNo, includeFiles);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask[]> FMTenantServiceTaskGetListByTenantAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.Nullable<bool> includeFiles) {
            return base.Channel.FMTenantServiceTaskGetListByTenantAsync(companyNo, departmentNo, tenancyNo, tenantNo, includeFiles);
        }
        
        public void FMTenantServiceTaskUpdate(RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask tenantServiceTask) {
            base.Channel.FMTenantServiceTaskUpdate(tenantServiceTask);
        }
        
        public System.Threading.Tasks.Task FMTenantServiceTaskUpdateAsync(RestEgBoligHeldinTest.EgBoligService.FMTenantServiceTask tenantServiceTask) {
            return base.Channel.FMTenantServiceTaskUpdateAsync(tenantServiceTask);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FMIdentityChange[] FMIdentityChangeGetList(System.DateTime fromDate) {
            return base.Channel.FMIdentityChangeGetList(fromDate);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FMIdentityChange[]> FMIdentityChangeGetListAsync(System.DateTime fromDate) {
            return base.Channel.FMIdentityChangeGetListAsync(fromDate);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ConsentDefinition ConsentDefinitionGet(System.Guid id) {
            return base.Channel.ConsentDefinitionGet(id);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ConsentDefinition> ConsentDefinitionGetAsync(System.Guid id) {
            return base.Channel.ConsentDefinitionGetAsync(id);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ConsentDefinition[] ConsentDefinitionGetList() {
            return base.Channel.ConsentDefinitionGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ConsentDefinition[]> ConsentDefinitionGetListAsync() {
            return base.Channel.ConsentDefinitionGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ConsentReply[] ConsentReplyGetList(int interessentNo, bool includeHistoricConsentReplies) {
            return base.Channel.ConsentReplyGetList(interessentNo, includeHistoricConsentReplies);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ConsentReply[]> ConsentReplyGetListAsync(int interessentNo, bool includeHistoricConsentReplies) {
            return base.Channel.ConsentReplyGetListAsync(interessentNo, includeHistoricConsentReplies);
        }
        
        public void ConsentReplyAdd(RestEgBoligHeldinTest.EgBoligService.ConsentReply reply) {
            base.Channel.ConsentReplyAdd(reply);
        }
        
        public System.Threading.Tasks.Task ConsentReplyAddAsync(RestEgBoligHeldinTest.EgBoligService.ConsentReply reply) {
            return base.Channel.ConsentReplyAddAsync(reply);
        }
        
        public void ConsentReplyUpdate(RestEgBoligHeldinTest.EgBoligService.ConsentReply reply) {
            base.Channel.ConsentReplyUpdate(reply);
        }
        
        public System.Threading.Tasks.Task ConsentReplyUpdateAsync(RestEgBoligHeldinTest.EgBoligService.ConsentReply reply) {
            return base.Channel.ConsentReplyUpdateAsync(reply);
        }
        
        public string DataExportMemberGetList() {
            return base.Channel.DataExportMemberGetList();
        }
        
        public System.Threading.Tasks.Task<string> DataExportMemberGetListAsync() {
            return base.Channel.DataExportMemberGetListAsync();
        }
        
        public string DataExportTenantGetListWithDebt(System.Nullable<short> companyNo, System.Nullable<short> departmentNo) {
            return base.Channel.DataExportTenantGetListWithDebt(companyNo, departmentNo);
        }
        
        public System.Threading.Tasks.Task<string> DataExportTenantGetListWithDebtAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo) {
            return base.Channel.DataExportTenantGetListWithDebtAsync(companyNo, departmentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.MainRegion MainRegionGet(System.Guid id) {
            return base.Channel.MainRegionGet(id);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.MainRegion> MainRegionGetAsync(System.Guid id) {
            return base.Channel.MainRegionGetAsync(id);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.MainRegion[] MainRegionGetList() {
            return base.Channel.MainRegionGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.MainRegion[]> MainRegionGetListAsync() {
            return base.Channel.MainRegionGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ValidationResult LeaseTerminationStartCheck(int interessentNo, short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.LeaseTerminationStartCheck(interessentNo, companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> LeaseTerminationStartCheckAsync(int interessentNo, short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.LeaseTerminationStartCheckAsync(interessentNo, companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo LeaseTerminationGetStartInfo(int interessentNo, short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.LeaseTerminationGetStartInfo(interessentNo, companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationStartInfo> LeaseTerminationGetStartInfoAsync(int interessentNo, short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.LeaseTerminationGetStartInfoAsync(interessentNo, companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public System.Nullable<int> LeaseTerminationFindTenant2(string cprNo, string name) {
            return base.Channel.LeaseTerminationFindTenant2(cprNo, name);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> LeaseTerminationFindTenant2Async(string cprNo, string name) {
            return base.Channel.LeaseTerminationFindTenant2Async(cprNo, name);
        }
        
        public void LeaseTerminationAddNewPersonAsTenant2(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, RestEgBoligHeldinTest.EgBoligService.Person person) {
            base.Channel.LeaseTerminationAddNewPersonAsTenant2(companyNo, departmentNo, tenancyNo, tenantNo, person);
        }
        
        public System.Threading.Tasks.Task LeaseTerminationAddNewPersonAsTenant2Async(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, RestEgBoligHeldinTest.EgBoligService.Person person) {
            return base.Channel.LeaseTerminationAddNewPersonAsTenant2Async(companyNo, departmentNo, tenancyNo, tenantNo, person);
        }
        
        public void LeaseTerminationAddExistingPersonAsTenant2(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, int interessentNo) {
            base.Channel.LeaseTerminationAddExistingPersonAsTenant2(companyNo, departmentNo, tenancyNo, tenantNo, interessentNo);
        }
        
        public System.Threading.Tasks.Task LeaseTerminationAddExistingPersonAsTenant2Async(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, int interessentNo) {
            return base.Channel.LeaseTerminationAddExistingPersonAsTenant2Async(companyNo, departmentNo, tenancyNo, tenantNo, interessentNo);
        }
        
        public void LeaseTerminationRemoveTenant2(short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            base.Channel.LeaseTerminationRemoveTenant2(companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public System.Threading.Tasks.Task LeaseTerminationRemoveTenant2Async(short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.LeaseTerminationRemoveTenant2Async(companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.LeaseTermination.KeyDates LeaseTerminationGetKeyDates(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.DateTime desiredVacateDate) {
            return base.Channel.LeaseTerminationGetKeyDates(companyNo, departmentNo, tenancyNo, tenantNo, desiredVacateDate);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.LeaseTermination.KeyDates> LeaseTerminationGetKeyDatesAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.DateTime desiredVacateDate) {
            return base.Channel.LeaseTerminationGetKeyDatesAsync(companyNo, departmentNo, tenancyNo, tenantNo, desiredVacateDate);
        }
        
        public bool LeaseTerminationTenancyInspectionEnabled(short companyNo, short departmentNo) {
            return base.Channel.LeaseTerminationTenancyInspectionEnabled(companyNo, departmentNo);
        }
        
        public System.Threading.Tasks.Task<bool> LeaseTerminationTenancyInspectionEnabledAsync(short companyNo, short departmentNo) {
            return base.Channel.LeaseTerminationTenancyInspectionEnabledAsync(companyNo, departmentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.LeaseTermination.TenancyInspectionTime[] LeaseTerminationGetAvailableTenancyInspectionTimes(short companyNo, short departmentNo, System.DateTime desiredVacateDate) {
            return base.Channel.LeaseTerminationGetAvailableTenancyInspectionTimes(companyNo, departmentNo, desiredVacateDate);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.LeaseTermination.TenancyInspectionTime[]> LeaseTerminationGetAvailableTenancyInspectionTimesAsync(short companyNo, short departmentNo, System.DateTime desiredVacateDate) {
            return base.Channel.LeaseTerminationGetAvailableTenancyInspectionTimesAsync(companyNo, departmentNo, desiredVacateDate);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.VacateReason[] LeaseTerminationGetVacateReasons() {
            return base.Channel.LeaseTerminationGetVacateReasons();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.VacateReason[]> LeaseTerminationGetVacateReasonsAsync() {
            return base.Channel.LeaseTerminationGetVacateReasonsAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ValidationResult[] LeaseTerminationValidate(RestEgBoligHeldinTest.EgBoligService.LeaseTermination leaseTermination) {
            return base.Channel.LeaseTerminationValidate(leaseTermination);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult[]> LeaseTerminationValidateAsync(RestEgBoligHeldinTest.EgBoligService.LeaseTermination leaseTermination) {
            return base.Channel.LeaseTerminationValidateAsync(leaseTermination);
        }
        
        public System.Guid LeaseTerminationAdd(RestEgBoligHeldinTest.EgBoligService.LeaseTermination leaseTermination) {
            return base.Channel.LeaseTerminationAdd(leaseTermination);
        }
        
        public System.Threading.Tasks.Task<System.Guid> LeaseTerminationAddAsync(RestEgBoligHeldinTest.EgBoligService.LeaseTermination leaseTermination) {
            return base.Channel.LeaseTerminationAddAsync(leaseTermination);
        }
        
        public void LeaseTerminationUpdateMovingAddress(System.Guid leaseTerminationId, byte tenantLevel, RestEgBoligHeldinTest.EgBoligService.LeaseTermination.MovingAddress movingAddress) {
            base.Channel.LeaseTerminationUpdateMovingAddress(leaseTerminationId, tenantLevel, movingAddress);
        }
        
        public System.Threading.Tasks.Task LeaseTerminationUpdateMovingAddressAsync(System.Guid leaseTerminationId, byte tenantLevel, RestEgBoligHeldinTest.EgBoligService.LeaseTermination.MovingAddress movingAddress) {
            return base.Channel.LeaseTerminationUpdateMovingAddressAsync(leaseTerminationId, tenantLevel, movingAddress);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary[] LeaseTerminationGetList(int interessentNo) {
            return base.Channel.LeaseTerminationGetList(interessentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.LeaseTerminationSummary[]> LeaseTerminationGetListAsync(int interessentNo) {
            return base.Channel.LeaseTerminationGetListAsync(interessentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyImprovement[] TenancyImprovementGetList(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.DateTime atDate) {
            return base.Channel.TenancyImprovementGetList(companyNo, departmentNo, tenancyNo, tenantNo, atDate);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyImprovement[]> TenancyImprovementGetListAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.DateTime atDate) {
            return base.Channel.TenancyImprovementGetListAsync(companyNo, departmentNo, tenancyNo, tenantNo, atDate);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyCount[] TenancyCountGetList(System.Nullable<short> companyNo, System.Nullable<short> departmentNo) {
            return base.Channel.TenancyCountGetList(companyNo, departmentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyCount[]> TenancyCountGetListAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo) {
            return base.Channel.TenancyCountGetListAsync(companyNo, departmentNo);
        }
        
        public void PaymentServiceInvoiceAdd(RestEgBoligHeldinTest.EgBoligService.PaymentServiceInvoice paymentServiceInvoice) {
            base.Channel.PaymentServiceInvoiceAdd(paymentServiceInvoice);
        }
        
        public System.Threading.Tasks.Task PaymentServiceInvoiceAddAsync(RestEgBoligHeldinTest.EgBoligService.PaymentServiceInvoice paymentServiceInvoice) {
            return base.Channel.PaymentServiceInvoiceAddAsync(paymentServiceInvoice);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Wish[] WishGetListByDepartmentNo(short memberCompanyNo, decimal memberNo, short companyNoMin, short departmentNoMin) {
            return base.Channel.WishGetListByDepartmentNo(memberCompanyNo, memberNo, companyNoMin, departmentNoMin);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Wish[]> WishGetListByDepartmentNoAsync(short memberCompanyNo, decimal memberNo, short companyNoMin, short departmentNoMin) {
            return base.Channel.WishGetListByDepartmentNoAsync(memberCompanyNo, memberNo, companyNoMin, departmentNoMin);
        }
        
        public void WishAdd(RestEgBoligHeldinTest.EgBoligService.Wish wish, string ifFreeWhatWaitlistTypeForMembership) {
            base.Channel.WishAdd(wish, ifFreeWhatWaitlistTypeForMembership);
        }
        
        public System.Threading.Tasks.Task WishAddAsync(RestEgBoligHeldinTest.EgBoligService.Wish wish, string ifFreeWhatWaitlistTypeForMembership) {
            return base.Channel.WishAddAsync(wish, ifFreeWhatWaitlistTypeForMembership);
        }
        
        public void WishAddList(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes, string ifFreeWhatWaitlistTypeForMembership) {
            base.Channel.WishAddList(wishes, ifFreeWhatWaitlistTypeForMembership);
        }
        
        public System.Threading.Tasks.Task WishAddListAsync(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes, string ifFreeWhatWaitlistTypeForMembership) {
            return base.Channel.WishAddListAsync(wishes, ifFreeWhatWaitlistTypeForMembership);
        }
        
        public void WishUpdate(RestEgBoligHeldinTest.EgBoligService.Wish wish) {
            base.Channel.WishUpdate(wish);
        }
        
        public System.Threading.Tasks.Task WishUpdateAsync(RestEgBoligHeldinTest.EgBoligService.Wish wish) {
            return base.Channel.WishUpdateAsync(wish);
        }
        
        public void WishUpdateList(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes) {
            base.Channel.WishUpdateList(wishes);
        }
        
        public System.Threading.Tasks.Task WishUpdateListAsync(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes) {
            return base.Channel.WishUpdateListAsync(wishes);
        }
        
        public void WishDelete(RestEgBoligHeldinTest.EgBoligService.Wish wish) {
            base.Channel.WishDelete(wish);
        }
        
        public System.Threading.Tasks.Task WishDeleteAsync(RestEgBoligHeldinTest.EgBoligService.Wish wish) {
            return base.Channel.WishDeleteAsync(wish);
        }
        
        public void WishDeleteList(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes) {
            base.Channel.WishDeleteList(wishes);
        }
        
        public System.Threading.Tasks.Task WishDeleteListAsync(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes) {
            return base.Channel.WishDeleteListAsync(wishes);
        }
        
        public void WishDeleteByMember(short memberCompanyNo, decimal memberNo) {
            base.Channel.WishDeleteByMember(memberCompanyNo, memberNo);
        }
        
        public System.Threading.Tasks.Task WishDeleteByMemberAsync(short memberCompanyNo, decimal memberNo) {
            return base.Channel.WishDeleteByMemberAsync(memberCompanyNo, memberNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ValidationResult ValidateWish(RestEgBoligHeldinTest.EgBoligService.Wish wish, string ifFreeWhatWaitlistTypeForMembership) {
            return base.Channel.ValidateWish(wish, ifFreeWhatWaitlistTypeForMembership);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> ValidateWishAsync(RestEgBoligHeldinTest.EgBoligService.Wish wish, string ifFreeWhatWaitlistTypeForMembership) {
            return base.Channel.ValidateWishAsync(wish, ifFreeWhatWaitlistTypeForMembership);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ValidationResult[] ValidateWishes(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes, string ifFreeWhatWaitlistTypeForMembership) {
            return base.Channel.ValidateWishes(wishes, ifFreeWhatWaitlistTypeForMembership);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult[]> ValidateWishesAsync(RestEgBoligHeldinTest.EgBoligService.Wish[] wishes, string ifFreeWhatWaitlistTypeForMembership) {
            return base.Channel.ValidateWishesAsync(wishes, ifFreeWhatWaitlistTypeForMembership);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Pet PetGet(short companyNo, byte id) {
            return base.Channel.PetGet(companyNo, id);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Pet> PetGetAsync(short companyNo, byte id) {
            return base.Channel.PetGetAsync(companyNo, id);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Pet[] PetGetList() {
            return base.Channel.PetGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Pet[]> PetGetListAsync() {
            return base.Channel.PetGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Pet[] PetGetListByCompany(short companyNo) {
            return base.Channel.PetGetListByCompany(companyNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Pet[]> PetGetListByCompanyAsync(short companyNo) {
            return base.Channel.PetGetListByCompanyAsync(companyNo);
        }
        
        public string EducationGet(int id) {
            return base.Channel.EducationGet(id);
        }
        
        public System.Threading.Tasks.Task<string> EducationGetAsync(int id) {
            return base.Channel.EducationGetAsync(id);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Education[] EducationGetList() {
            return base.Channel.EducationGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Education[]> EducationGetListAsync() {
            return base.Channel.EducationGetListAsync();
        }
        
        public string EducationalInstitutionGet(int id) {
            return base.Channel.EducationalInstitutionGet(id);
        }
        
        public System.Threading.Tasks.Task<string> EducationalInstitutionGetAsync(int id) {
            return base.Channel.EducationalInstitutionGetAsync(id);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.EducationalInstitution[] EducationalInstitutionGetList() {
            return base.Channel.EducationalInstitutionGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.EducationalInstitution[]> EducationalInstitutionGetListAsync() {
            return base.Channel.EducationalInstitutionGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.SpecialCriteria SpecialCriteriaGet(string type, byte number) {
            return base.Channel.SpecialCriteriaGet(type, number);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.SpecialCriteria> SpecialCriteriaGetAsync(string type, byte number) {
            return base.Channel.SpecialCriteriaGetAsync(type, number);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.SpecialCriteria[] SpecialCriteriaGetList() {
            return base.Channel.SpecialCriteriaGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.SpecialCriteria[]> SpecialCriteriaGetListAsync() {
            return base.Channel.SpecialCriteriaGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.SpecialCriteria[] SpecialCriteriaGetListByType(string type) {
            return base.Channel.SpecialCriteriaGetListByType(type);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.SpecialCriteria[]> SpecialCriteriaGetListByTypeAsync(string type) {
            return base.Channel.SpecialCriteriaGetListByTypeAsync(type);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.SpecialCriteria[] SpecialCriteriaGetListByMemberType() {
            return base.Channel.SpecialCriteriaGetListByMemberType();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.SpecialCriteria[]> SpecialCriteriaGetListByMemberTypeAsync() {
            return base.Channel.SpecialCriteriaGetListByMemberTypeAsync();
        }
        
        public string VersionGet(bool fromDatabase) {
            return base.Channel.VersionGet(fromDatabase);
        }
        
        public System.Threading.Tasks.Task<string> VersionGetAsync(bool fromDatabase) {
            return base.Channel.VersionGetAsync(fromDatabase);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ValidationResult TestFtpConnection() {
            return base.Channel.TestFtpConnection();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> TestFtpConnectionAsync() {
            return base.Channel.TestFtpConnectionAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Region RegionGet(short omraadeNr) {
            return base.Channel.RegionGet(omraadeNr);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Region> RegionGetAsync(short omraadeNr) {
            return base.Channel.RegionGetAsync(omraadeNr);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Region[] RegionGetList() {
            return base.Channel.RegionGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Region[]> RegionGetListAsync() {
            return base.Channel.RegionGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.RegionDetail[] RegionDetailGetList() {
            return base.Channel.RegionDetailGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.RegionDetail[]> RegionDetailGetListAsync() {
            return base.Channel.RegionDetailGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Tenant[] TenantGetListByCurrent(bool includeTenant2, System.Nullable<bool> includeIdleTenants) {
            return base.Channel.TenantGetListByCurrent(includeTenant2, includeIdleTenants);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenant[]> TenantGetListByCurrentAsync(bool includeTenant2, System.Nullable<bool> includeIdleTenants) {
            return base.Channel.TenantGetListByCurrentAsync(includeTenant2, includeIdleTenants);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Tenant[] TenantGetListByPast(bool includeTenant2, byte howManyYearsBack, System.Nullable<bool> includeIdleTenants) {
            return base.Channel.TenantGetListByPast(includeTenant2, howManyYearsBack, includeIdleTenants);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenant[]> TenantGetListByPastAsync(bool includeTenant2, byte howManyYearsBack, System.Nullable<bool> includeIdleTenants) {
            return base.Channel.TenantGetListByPastAsync(includeTenant2, howManyYearsBack, includeIdleTenants);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Tenant[] TenantGetListByFuture(bool includeTenant2, System.Nullable<bool> includeIdleTenants) {
            return base.Channel.TenantGetListByFuture(includeTenant2, includeIdleTenants);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenant[]> TenantGetListByFutureAsync(bool includeTenant2, System.Nullable<bool> includeIdleTenants) {
            return base.Channel.TenantGetListByFutureAsync(includeTenant2, includeIdleTenants);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Tenant[] TenantGetListByDepartment(short companyNo, System.Nullable<short> departmentNo, System.Nullable<bool> includePastTenants, System.Nullable<bool> includeFutureTenants, System.Nullable<bool> includeIdleTenants) {
            return base.Channel.TenantGetListByDepartment(companyNo, departmentNo, includePastTenants, includeFutureTenants, includeIdleTenants);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenant[]> TenantGetListByDepartmentAsync(short companyNo, System.Nullable<short> departmentNo, System.Nullable<bool> includePastTenants, System.Nullable<bool> includeFutureTenants, System.Nullable<bool> includeIdleTenants) {
            return base.Channel.TenantGetListByDepartmentAsync(companyNo, departmentNo, includePastTenants, includeFutureTenants, includeIdleTenants);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Tenant[] TenantGetList(int interessentNo) {
            return base.Channel.TenantGetList(interessentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenant[]> TenantGetListAsync(int interessentNo) {
            return base.Channel.TenantGetListAsync(interessentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyRent[] TenantGetRent(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.Nullable<System.DateTime> yearAndMonth) {
            return base.Channel.TenantGetRent(companyNo, departmentNo, tenancyNo, tenantNo, yearAndMonth);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyRent[]> TenantGetRentAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.Nullable<System.DateTime> yearAndMonth) {
            return base.Channel.TenantGetRentAsync(companyNo, departmentNo, tenancyNo, tenantNo, yearAndMonth);
        }
        
        public decimal TenantGetBAccountBalance(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.TenantGetBAccountBalance(companyNo, departmentNo, tenancyNo);
        }
        
        public System.Threading.Tasks.Task<decimal> TenantGetBAccountBalanceAsync(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.TenantGetBAccountBalanceAsync(companyNo, departmentNo, tenancyNo);
        }
        
        public decimal TenantGetBAccountReservedAmount(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.TenantGetBAccountReservedAmount(companyNo, departmentNo, tenancyNo);
        }
        
        public System.Threading.Tasks.Task<decimal> TenantGetBAccountReservedAmountAsync(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.TenantGetBAccountReservedAmountAsync(companyNo, departmentNo, tenancyNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenantTransaction[] TenantGetBAccountTransactions(short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.TenantGetBAccountTransactions(companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenantTransaction[]> TenantGetBAccountTransactionsAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.TenantGetBAccountTransactionsAsync(companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public void TenantUpdate(RestEgBoligHeldinTest.EgBoligService.Tenant tenant) {
            base.Channel.TenantUpdate(tenant);
        }
        
        public System.Threading.Tasks.Task TenantUpdateAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant) {
            return base.Channel.TenantUpdateAsync(tenant);
        }
        
        public void TenantUpdateCprNo(int interessentNo, string cprNo) {
            base.Channel.TenantUpdateCprNo(interessentNo, cprNo);
        }
        
        public System.Threading.Tasks.Task TenantUpdateCprNoAsync(int interessentNo, string cprNo) {
            return base.Channel.TenantUpdateCprNoAsync(interessentNo, cprNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.KeySet[] TenantGetKeys(short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.TenantGetKeys(companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.KeySet[]> TenantGetKeysAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.TenantGetKeysAsync(companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenantTransaction[] TenantGetRentTransactions(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to, System.Nullable<short> filterByType) {
            return base.Channel.TenantGetRentTransactions(tenant, from, to, filterByType);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenantTransaction[]> TenantGetRentTransactionsAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to, System.Nullable<short> filterByType) {
            return base.Channel.TenantGetRentTransactionsAsync(tenant, from, to, filterByType);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenantDeposit[] TenantGetDeposit(RestEgBoligHeldinTest.EgBoligService.Tenant tenant) {
            return base.Channel.TenantGetDeposit(tenant);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenantDeposit[]> TenantGetDepositAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant) {
            return base.Channel.TenantGetDepositAsync(tenant);
        }
        
        public decimal TenantGetDepositAmountDue(short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.TenantGetDepositAmountDue(companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public System.Threading.Tasks.Task<decimal> TenantGetDepositAmountDueAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.TenantGetDepositAmountDueAsync(companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.UtilityConsumptionSummary[] TenantGetUtilityConsumptionSummaries(RestEgBoligHeldinTest.EgBoligService.Tenant tenant) {
            return base.Channel.TenantGetUtilityConsumptionSummaries(tenant);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.UtilityConsumptionSummary[]> TenantGetUtilityConsumptionSummariesAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant) {
            return base.Channel.TenantGetUtilityConsumptionSummariesAsync(tenant);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenantTransaction[] TenantGetUtilityConsumptionSpec(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.TenantGetUtilityConsumptionSpec(tenant, from, to);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenantTransaction[]> TenantGetUtilityConsumptionSpecAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.TenantGetUtilityConsumptionSpecAsync(tenant, from, to);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.UtilityMeter[] TenantGetUtilityConsumptionMeasurements(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.TenantGetUtilityConsumptionMeasurements(tenant, from, to);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.UtilityMeter[]> TenantGetUtilityConsumptionMeasurementsAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.TenantGetUtilityConsumptionMeasurementsAsync(tenant, from, to);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.History[] TenantGetHistory(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, string[] types, System.Nullable<System.DateTime> fromDate) {
            return base.Channel.TenantGetHistory(tenant, types, fromDate);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.History[]> TenantGetHistoryAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, string[] types, System.Nullable<System.DateTime> fromDate) {
            return base.Channel.TenantGetHistoryAsync(tenant, types, fromDate);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyRentSpec[] TenantGetRentSpec(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.DateTime yearAndMonth) {
            return base.Channel.TenantGetRentSpec(tenant, yearAndMonth);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyRentSpec[]> TenantGetRentSpecAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant, System.DateTime yearAndMonth) {
            return base.Channel.TenantGetRentSpecAsync(tenant, yearAndMonth);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyRentSpec[] TenantGetRentSpecByTenants(RestEgBoligHeldinTest.EgBoligService.Tenant[] tenants, System.DateTime yearAndMonth) {
            return base.Channel.TenantGetRentSpecByTenants(tenants, yearAndMonth);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyRentSpec[]> TenantGetRentSpecByTenantsAsync(RestEgBoligHeldinTest.EgBoligService.Tenant[] tenants, System.DateTime yearAndMonth) {
            return base.Channel.TenantGetRentSpecByTenantsAsync(tenants, yearAndMonth);
        }
        
        public void TenantUpdateEducation(RestEgBoligHeldinTest.EgBoligService.Tenant tenant) {
            base.Channel.TenantUpdateEducation(tenant);
        }
        
        public System.Threading.Tasks.Task TenantUpdateEducationAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant) {
            return base.Channel.TenantUpdateEducationAsync(tenant);
        }
        
        public void TenantUpdateCriterias(RestEgBoligHeldinTest.EgBoligService.Tenant tenant) {
            base.Channel.TenantUpdateCriterias(tenant);
        }
        
        public System.Threading.Tasks.Task TenantUpdateCriteriasAsync(RestEgBoligHeldinTest.EgBoligService.Tenant tenant) {
            return base.Channel.TenantUpdateCriteriasAsync(tenant);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.BankAccountInformation TenantGetBankAccountInformation(int interessentNo) {
            return base.Channel.TenantGetBankAccountInformation(interessentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.BankAccountInformation> TenantGetBankAccountInformationAsync(int interessentNo) {
            return base.Channel.TenantGetBankAccountInformationAsync(interessentNo);
        }
        
        public void TenantUpdateBankAccountInformation(RestEgBoligHeldinTest.EgBoligService.BankAccountInformation bankAccountInformation) {
            base.Channel.TenantUpdateBankAccountInformation(bankAccountInformation);
        }
        
        public System.Threading.Tasks.Task TenantUpdateBankAccountInformationAsync(RestEgBoligHeldinTest.EgBoligService.BankAccountInformation bankAccountInformation) {
            return base.Channel.TenantUpdateBankAccountInformationAsync(bankAccountInformation);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Login PaymentNewMember(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, RestEgBoligHeldinTest.EgBoligService.Member member) {
            return base.Channel.PaymentNewMember(paymentDetails, member);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login> PaymentNewMemberAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, RestEgBoligHeldinTest.EgBoligService.Member member) {
            return base.Channel.PaymentNewMemberAsync(paymentDetails, member);
        }
        
        public bool PaymentExistingMemberNotPaid(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, short memberCompanyNo, decimal memberNo) {
            return base.Channel.PaymentExistingMemberNotPaid(paymentDetails, memberCompanyNo, memberNo);
        }
        
        public System.Threading.Tasks.Task<bool> PaymentExistingMemberNotPaidAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, short memberCompanyNo, decimal memberNo) {
            return base.Channel.PaymentExistingMemberNotPaidAsync(paymentDetails, memberCompanyNo, memberNo);
        }
        
        public bool PaymentNewMembership(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, int interessentNo) {
            return base.Channel.PaymentNewMembership(paymentDetails, interessentNo);
        }
        
        public System.Threading.Tasks.Task<bool> PaymentNewMembershipAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, int interessentNo) {
            return base.Channel.PaymentNewMembershipAsync(paymentDetails, interessentNo);
        }
        
        public bool PaymentRenewMembership(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentRenewMembership(paymentDetails);
        }
        
        public System.Threading.Tasks.Task<bool> PaymentRenewMembershipAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentRenewMembershipAsync(paymentDetails);
        }
        
        public bool PaymentUpgradeMembership(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentUpgradeMembership(paymentDetails);
        }
        
        public System.Threading.Tasks.Task<bool> PaymentUpgradeMembershipAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentUpgradeMembershipAsync(paymentDetails);
        }
        
        public bool PaymentTenantDeposit(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentTenantDeposit(paymentDetails);
        }
        
        public System.Threading.Tasks.Task<bool> PaymentTenantDepositAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentTenantDepositAsync(paymentDetails);
        }
        
        public bool PaymentTenantRent(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentTenantRent(paymentDetails);
        }
        
        public System.Threading.Tasks.Task<bool> PaymentTenantRentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentTenantRentAsync(paymentDetails);
        }
        
        public bool PaymentBooking(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentBooking(paymentDetails);
        }
        
        public System.Threading.Tasks.Task<bool> PaymentBookingAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentBookingAsync(paymentDetails);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateNewMemberPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, RestEgBoligHeldinTest.EgBoligService.Member member) {
            return base.Channel.PaymentValidateNewMemberPayment(paymentDetails, member);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateNewMemberPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, RestEgBoligHeldinTest.EgBoligService.Member member) {
            return base.Channel.PaymentValidateNewMemberPaymentAsync(paymentDetails, member);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateExistingMemberNotPaidPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, short memberCompanyNo, decimal memberNo) {
            return base.Channel.PaymentValidateExistingMemberNotPaidPayment(paymentDetails, memberCompanyNo, memberNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateExistingMemberNotPaidPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, short memberCompanyNo, decimal memberNo) {
            return base.Channel.PaymentValidateExistingMemberNotPaidPaymentAsync(paymentDetails, memberCompanyNo, memberNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateNewMembershipPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, int interessentNo) {
            return base.Channel.PaymentValidateNewMembershipPayment(paymentDetails, interessentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateNewMembershipPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails, int interessentNo) {
            return base.Channel.PaymentValidateNewMembershipPaymentAsync(paymentDetails, interessentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateRenewMembershipPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentValidateRenewMembershipPayment(paymentDetails);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateRenewMembershipPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentValidateRenewMembershipPaymentAsync(paymentDetails);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateUpgradeMembershipPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentValidateUpgradeMembershipPayment(paymentDetails);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateUpgradeMembershipPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentValidateUpgradeMembershipPaymentAsync(paymentDetails);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateTenantDepositPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentValidateTenantDepositPayment(paymentDetails);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateTenantDepositPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentValidateTenantDepositPaymentAsync(paymentDetails);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateTenantRentPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentValidateTenantRentPayment(paymentDetails);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateTenantRentPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentValidateTenantRentPaymentAsync(paymentDetails);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ValidationResult PaymentValidateBookingPayment(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentValidateBookingPayment(paymentDetails);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> PaymentValidateBookingPaymentAsync(RestEgBoligHeldinTest.EgBoligService.Payment paymentDetails) {
            return base.Channel.PaymentValidateBookingPaymentAsync(paymentDetails);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Campaign CampaignGetById(byte id) {
            return base.Channel.CampaignGetById(id);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Campaign> CampaignGetByIdAsync(byte id) {
            return base.Channel.CampaignGetByIdAsync(id);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Campaign CampaignGetByCode(string code) {
            return base.Channel.CampaignGetByCode(code);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Campaign> CampaignGetByCodeAsync(string code) {
            return base.Channel.CampaignGetByCodeAsync(code);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Campaign[] CampaignGetList() {
            return base.Channel.CampaignGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Campaign[]> CampaignGetListAsync() {
            return base.Channel.CampaignGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Campaign[] CampaignGetListByCompanyNo(short companyNo) {
            return base.Channel.CampaignGetListByCompanyNo(companyNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Campaign[]> CampaignGetListByCompanyNoAsync(short companyNo) {
            return base.Channel.CampaignGetListByCompanyNoAsync(companyNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FunctionRoom FunctionRoomGet(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.FunctionRoomGet(companyNo, departmentNo, tenancyNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FunctionRoom> FunctionRoomGetAsync(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.FunctionRoomGetAsync(companyNo, departmentNo, tenancyNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FunctionRoom[] FunctionRoomGetListByCompany(short companyNo) {
            return base.Channel.FunctionRoomGetListByCompany(companyNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FunctionRoom[]> FunctionRoomGetListByCompanyAsync(short companyNo) {
            return base.Channel.FunctionRoomGetListByCompanyAsync(companyNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FunctionRoom[] FunctionRoomGetListByDepartmentKeys(RestEgBoligHeldinTest.EgBoligService.DepartmentKey[] departmentKeys) {
            return base.Channel.FunctionRoomGetListByDepartmentKeys(departmentKeys);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FunctionRoom[]> FunctionRoomGetListByDepartmentKeysAsync(RestEgBoligHeldinTest.EgBoligService.DepartmentKey[] departmentKeys) {
            return base.Channel.FunctionRoomGetListByDepartmentKeysAsync(departmentKeys);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking[] FunctionRoomGetBookingsByRoom(RestEgBoligHeldinTest.EgBoligService.FunctionRoom functionRoom, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.FunctionRoomGetBookingsByRoom(functionRoom, from, to);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking[]> FunctionRoomGetBookingsByRoomAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoom functionRoom, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.FunctionRoomGetBookingsByRoomAsync(functionRoom, from, to);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking[] FunctionRoomGetBookingsByInteressent(int interessentNo, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to, System.Nullable<bool> canceled) {
            return base.Channel.FunctionRoomGetBookingsByInteressent(interessentNo, from, to, canceled);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking[]> FunctionRoomGetBookingsByInteressentAsync(int interessentNo, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to, System.Nullable<bool> canceled) {
            return base.Channel.FunctionRoomGetBookingsByInteressentAsync(interessentNo, from, to, canceled);
        }
        
        public void FunctionRoomAddBooking(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking) {
            base.Channel.FunctionRoomAddBooking(functionRoomBooking);
        }
        
        public System.Threading.Tasks.Task FunctionRoomAddBookingAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking) {
            return base.Channel.FunctionRoomAddBookingAsync(functionRoomBooking);
        }
        
        public void FunctionRoomConfirmBooking(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking, string initials) {
            base.Channel.FunctionRoomConfirmBooking(functionRoomBooking, initials);
        }
        
        public System.Threading.Tasks.Task FunctionRoomConfirmBookingAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking, string initials) {
            return base.Channel.FunctionRoomConfirmBookingAsync(functionRoomBooking, initials);
        }
        
        public void FunctionRoomDeleteBooking(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking) {
            base.Channel.FunctionRoomDeleteBooking(functionRoomBooking);
        }
        
        public System.Threading.Tasks.Task FunctionRoomDeleteBookingAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking) {
            return base.Channel.FunctionRoomDeleteBookingAsync(functionRoomBooking);
        }
        
        public int FunctionRoomAddBooker(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooker functionRoomBooker) {
            return base.Channel.FunctionRoomAddBooker(functionRoomBooker);
        }
        
        public System.Threading.Tasks.Task<int> FunctionRoomAddBookerAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooker functionRoomBooker) {
            return base.Channel.FunctionRoomAddBookerAsync(functionRoomBooker);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooker FunctionRoomGetBooker(int interessentNo) {
            return base.Channel.FunctionRoomGetBooker(interessentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooker> FunctionRoomGetBookerAsync(int interessentNo) {
            return base.Channel.FunctionRoomGetBookerAsync(interessentNo);
        }
        
        public void FunctionRoomUpdateBooker(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooker functionRoomBooker) {
            base.Channel.FunctionRoomUpdateBooker(functionRoomBooker);
        }
        
        public System.Threading.Tasks.Task FunctionRoomUpdateBookerAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooker functionRoomBooker) {
            return base.Channel.FunctionRoomUpdateBookerAsync(functionRoomBooker);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Payment.FunctionRoomBookingAmount FunctionRoomGetBookingFee(RestEgBoligHeldinTest.EgBoligService.FunctionRoom functionRoom, System.DateTime start, System.DateTime end, bool internalBooker) {
            return base.Channel.FunctionRoomGetBookingFee(functionRoom, start, end, internalBooker);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.FunctionRoomBookingAmount> FunctionRoomGetBookingFeeAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoom functionRoom, System.DateTime start, System.DateTime end, bool internalBooker) {
            return base.Channel.FunctionRoomGetBookingFeeAsync(functionRoom, start, end, internalBooker);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Payment.FunctionRoomBookingAmount FunctionRoomGetBookingBalance(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking) {
            return base.Channel.FunctionRoomGetBookingBalance(functionRoomBooking);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.FunctionRoomBookingAmount> FunctionRoomGetBookingBalanceAsync(RestEgBoligHeldinTest.EgBoligService.FunctionRoomBooking functionRoomBooking) {
            return base.Channel.FunctionRoomGetBookingBalanceAsync(functionRoomBooking);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Creditor[] CreditorGetList(string name, RestEgBoligHeldinTest.EgBoligService.Profession[] professions, string zipCode, int minRatingAverage, string preferredBy) {
            return base.Channel.CreditorGetList(name, professions, zipCode, minRatingAverage, preferredBy);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Creditor[]> CreditorGetListAsync(string name, RestEgBoligHeldinTest.EgBoligService.Profession[] professions, string zipCode, int minRatingAverage, string preferredBy) {
            return base.Channel.CreditorGetListAsync(name, professions, zipCode, minRatingAverage, preferredBy);
        }
        
        public void CreditorUpdate(RestEgBoligHeldinTest.EgBoligService.Creditor creditor) {
            base.Channel.CreditorUpdate(creditor);
        }
        
        public System.Threading.Tasks.Task CreditorUpdateAsync(RestEgBoligHeldinTest.EgBoligService.Creditor creditor) {
            return base.Channel.CreditorUpdateAsync(creditor);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Creditor[] CreditorGetLatestRated(int howMany, System.Nullable<System.DateTime> howFarBack) {
            return base.Channel.CreditorGetLatestRated(howMany, howFarBack);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Creditor[]> CreditorGetLatestRatedAsync(int howMany, System.Nullable<System.DateTime> howFarBack) {
            return base.Channel.CreditorGetLatestRatedAsync(howMany, howFarBack);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Profession[] ProfessionGetList() {
            return base.Channel.ProfessionGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Profession[]> ProfessionGetListAsync() {
            return base.Channel.ProfessionGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Rating[] RatingGetListByCreditor(RestEgBoligHeldinTest.EgBoligService.Creditor creditor, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.RatingGetListByCreditor(creditor, from, to);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Rating[]> RatingGetListByCreditorAsync(RestEgBoligHeldinTest.EgBoligService.Creditor creditor, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.RatingGetListByCreditorAsync(creditor, from, to);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Rating[] RatingGetListByCreditorNo(decimal creditorNo, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.RatingGetListByCreditorNo(creditorNo, from, to);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Rating[]> RatingGetListByCreditorNoAsync(decimal creditorNo, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.RatingGetListByCreditorNoAsync(creditorNo, from, to);
        }
        
        public bool RatingAdd(RestEgBoligHeldinTest.EgBoligService.Rating rating) {
            return base.Channel.RatingAdd(rating);
        }
        
        public System.Threading.Tasks.Task<bool> RatingAddAsync(RestEgBoligHeldinTest.EgBoligService.Rating rating) {
            return base.Channel.RatingAddAsync(rating);
        }
        
        public bool RatingDelete(RestEgBoligHeldinTest.EgBoligService.Rating rating) {
            return base.Channel.RatingDelete(rating);
        }
        
        public System.Threading.Tasks.Task<bool> RatingDeleteAsync(RestEgBoligHeldinTest.EgBoligService.Rating rating) {
            return base.Channel.RatingDeleteAsync(rating);
        }
        
        public bool RatingUpdate(RestEgBoligHeldinTest.EgBoligService.Rating rating) {
            return base.Channel.RatingUpdate(rating);
        }
        
        public System.Threading.Tasks.Task<bool> RatingUpdateAsync(RestEgBoligHeldinTest.EgBoligService.Rating rating) {
            return base.Channel.RatingUpdateAsync(rating);
        }
        
        public int RequisitionCreateBRequisition(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, decimal creditorNo, string bookkeepingText, string workDescription, decimal estimateWithoutVAT, System.Nullable<bool> ignoreTenantIsMoving) {
            return base.Channel.RequisitionCreateBRequisition(companyNo, departmentNo, tenancyNo, tenantNo, creditorNo, bookkeepingText, workDescription, estimateWithoutVAT, ignoreTenantIsMoving);
        }
        
        public System.Threading.Tasks.Task<int> RequisitionCreateBRequisitionAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, decimal creditorNo, string bookkeepingText, string workDescription, decimal estimateWithoutVAT, System.Nullable<bool> ignoreTenantIsMoving) {
            return base.Channel.RequisitionCreateBRequisitionAsync(companyNo, departmentNo, tenancyNo, tenantNo, creditorNo, bookkeepingText, workDescription, estimateWithoutVAT, ignoreTenantIsMoving);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ValidationResult RequisitionAddRequisitionOrderLines(int cvrNo, string initials, RestEgBoligHeldinTest.EgBoligService.RequisitionOrderLine[] orderLines) {
            return base.Channel.RequisitionAddRequisitionOrderLines(cvrNo, initials, orderLines);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> RequisitionAddRequisitionOrderLinesAsync(int cvrNo, string initials, RestEgBoligHeldinTest.EgBoligService.RequisitionOrderLine[] orderLines) {
            return base.Channel.RequisitionAddRequisitionOrderLinesAsync(cvrNo, initials, orderLines);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.RentType[] RentTypeGetList() {
            return base.Channel.RentTypeGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.RentType[]> RentTypeGetListAsync() {
            return base.Channel.RentTypeGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo WebDokDocumentInfoGet(int webDokNo) {
            return base.Channel.WebDokDocumentInfoGet(webDokNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo> WebDokDocumentInfoGetAsync(int webDokNo) {
            return base.Channel.WebDokDocumentInfoGetAsync(webDokNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[] WebDokDocumentInfoGetListByCompany(short companyNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly) {
            return base.Channel.WebDokDocumentInfoGetListByCompany(companyNo, subCategories, from, externalOnly);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[]> WebDokDocumentInfoGetListByCompanyAsync(short companyNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly) {
            return base.Channel.WebDokDocumentInfoGetListByCompanyAsync(companyNo, subCategories, from, externalOnly);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[] WebDokDocumentInfoGetListByDepartment(short companyNo, short departmentNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly) {
            return base.Channel.WebDokDocumentInfoGetListByDepartment(companyNo, departmentNo, subCategories, from, externalOnly);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[]> WebDokDocumentInfoGetListByDepartmentAsync(short companyNo, short departmentNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly) {
            return base.Channel.WebDokDocumentInfoGetListByDepartmentAsync(companyNo, departmentNo, subCategories, from, externalOnly);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[] WebDokDocumentInfoGetListByTenant(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly) {
            return base.Channel.WebDokDocumentInfoGetListByTenant(companyNo, departmentNo, tenancyNo, tenantNo, subCategories, from, externalOnly);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[]> WebDokDocumentInfoGetListByTenantAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly) {
            return base.Channel.WebDokDocumentInfoGetListByTenantAsync(companyNo, departmentNo, tenancyNo, tenantNo, subCategories, from, externalOnly);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[] WebDokDocumentInfoGetListByMember(short memberCompanyNo, decimal memberNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly) {
            return base.Channel.WebDokDocumentInfoGetListByMember(memberCompanyNo, memberNo, subCategories, from, externalOnly);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo[]> WebDokDocumentInfoGetListByMemberAsync(short memberCompanyNo, decimal memberNo, short[] subCategories, System.Nullable<System.DateTime> from, System.Nullable<bool> externalOnly) {
            return base.Channel.WebDokDocumentInfoGetListByMemberAsync(memberCompanyNo, memberNo, subCategories, from, externalOnly);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WebDokCategory WebDokCategoryGet(short categoryNo) {
            return base.Channel.WebDokCategoryGet(categoryNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokCategory> WebDokCategoryGetAsync(short categoryNo) {
            return base.Channel.WebDokCategoryGetAsync(categoryNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WebDokCategory[] WebDokCategoryGetList() {
            return base.Channel.WebDokCategoryGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokCategory[]> WebDokCategoryGetListAsync() {
            return base.Channel.WebDokCategoryGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WebDokFile WebDokFileGetByNumber(int webDokNo) {
            return base.Channel.WebDokFileGetByNumber(webDokNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokFile> WebDokFileGetByNumberAsync(int webDokNo) {
            return base.Channel.WebDokFileGetByNumberAsync(webDokNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WebDokFile WebDokFileGetByDocumentInfo(RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo webDokDocumentInfo) {
            return base.Channel.WebDokFileGetByDocumentInfo(webDokDocumentInfo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WebDokFile> WebDokFileGetByDocumentInfoAsync(RestEgBoligHeldinTest.EgBoligService.WebDokDocumentInfo webDokDocumentInfo) {
            return base.Channel.WebDokFileGetByDocumentInfoAsync(webDokDocumentInfo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FinancialDocument[] FinancialDocumentGetDocument(System.Nullable<int> journal, System.Nullable<int> reference, System.Nullable<double> documentNo) {
            return base.Channel.FinancialDocumentGetDocument(journal, reference, documentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FinancialDocument[]> FinancialDocumentGetDocumentAsync(System.Nullable<int> journal, System.Nullable<int> reference, System.Nullable<double> documentNo) {
            return base.Channel.FinancialDocumentGetDocumentAsync(journal, reference, documentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FinancialTransaction[] FinancialTransactionGetTransactions(short companyNo, short departmentNo, System.Nullable<decimal> accountNo, string[] projectNames, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.FinancialTransactionGetTransactions(companyNo, departmentNo, accountNo, projectNames, from, to);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FinancialTransaction[]> FinancialTransactionGetTransactionsAsync(short companyNo, short departmentNo, System.Nullable<decimal> accountNo, string[] projectNames, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.FinancialTransactionGetTransactionsAsync(companyNo, departmentNo, accountNo, projectNames, from, to);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FinancialStatement[] FinancialStatementGetListByOffset(short companyNo, short departmentNo, short offset, string[] projectNames) {
            return base.Channel.FinancialStatementGetListByOffset(companyNo, departmentNo, offset, projectNames);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FinancialStatement[]> FinancialStatementGetListByOffsetAsync(short companyNo, short departmentNo, short offset, string[] projectNames) {
            return base.Channel.FinancialStatementGetListByOffsetAsync(companyNo, departmentNo, offset, projectNames);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FinancialStatement[] FinancialStatementGetListByDateInterval(short companyNo, short departmentNo, System.DateTime startDate, System.DateTime endDate, string[] projectNames) {
            return base.Channel.FinancialStatementGetListByDateInterval(companyNo, departmentNo, startDate, endDate, projectNames);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FinancialStatement[]> FinancialStatementGetListByDateIntervalAsync(short companyNo, short departmentNo, System.DateTime startDate, System.DateTime endDate, string[] projectNames) {
            return base.Channel.FinancialStatementGetListByDateIntervalAsync(companyNo, departmentNo, startDate, endDate, projectNames);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FinancialYear[] FinancialYearGetListByDepartment(short companyNo, short departmentNo) {
            return base.Channel.FinancialYearGetListByDepartment(companyNo, departmentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FinancialYear[]> FinancialYearGetListByDepartmentAsync(short companyNo, short departmentNo) {
            return base.Channel.FinancialYearGetListByDepartmentAsync(companyNo, departmentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.FinancialProject[] FinancialProjectGetListByDepartment(short companyNo, short departmentNo) {
            return base.Channel.FinancialProjectGetListByDepartment(companyNo, departmentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.FinancialProject[]> FinancialProjectGetListByDepartmentAsync(short companyNo, short departmentNo) {
            return base.Channel.FinancialProjectGetListByDepartmentAsync(companyNo, departmentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.EnergyLabel[] EnergyLabelGetList(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, System.Nullable<short> tenancyType) {
            return base.Channel.EnergyLabelGetList(companyNo, departmentNo, tenancyType);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.EnergyLabel[]> EnergyLabelGetListAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, System.Nullable<short> tenancyType) {
            return base.Channel.EnergyLabelGetListAsync(companyNo, departmentNo, tenancyType);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.AssignmentRule[] AssignmentRuleGetList(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, System.Nullable<short> tenancyType) {
            return base.Channel.AssignmentRuleGetList(companyNo, departmentNo, tenancyType);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.AssignmentRule[]> AssignmentRuleGetListAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, System.Nullable<short> tenancyType) {
            return base.Channel.AssignmentRuleGetListAsync(companyNo, departmentNo, tenancyType);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.RentKind RentKindGet(short companyNo, short departmentNo, short rentKindId) {
            return base.Channel.RentKindGet(companyNo, departmentNo, rentKindId);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.RentKind> RentKindGetAsync(short companyNo, short departmentNo, short rentKindId) {
            return base.Channel.RentKindGetAsync(companyNo, departmentNo, rentKindId);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.RentKind[] RentKindGetList() {
            return base.Channel.RentKindGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.RentKind[]> RentKindGetListAsync() {
            return base.Channel.RentKindGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyInspection TenancyInspectionGet(int tenancyInspectionId) {
            return base.Channel.TenancyInspectionGet(tenancyInspectionId);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspection> TenancyInspectionGetAsync(int tenancyInspectionId) {
            return base.Channel.TenancyInspectionGetAsync(tenancyInspectionId);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyInspection[] TenancyInspectionGetList(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, bool onlyActive) {
            return base.Channel.TenancyInspectionGetList(companyNo, departmentNo, tenancyNo, tenantNo, onlyActive);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspection[]> TenancyInspectionGetListAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, bool onlyActive) {
            return base.Channel.TenancyInspectionGetListAsync(companyNo, departmentNo, tenancyNo, tenantNo, onlyActive);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] TenancyInspectionDamageReportGetListByRoom(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionRoom room) {
            return base.Channel.TenancyInspectionDamageReportGetListByRoom(room);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[]> TenancyInspectionDamageReportGetListByRoomAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionRoom room) {
            return base.Channel.TenancyInspectionDamageReportGetListByRoomAsync(room);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] TenancyInspectionDamageReportGetListByTenancyInspection(RestEgBoligHeldinTest.EgBoligService.TenancyInspection tenancyInspection) {
            return base.Channel.TenancyInspectionDamageReportGetListByTenancyInspection(tenancyInspection);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[]> TenancyInspectionDamageReportGetListByTenancyInspectionAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspection tenancyInspection) {
            return base.Channel.TenancyInspectionDamageReportGetListByTenancyInspectionAsync(tenancyInspection);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] TenancyInspectionDamageReportGetListByTenancyInspections(RestEgBoligHeldinTest.EgBoligService.TenancyInspection[] tenancyInspections) {
            return base.Channel.TenancyInspectionDamageReportGetListByTenancyInspections(tenancyInspections);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[]> TenancyInspectionDamageReportGetListByTenancyInspectionsAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspection[] tenancyInspections) {
            return base.Channel.TenancyInspectionDamageReportGetListByTenancyInspectionsAsync(tenancyInspections);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] TenancyInspectionDamageReportGetListByTenant(short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.TenancyInspectionDamageReportGetListByTenant(companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[]> TenancyInspectionDamageReportGetListByTenantAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo) {
            return base.Channel.TenancyInspectionDamageReportGetListByTenantAsync(companyNo, departmentNo, tenancyNo, tenantNo);
        }
        
        public void TenancyInspectionDamageReportAdd(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport) {
            base.Channel.TenancyInspectionDamageReportAdd(damageReport);
        }
        
        public System.Threading.Tasks.Task TenancyInspectionDamageReportAddAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport) {
            return base.Channel.TenancyInspectionDamageReportAddAsync(damageReport);
        }
        
        public void TenancyInspectionDamageReportAddList(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] damageReports) {
            base.Channel.TenancyInspectionDamageReportAddList(damageReports);
        }
        
        public System.Threading.Tasks.Task TenancyInspectionDamageReportAddListAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] damageReports) {
            return base.Channel.TenancyInspectionDamageReportAddListAsync(damageReports);
        }
        
        public void TenancyInspectionDamageReportUpdate(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport) {
            base.Channel.TenancyInspectionDamageReportUpdate(damageReport);
        }
        
        public System.Threading.Tasks.Task TenancyInspectionDamageReportUpdateAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport) {
            return base.Channel.TenancyInspectionDamageReportUpdateAsync(damageReport);
        }
        
        public void TenancyInspectionDamageReportUpdateList(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] damageReports) {
            base.Channel.TenancyInspectionDamageReportUpdateList(damageReports);
        }
        
        public System.Threading.Tasks.Task TenancyInspectionDamageReportUpdateListAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] damageReports) {
            return base.Channel.TenancyInspectionDamageReportUpdateListAsync(damageReports);
        }
        
        public void TenancyInspectionDamageReportDelete(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport) {
            base.Channel.TenancyInspectionDamageReportDelete(damageReport);
        }
        
        public System.Threading.Tasks.Task TenancyInspectionDamageReportDeleteAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport) {
            return base.Channel.TenancyInspectionDamageReportDeleteAsync(damageReport);
        }
        
        public void TenancyInspectionDamageReportDeleteList(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] damageReports) {
            base.Channel.TenancyInspectionDamageReportDeleteList(damageReports);
        }
        
        public System.Threading.Tasks.Task TenancyInspectionDamageReportDeleteListAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport[] damageReports) {
            return base.Channel.TenancyInspectionDamageReportDeleteListAsync(damageReports);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[] TenancyInspectionPictureGetListByDamageReport(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport) {
            return base.Channel.TenancyInspectionPictureGetListByDamageReport(damageReport);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyInspectionPicture[]> TenancyInspectionPictureGetListByDamageReportAsync(RestEgBoligHeldinTest.EgBoligService.TenancyInspectionDamageReport damageReport) {
            return base.Channel.TenancyInspectionPictureGetListByDamageReportAsync(damageReport);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Company CompanyGet(short companyNo) {
            return base.Channel.CompanyGet(companyNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Company> CompanyGetAsync(short companyNo) {
            return base.Channel.CompanyGetAsync(companyNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Company[] CompanyGetList() {
            return base.Channel.CompanyGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Company[]> CompanyGetListAsync() {
            return base.Channel.CompanyGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Department DepartmentGet(short companyNo, short departmentNo) {
            return base.Channel.DepartmentGet(companyNo, departmentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department> DepartmentGetAsync(short companyNo, short departmentNo) {
            return base.Channel.DepartmentGetAsync(companyNo, departmentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetList() {
            return base.Channel.DepartmentGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListAsync() {
            return base.Channel.DepartmentGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByKeys(RestEgBoligHeldinTest.EgBoligService.DepartmentKey[] keys) {
            return base.Channel.DepartmentGetListByKeys(keys);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByKeysAsync(RestEgBoligHeldinTest.EgBoligService.DepartmentKey[] keys) {
            return base.Channel.DepartmentGetListByKeysAsync(keys);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByCompany(short companyNo) {
            return base.Channel.DepartmentGetListByCompany(companyNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByCompanyAsync(short companyNo) {
            return base.Channel.DepartmentGetListByCompanyAsync(companyNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByZipCode(int zipCode) {
            return base.Channel.DepartmentGetListByZipCode(zipCode);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByZipCodeAsync(int zipCode) {
            return base.Channel.DepartmentGetListByZipCodeAsync(zipCode);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByStreet(string streetName) {
            return base.Channel.DepartmentGetListByStreet(streetName);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByStreetAsync(string streetName) {
            return base.Channel.DepartmentGetListByStreetAsync(streetName);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByExactStreet(string streetName) {
            return base.Channel.DepartmentGetListByExactStreet(streetName);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByExactStreetAsync(string streetName) {
            return base.Channel.DepartmentGetListByExactStreetAsync(streetName);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByGetListByRegion(short regionNo) {
            return base.Channel.DepartmentGetListByGetListByRegion(regionNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByGetListByRegionAsync(short regionNo) {
            return base.Channel.DepartmentGetListByGetListByRegionAsync(regionNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByRegion(short regionNo) {
            return base.Channel.DepartmentGetListByRegion(regionNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByRegionAsync(short regionNo) {
            return base.Channel.DepartmentGetListByRegionAsync(regionNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Department[] DepartmentGetListByOffice(RestEgBoligHeldinTest.EgBoligService.Office office) {
            return base.Channel.DepartmentGetListByOffice(office);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Department[]> DepartmentGetListByOfficeAsync(RestEgBoligHeldinTest.EgBoligService.Office office) {
            return base.Channel.DepartmentGetListByOfficeAsync(office);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.DepartmentText[] DepartmentTextGetList(short companyNo, short departmentNo) {
            return base.Channel.DepartmentTextGetList(companyNo, departmentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.DepartmentText[]> DepartmentTextGetListAsync(short companyNo, short departmentNo) {
            return base.Channel.DepartmentTextGetListAsync(companyNo, departmentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Tenancy TenancyGet(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.TenancyGet(companyNo, departmentNo, tenancyNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenancy> TenancyGetAsync(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.TenancyGetAsync(companyNo, departmentNo, tenancyNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Tenancy[] TenancyGetList(RestEgBoligHeldinTest.EgBoligService.Tenancy.Type type) {
            return base.Channel.TenancyGetList(type);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenancy[]> TenancyGetListAsync(RestEgBoligHeldinTest.EgBoligService.Tenancy.Type type) {
            return base.Channel.TenancyGetListAsync(type);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Tenancy[] TenancyGetListByCompany(short companyNo, RestEgBoligHeldinTest.EgBoligService.Tenancy.Type type) {
            return base.Channel.TenancyGetListByCompany(companyNo, type);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenancy[]> TenancyGetListByCompanyAsync(short companyNo, RestEgBoligHeldinTest.EgBoligService.Tenancy.Type type) {
            return base.Channel.TenancyGetListByCompanyAsync(companyNo, type);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Tenancy[] TenancyGetListByDepartment(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.Tenancy.Type type) {
            return base.Channel.TenancyGetListByDepartment(companyNo, departmentNo, type);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenancy[]> TenancyGetListByDepartmentAsync(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.Tenancy.Type type) {
            return base.Channel.TenancyGetListByDepartmentAsync(companyNo, departmentNo, type);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Tenancy[] TenancyGetListByWish(short memberCompanyNo, decimal memberNo) {
            return base.Channel.TenancyGetListByWish(memberCompanyNo, memberNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenancy[]> TenancyGetListByWishAsync(short memberCompanyNo, decimal memberNo) {
            return base.Channel.TenancyGetListByWishAsync(memberCompanyNo, memberNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Tenancy[] TenancyGetListByTenants(RestEgBoligHeldinTest.EgBoligService.Tenant[] tenants) {
            return base.Channel.TenancyGetListByTenants(tenants);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Tenancy[]> TenancyGetListByTenantsAsync(RestEgBoligHeldinTest.EgBoligService.Tenant[] tenants) {
            return base.Channel.TenancyGetListByTenantsAsync(tenants);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyRent[] TenancyGetRent(RestEgBoligHeldinTest.EgBoligService.Tenancy tenancy, System.DateTime when) {
            return base.Channel.TenancyGetRent(tenancy, when);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyRent[]> TenancyGetRentAsync(RestEgBoligHeldinTest.EgBoligService.Tenancy tenancy, System.DateTime when) {
            return base.Channel.TenancyGetRentAsync(tenancy, when);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.History[] TenancyGetHistory(RestEgBoligHeldinTest.EgBoligService.Tenancy tenancy, string[] types, System.Nullable<System.DateTime> fromDate) {
            return base.Channel.TenancyGetHistory(tenancy, types, fromDate);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.History[]> TenancyGetHistoryAsync(RestEgBoligHeldinTest.EgBoligService.Tenancy tenancy, string[] types, System.Nullable<System.DateTime> fromDate) {
            return base.Channel.TenancyGetHistoryAsync(tenancy, types, fromDate);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyPremis[] TenancyPremisGetList() {
            return base.Channel.TenancyPremisGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremis[]> TenancyPremisGetListAsync() {
            return base.Channel.TenancyPremisGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyPremis[] TenancyPremisGetListByDepartment(short companyNo, short departmentNo) {
            return base.Channel.TenancyPremisGetListByDepartment(companyNo, departmentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremis[]> TenancyPremisGetListByDepartmentAsync(short companyNo, short departmentNo) {
            return base.Channel.TenancyPremisGetListByDepartmentAsync(companyNo, departmentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyPremis[] TenancyPremisGetListByTenancy(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.TenancyPremisGetListByTenancy(companyNo, departmentNo, tenancyNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremis[]> TenancyPremisGetListByTenancyAsync(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.TenancyPremisGetListByTenancyAsync(companyNo, departmentNo, tenancyNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] TenancyPremisValueGetList() {
            return base.Channel.TenancyPremisValueGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[]> TenancyPremisValueGetListAsync() {
            return base.Channel.TenancyPremisValueGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] TenancyPremisValueGetListByCompany(short companyNo) {
            return base.Channel.TenancyPremisValueGetListByCompany(companyNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[]> TenancyPremisValueGetListByCompanyAsync(short companyNo) {
            return base.Channel.TenancyPremisValueGetListByCompanyAsync(companyNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] TenancyPremisValueGetListByDepartment(short companyNo, short departmentNo) {
            return base.Channel.TenancyPremisValueGetListByDepartment(companyNo, departmentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[]> TenancyPremisValueGetListByDepartmentAsync(short companyNo, short departmentNo) {
            return base.Channel.TenancyPremisValueGetListByDepartmentAsync(companyNo, departmentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] TenancyPremisValueGetListByTenancy(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.TenancyPremisValueGetListByTenancy(companyNo, departmentNo, tenancyNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[]> TenancyPremisValueGetListByTenancyAsync(short companyNo, short departmentNo, short tenancyNo) {
            return base.Channel.TenancyPremisValueGetListByTenancyAsync(companyNo, departmentNo, tenancyNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] TenancyPremisValueGetListForAllTenancies(System.Nullable<short> companyNo, System.Nullable<short> departmentNo) {
            return base.Channel.TenancyPremisValueGetListForAllTenancies(companyNo, departmentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[]> TenancyPremisValueGetListForAllTenanciesAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo) {
            return base.Channel.TenancyPremisValueGetListForAllTenanciesAsync(companyNo, departmentNo);
        }
        
        public void TenancyPremisValueAdd(RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] tenancyPremisValues) {
            base.Channel.TenancyPremisValueAdd(tenancyPremisValues);
        }
        
        public System.Threading.Tasks.Task TenancyPremisValueAddAsync(RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] tenancyPremisValues) {
            return base.Channel.TenancyPremisValueAddAsync(tenancyPremisValues);
        }
        
        public void TenancyPremisValueDelete(RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] tenancyPremisValues) {
            base.Channel.TenancyPremisValueDelete(tenancyPremisValues);
        }
        
        public System.Threading.Tasks.Task TenancyPremisValueDeleteAsync(RestEgBoligHeldinTest.EgBoligService.TenancyPremisValue[] tenancyPremisValues) {
            return base.Channel.TenancyPremisValueDeleteAsync(tenancyPremisValues);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyType TenancyTypeGet(short code) {
            return base.Channel.TenancyTypeGet(code);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyType> TenancyTypeGetAsync(short code) {
            return base.Channel.TenancyTypeGetAsync(code);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.TenancyType[] TenancyTypeGetList() {
            return base.Channel.TenancyTypeGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.TenancyType[]> TenancyTypeGetListAsync() {
            return base.Channel.TenancyTypeGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ApartmentType ApartmentTypeGet(short code) {
            return base.Channel.ApartmentTypeGet(code);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ApartmentType> ApartmentTypeGetAsync(short code) {
            return base.Channel.ApartmentTypeGetAsync(code);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ApartmentType[] ApartmentTypeGetList() {
            return base.Channel.ApartmentTypeGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ApartmentType[]> ApartmentTypeGetListAsync() {
            return base.Channel.ApartmentTypeGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.HousingType HousingTypeGet(short companyNo, short departmentNo, string typeId) {
            return base.Channel.HousingTypeGet(companyNo, departmentNo, typeId);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.HousingType> HousingTypeGetAsync(short companyNo, short departmentNo, string typeId) {
            return base.Channel.HousingTypeGetAsync(companyNo, departmentNo, typeId);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.HousingType[] HousingTypeGetList() {
            return base.Channel.HousingTypeGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.HousingType[]> HousingTypeGetListAsync() {
            return base.Channel.HousingTypeGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.File[] FileGetListByFileType(RestEgBoligHeldinTest.EgBoligService.File.Type type) {
            return base.Channel.FileGetListByFileType(type);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.File[]> FileGetListByFileTypeAsync(RestEgBoligHeldinTest.EgBoligService.File.Type type) {
            return base.Channel.FileGetListByFileTypeAsync(type);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.File[] FileGetListByDepartment(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.File.Type type) {
            return base.Channel.FileGetListByDepartment(companyNo, departmentNo, type);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.File[]> FileGetListByDepartmentAsync(short companyNo, short departmentNo, RestEgBoligHeldinTest.EgBoligService.File.Type type) {
            return base.Channel.FileGetListByDepartmentAsync(companyNo, departmentNo, type);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.File[] FileGetListByTenancy(short companyNo, short departmentNo, string tenancyNo, RestEgBoligHeldinTest.EgBoligService.File.Type type) {
            return base.Channel.FileGetListByTenancy(companyNo, departmentNo, tenancyNo, type);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.File[]> FileGetListByTenancyAsync(short companyNo, short departmentNo, string tenancyNo, RestEgBoligHeldinTest.EgBoligService.File.Type type) {
            return base.Channel.FileGetListByTenancyAsync(companyNo, departmentNo, tenancyNo, type);
        }
        
        public void FileAdd(RestEgBoligHeldinTest.EgBoligService.File file) {
            base.Channel.FileAdd(file);
        }
        
        public System.Threading.Tasks.Task FileAddAsync(RestEgBoligHeldinTest.EgBoligService.File file) {
            return base.Channel.FileAddAsync(file);
        }
        
        public void FileAddList(RestEgBoligHeldinTest.EgBoligService.File[] files) {
            base.Channel.FileAddList(files);
        }
        
        public System.Threading.Tasks.Task FileAddListAsync(RestEgBoligHeldinTest.EgBoligService.File[] files) {
            return base.Channel.FileAddListAsync(files);
        }
        
        public void FileUpdate(RestEgBoligHeldinTest.EgBoligService.File file) {
            base.Channel.FileUpdate(file);
        }
        
        public System.Threading.Tasks.Task FileUpdateAsync(RestEgBoligHeldinTest.EgBoligService.File file) {
            return base.Channel.FileUpdateAsync(file);
        }
        
        public void FileUpdateList(RestEgBoligHeldinTest.EgBoligService.File[] files) {
            base.Channel.FileUpdateList(files);
        }
        
        public System.Threading.Tasks.Task FileUpdateListAsync(RestEgBoligHeldinTest.EgBoligService.File[] files) {
            return base.Channel.FileUpdateListAsync(files);
        }
        
        public void FileDelete(RestEgBoligHeldinTest.EgBoligService.File file) {
            base.Channel.FileDelete(file);
        }
        
        public System.Threading.Tasks.Task FileDeleteAsync(RestEgBoligHeldinTest.EgBoligService.File file) {
            return base.Channel.FileDeleteAsync(file);
        }
        
        public void FileDeleteList(RestEgBoligHeldinTest.EgBoligService.File[] files) {
            base.Channel.FileDeleteList(files);
        }
        
        public System.Threading.Tasks.Task FileDeleteListAsync(RestEgBoligHeldinTest.EgBoligService.File[] files) {
            return base.Channel.FileDeleteListAsync(files);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Country[] CountryGetAll() {
            return base.Channel.CountryGetAll();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Country[]> CountryGetAllAsync() {
            return base.Channel.CountryGetAllAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Child[] ChildGetByMember(short companyNo, decimal memberNo) {
            return base.Channel.ChildGetByMember(companyNo, memberNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Child[]> ChildGetByMemberAsync(short companyNo, decimal memberNo) {
            return base.Channel.ChildGetByMemberAsync(companyNo, memberNo);
        }
        
        public void ChildAdd(RestEgBoligHeldinTest.EgBoligService.Child child) {
            base.Channel.ChildAdd(child);
        }
        
        public System.Threading.Tasks.Task ChildAddAsync(RestEgBoligHeldinTest.EgBoligService.Child child) {
            return base.Channel.ChildAddAsync(child);
        }
        
        public void ChildAddChildren(RestEgBoligHeldinTest.EgBoligService.Child[] children) {
            base.Channel.ChildAddChildren(children);
        }
        
        public System.Threading.Tasks.Task ChildAddChildrenAsync(RestEgBoligHeldinTest.EgBoligService.Child[] children) {
            return base.Channel.ChildAddChildrenAsync(children);
        }
        
        public void ChildUpdate(RestEgBoligHeldinTest.EgBoligService.Child child) {
            base.Channel.ChildUpdate(child);
        }
        
        public System.Threading.Tasks.Task ChildUpdateAsync(RestEgBoligHeldinTest.EgBoligService.Child child) {
            return base.Channel.ChildUpdateAsync(child);
        }
        
        public void ChildUpdateChildren(RestEgBoligHeldinTest.EgBoligService.Child[] children) {
            base.Channel.ChildUpdateChildren(children);
        }
        
        public System.Threading.Tasks.Task ChildUpdateChildrenAsync(RestEgBoligHeldinTest.EgBoligService.Child[] children) {
            return base.Channel.ChildUpdateChildrenAsync(children);
        }
        
        public void ChildDelete(RestEgBoligHeldinTest.EgBoligService.Child child) {
            base.Channel.ChildDelete(child);
        }
        
        public System.Threading.Tasks.Task ChildDeleteAsync(RestEgBoligHeldinTest.EgBoligService.Child child) {
            return base.Channel.ChildDeleteAsync(child);
        }
        
        public void ChildDeleteChildren(RestEgBoligHeldinTest.EgBoligService.Child[] children) {
            base.Channel.ChildDeleteChildren(children);
        }
        
        public System.Threading.Tasks.Task ChildDeleteChildrenAsync(RestEgBoligHeldinTest.EgBoligService.Child[] children) {
            return base.Channel.ChildDeleteChildrenAsync(children);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.RoleType RoleTypeGet(string type) {
            return base.Channel.RoleTypeGet(type);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.RoleType> RoleTypeGetAsync(string type) {
            return base.Channel.RoleTypeGetAsync(type);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.RoleType[] RoleTypeGetList() {
            return base.Channel.RoleTypeGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.RoleType[]> RoleTypeGetListAsync() {
            return base.Channel.RoleTypeGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Personnel[] PersonnelGetListByDepartment(short companyNo, short departmentNo) {
            return base.Channel.PersonnelGetListByDepartment(companyNo, departmentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Personnel[]> PersonnelGetListByDepartmentAsync(short companyNo, short departmentNo) {
            return base.Channel.PersonnelGetListByDepartmentAsync(companyNo, departmentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Personnel[] PersonnelGetListByRoleType(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string roleType) {
            return base.Channel.PersonnelGetListByRoleType(companyNo, departmentNo, roleType);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Personnel[]> PersonnelGetListByRoleTypeAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string roleType) {
            return base.Channel.PersonnelGetListByRoleTypeAsync(companyNo, departmentNo, roleType);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Personnel[] PersonnelGetListByRoleArt(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string roleArt) {
            return base.Channel.PersonnelGetListByRoleArt(companyNo, departmentNo, roleArt);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Personnel[]> PersonnelGetListByRoleArtAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string roleArt) {
            return base.Channel.PersonnelGetListByRoleArtAsync(companyNo, departmentNo, roleArt);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Personnel[] PersonnelGetListByOccupation(short companyNo, short departmentNo, string occupation) {
            return base.Channel.PersonnelGetListByOccupation(companyNo, departmentNo, occupation);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Personnel[]> PersonnelGetListByOccupationAsync(short companyNo, short departmentNo, string occupation) {
            return base.Channel.PersonnelGetListByOccupationAsync(companyNo, departmentNo, occupation);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Personnel[] PersonnelGetListByName(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string name) {
            return base.Channel.PersonnelGetListByName(companyNo, departmentNo, name);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Personnel[]> PersonnelGetListByNameAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string name) {
            return base.Channel.PersonnelGetListByNameAsync(companyNo, departmentNo, name);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Personnel[] PersonnelGetListByInitials(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string initials) {
            return base.Channel.PersonnelGetListByInitials(companyNo, departmentNo, initials);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Personnel[]> PersonnelGetListByInitialsAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string initials) {
            return base.Channel.PersonnelGetListByInitialsAsync(companyNo, departmentNo, initials);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Personnel[] PersonnelGetListByInteressentNo(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, int interessentNo) {
            return base.Channel.PersonnelGetListByInteressentNo(companyNo, departmentNo, interessentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Personnel[]> PersonnelGetListByInteressentNoAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, int interessentNo) {
            return base.Channel.PersonnelGetListByInteressentNoAsync(companyNo, departmentNo, interessentNo);
        }
        
        public void PersonnelUpdate(RestEgBoligHeldinTest.EgBoligService.Personnel personnel) {
            base.Channel.PersonnelUpdate(personnel);
        }
        
        public System.Threading.Tasks.Task PersonnelUpdateAsync(RestEgBoligHeldinTest.EgBoligService.Personnel personnel) {
            return base.Channel.PersonnelUpdateAsync(personnel);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount MemberFeeGetMembershipPriceForNewMember(short companyNo, byte noOfYears, byte offerByEmail, byte status, short[] lmtyper, string waitlistType) {
            return base.Channel.MemberFeeGetMembershipPriceForNewMember(companyNo, noOfYears, offerByEmail, status, lmtyper, waitlistType);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount> MemberFeeGetMembershipPriceForNewMemberAsync(short companyNo, byte noOfYears, byte offerByEmail, byte status, short[] lmtyper, string waitlistType) {
            return base.Channel.MemberFeeGetMembershipPriceForNewMemberAsync(companyNo, noOfYears, offerByEmail, status, lmtyper, waitlistType);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount[] MemberFeeGetMembershipPriceListForNewMember(System.Collections.Generic.Dictionary<short, short[]> companyNoAndTenancyTypes, byte noOfYears, byte offerByEmail, byte status, string waitlistType) {
            return base.Channel.MemberFeeGetMembershipPriceListForNewMember(companyNoAndTenancyTypes, noOfYears, offerByEmail, status, waitlistType);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount[]> MemberFeeGetMembershipPriceListForNewMemberAsync(System.Collections.Generic.Dictionary<short, short[]> companyNoAndTenancyTypes, byte noOfYears, byte offerByEmail, byte status, string waitlistType) {
            return base.Channel.MemberFeeGetMembershipPriceListForNewMemberAsync(companyNoAndTenancyTypes, noOfYears, offerByEmail, status, waitlistType);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount MemberFeeGetMembershipPriceForExistingMemberByMemberNo(short memberCompanyNo, decimal memberNo, short newCompanyNo, byte noOfYears, byte status, short[] lmtyper, string waitlistType) {
            return base.Channel.MemberFeeGetMembershipPriceForExistingMemberByMemberNo(memberCompanyNo, memberNo, newCompanyNo, noOfYears, status, lmtyper, waitlistType);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount> MemberFeeGetMembershipPriceForExistingMemberByMemberNoAsync(short memberCompanyNo, decimal memberNo, short newCompanyNo, byte noOfYears, byte status, short[] lmtyper, string waitlistType) {
            return base.Channel.MemberFeeGetMembershipPriceForExistingMemberByMemberNoAsync(memberCompanyNo, memberNo, newCompanyNo, noOfYears, status, lmtyper, waitlistType);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount MemberFeeGetMembershipPriceForExistingMemberByInteressentNo(int interessentNo, short newCompanyNo, byte noOfYears, byte status, short[] lmtyper, string waitlistType) {
            return base.Channel.MemberFeeGetMembershipPriceForExistingMemberByInteressentNo(interessentNo, newCompanyNo, noOfYears, status, lmtyper, waitlistType);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount> MemberFeeGetMembershipPriceForExistingMemberByInteressentNoAsync(int interessentNo, short newCompanyNo, byte noOfYears, byte status, short[] lmtyper, string waitlistType) {
            return base.Channel.MemberFeeGetMembershipPriceForExistingMemberByInteressentNoAsync(interessentNo, newCompanyNo, noOfYears, status, lmtyper, waitlistType);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Payment.UpgradeAmount MemberFeeGetUpgradeMembershipPrice(short memberCompanyNo, decimal memberNo, short upgradeCompanyNo, string waitlistType) {
            return base.Channel.MemberFeeGetUpgradeMembershipPrice(memberCompanyNo, memberNo, upgradeCompanyNo, waitlistType);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.UpgradeAmount> MemberFeeGetUpgradeMembershipPriceAsync(short memberCompanyNo, decimal memberNo, short upgradeCompanyNo, string waitlistType) {
            return base.Channel.MemberFeeGetUpgradeMembershipPriceAsync(memberCompanyNo, memberNo, upgradeCompanyNo, waitlistType);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Payment.RenewAmount MemberFeeGetRenewMembershipPrice(short companyNo, decimal memberNo, short renewCompanyNo, string waitlistType) {
            return base.Channel.MemberFeeGetRenewMembershipPrice(companyNo, memberNo, renewCompanyNo, waitlistType);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.RenewAmount> MemberFeeGetRenewMembershipPriceAsync(short companyNo, decimal memberNo, short renewCompanyNo, string waitlistType) {
            return base.Channel.MemberFeeGetRenewMembershipPriceAsync(companyNo, memberNo, renewCompanyNo, waitlistType);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount[] MemberFeeGetMembershipPriceForExistingMemberNotPaid(short memberCompanyNo, decimal memberNo) {
            return base.Channel.MemberFeeGetMembershipPriceForExistingMemberNotPaid(memberCompanyNo, memberNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Payment.NewAmount[]> MemberFeeGetMembershipPriceForExistingMemberNotPaidAsync(short memberCompanyNo, decimal memberNo) {
            return base.Channel.MemberFeeGetMembershipPriceForExistingMemberNotPaidAsync(memberCompanyNo, memberNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.MemberFee[] MemberFeeGetList() {
            return base.Channel.MemberFeeGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.MemberFee[]> MemberFeeGetListAsync() {
            return base.Channel.MemberFeeGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.BoardMember[] BoardMemberGetListByInteressentNo(int interessentNo) {
            return base.Channel.BoardMemberGetListByInteressentNo(interessentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.BoardMember[]> BoardMemberGetListByInteressentNoAsync(int interessentNo) {
            return base.Channel.BoardMemberGetListByInteressentNoAsync(interessentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.BoardMember[] BoardMemberGetListByGroupName(short companyNo, short departmentNo, string groupName, System.Nullable<bool> onlyActive) {
            return base.Channel.BoardMemberGetListByGroupName(companyNo, departmentNo, groupName, onlyActive);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.BoardMember[]> BoardMemberGetListByGroupNameAsync(short companyNo, short departmentNo, string groupName, System.Nullable<bool> onlyActive) {
            return base.Channel.BoardMemberGetListByGroupNameAsync(companyNo, departmentNo, groupName, onlyActive);
        }
        
        public string[] BoardGroupNames() {
            return base.Channel.BoardGroupNames();
        }
        
        public System.Threading.Tasks.Task<string[]> BoardGroupNamesAsync() {
            return base.Channel.BoardGroupNamesAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.BoardMember[] BoardMemberGetListByName(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string groupName, string name, System.Nullable<bool> onlyActive) {
            return base.Channel.BoardMemberGetListByName(companyNo, departmentNo, groupName, name, onlyActive);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.BoardMember[]> BoardMemberGetListByNameAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, string groupName, string name, System.Nullable<bool> onlyActive) {
            return base.Channel.BoardMemberGetListByNameAsync(companyNo, departmentNo, groupName, name, onlyActive);
        }
        
        public void BoardMemberUpdate(RestEgBoligHeldinTest.EgBoligService.BoardMember boardMember) {
            base.Channel.BoardMemberUpdate(boardMember);
        }
        
        public System.Threading.Tasks.Task BoardMemberUpdateAsync(RestEgBoligHeldinTest.EgBoligService.BoardMember boardMember) {
            return base.Channel.BoardMemberUpdateAsync(boardMember);
        }
        
        public void BoardMemberUpdateCprNo(int interessentNo, System.Nullable<System.DateTime> birthday, string cprSerialNo) {
            base.Channel.BoardMemberUpdateCprNo(interessentNo, birthday, cprSerialNo);
        }
        
        public System.Threading.Tasks.Task BoardMemberUpdateCprNoAsync(int interessentNo, System.Nullable<System.DateTime> birthday, string cprSerialNo) {
            return base.Channel.BoardMemberUpdateCprNoAsync(interessentNo, birthday, cprSerialNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Login LoginByInteressentNo(int interessentNo, string password, System.Nullable<bool> doNotUpdateLoginTimestamp) {
            return base.Channel.LoginByInteressentNo(interessentNo, password, doNotUpdateLoginTimestamp);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login> LoginByInteressentNoAsync(int interessentNo, string password, System.Nullable<bool> doNotUpdateLoginTimestamp) {
            return base.Channel.LoginByInteressentNoAsync(interessentNo, password, doNotUpdateLoginTimestamp);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Login LoginByEmail(string email, string password, System.Nullable<bool> doNotUpdateLoginTimestamp) {
            return base.Channel.LoginByEmail(email, password, doNotUpdateLoginTimestamp);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login> LoginByEmailAsync(string email, string password, System.Nullable<bool> doNotUpdateLoginTimestamp) {
            return base.Channel.LoginByEmailAsync(email, password, doNotUpdateLoginTimestamp);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Login LoginByCprNo(string cprNo, string password, System.Nullable<bool> doNotUpdateLoginTimestamp) {
            return base.Channel.LoginByCprNo(cprNo, password, doNotUpdateLoginTimestamp);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login> LoginByCprNoAsync(string cprNo, string password, System.Nullable<bool> doNotUpdateLoginTimestamp) {
            return base.Channel.LoginByCprNoAsync(cprNo, password, doNotUpdateLoginTimestamp);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Login LoginByInitials(string initials, System.Nullable<bool> doNotUpdateLoginTimestamp) {
            return base.Channel.LoginByInitials(initials, doNotUpdateLoginTimestamp);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login> LoginByInitialsAsync(string initials, System.Nullable<bool> doNotUpdateLoginTimestamp) {
            return base.Channel.LoginByInitialsAsync(initials, doNotUpdateLoginTimestamp);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Login LoginByNemID(string pid, System.Nullable<bool> doNotUpdateLoginTimestamp) {
            return base.Channel.LoginByNemID(pid, doNotUpdateLoginTimestamp);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login> LoginByNemIDAsync(string pid, System.Nullable<bool> doNotUpdateLoginTimestamp) {
            return base.Channel.LoginByNemIDAsync(pid, doNotUpdateLoginTimestamp);
        }
        
        public string PasswordByInteressentNo(int interessentNo) {
            return base.Channel.PasswordByInteressentNo(interessentNo);
        }
        
        public System.Threading.Tasks.Task<string> PasswordByInteressentNoAsync(int interessentNo) {
            return base.Channel.PasswordByInteressentNoAsync(interessentNo);
        }
        
        public string PasswordByEmail(string email) {
            return base.Channel.PasswordByEmail(email);
        }
        
        public System.Threading.Tasks.Task<string> PasswordByEmailAsync(string email) {
            return base.Channel.PasswordByEmailAsync(email);
        }
        
        public string PasswordByCprNo(string cprNo) {
            return base.Channel.PasswordByCprNo(cprNo);
        }
        
        public System.Threading.Tasks.Task<string> PasswordByCprNoAsync(string cprNo) {
            return base.Channel.PasswordByCprNoAsync(cprNo);
        }
        
        public string LoginResetPassword(int interessentNo) {
            return base.Channel.LoginResetPassword(interessentNo);
        }
        
        public System.Threading.Tasks.Task<string> LoginResetPasswordAsync(int interessentNo) {
            return base.Channel.LoginResetPasswordAsync(interessentNo);
        }
        
        public void LoginChangePassword(int interessentNo, string newPassword, string oldPassword) {
            base.Channel.LoginChangePassword(interessentNo, newPassword, oldPassword);
        }
        
        public System.Threading.Tasks.Task LoginChangePasswordAsync(int interessentNo, string newPassword, string oldPassword) {
            return base.Channel.LoginChangePasswordAsync(interessentNo, newPassword, oldPassword);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Login[] LoginGetUserLoginsByEmail(string email) {
            return base.Channel.LoginGetUserLoginsByEmail(email);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login[]> LoginGetUserLoginsByEmailAsync(string email) {
            return base.Channel.LoginGetUserLoginsByEmailAsync(email);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Login[] LoginGetUserLoginsByCprNo(System.DateTime birthday, string serialNo) {
            return base.Channel.LoginGetUserLoginsByCprNo(birthday, serialNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login[]> LoginGetUserLoginsByCprNoAsync(System.DateTime birthday, string serialNo) {
            return base.Channel.LoginGetUserLoginsByCprNoAsync(birthday, serialNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Login LoginGetUserLoginByInteressentNo(int interessentNo) {
            return base.Channel.LoginGetUserLoginByInteressentNo(interessentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Login> LoginGetUserLoginByInteressentNoAsync(int interessentNo) {
            return base.Channel.LoginGetUserLoginByInteressentNoAsync(interessentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Offer[] OfferGetList(short memberCompanyNo, decimal memberNo, System.DateTime from, System.DateTime to, RestEgBoligHeldinTest.EgBoligService.OfferState state, int max) {
            return base.Channel.OfferGetList(memberCompanyNo, memberNo, from, to, state, max);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Offer[]> OfferGetListAsync(short memberCompanyNo, decimal memberNo, System.DateTime from, System.DateTime to, RestEgBoligHeldinTest.EgBoligService.OfferState state, int max) {
            return base.Channel.OfferGetListAsync(memberCompanyNo, memberNo, from, to, state, max);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Offer[] OfferGetListWithoutTenancies(short memberCompanyNo, decimal memberNo, System.DateTime from, System.DateTime to, RestEgBoligHeldinTest.EgBoligService.OfferState state, int max) {
            return base.Channel.OfferGetListWithoutTenancies(memberCompanyNo, memberNo, from, to, state, max);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Offer[]> OfferGetListWithoutTenanciesAsync(short memberCompanyNo, decimal memberNo, System.DateTime from, System.DateTime to, RestEgBoligHeldinTest.EgBoligService.OfferState state, int max) {
            return base.Channel.OfferGetListWithoutTenanciesAsync(memberCompanyNo, memberNo, from, to, state, max);
        }
        
        public void OfferUpdate(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.DateTime offerDate, string priorityNo, string priorityXNo, short memberCompanyNo, decimal memberNo, RestEgBoligHeldinTest.EgBoligService.OfferAnswer answer, string comment) {
            base.Channel.OfferUpdate(companyNo, departmentNo, tenancyNo, tenantNo, offerDate, priorityNo, priorityXNo, memberCompanyNo, memberNo, answer, comment);
        }
        
        public System.Threading.Tasks.Task OfferUpdateAsync(short companyNo, short departmentNo, short tenancyNo, byte tenantNo, System.DateTime offerDate, string priorityNo, string priorityXNo, short memberCompanyNo, decimal memberNo, RestEgBoligHeldinTest.EgBoligService.OfferAnswer answer, string comment) {
            return base.Channel.OfferUpdateAsync(companyNo, departmentNo, tenancyNo, tenantNo, offerDate, priorityNo, priorityXNo, memberCompanyNo, memberNo, answer, comment);
        }
        
        public byte[] OfferGetDocument(RestEgBoligHeldinTest.EgBoligService.Offer offer, int chunkNo, int chunkSize) {
            return base.Channel.OfferGetDocument(offer, chunkNo, chunkSize);
        }
        
        public System.Threading.Tasks.Task<byte[]> OfferGetDocumentAsync(RestEgBoligHeldinTest.EgBoligService.Offer offer, int chunkNo, int chunkSize) {
            return base.Channel.OfferGetDocumentAsync(offer, chunkNo, chunkSize);
        }
        
        public int OfferGetNumberOfAccepts(RestEgBoligHeldinTest.EgBoligService.Offer offer) {
            return base.Channel.OfferGetNumberOfAccepts(offer);
        }
        
        public System.Threading.Tasks.Task<int> OfferGetNumberOfAcceptsAsync(RestEgBoligHeldinTest.EgBoligService.Offer offer) {
            return base.Channel.OfferGetNumberOfAcceptsAsync(offer);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WaitList[] WaitListGetList(short memberCompany, decimal memberNo) {
            return base.Channel.WaitListGetList(memberCompany, memberNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WaitList[]> WaitListGetListAsync(short memberCompany, decimal memberNo) {
            return base.Channel.WaitListGetListAsync(memberCompany, memberNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WaitList[] WaitListGetListWithoutTenancies(short memberCompany, decimal memberNo) {
            return base.Channel.WaitListGetListWithoutTenancies(memberCompany, memberNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WaitList[]> WaitListGetListWithoutTenanciesAsync(short memberCompany, decimal memberNo) {
            return base.Channel.WaitListGetListWithoutTenanciesAsync(memberCompany, memberNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WaitTime[] WaitTimeGetList() {
            return base.Channel.WaitTimeGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WaitTime[]> WaitTimeGetListAsync() {
            return base.Channel.WaitTimeGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WaitTime[] WaitTimeGetListByDepartment(int companyNo, int departmentNo) {
            return base.Channel.WaitTimeGetListByDepartment(companyNo, departmentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WaitTime[]> WaitTimeGetListByDepartmentAsync(int companyNo, int departmentNo) {
            return base.Channel.WaitTimeGetListByDepartmentAsync(companyNo, departmentNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WaitTime[] WaitTimeGetListByTypes(int companyNo, int departmentNo, int apartmentTypeCode, int tenancyTypeCode, int rooms) {
            return base.Channel.WaitTimeGetListByTypes(companyNo, departmentNo, apartmentTypeCode, tenancyTypeCode, rooms);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WaitTime[]> WaitTimeGetListByTypesAsync(int companyNo, int departmentNo, int apartmentTypeCode, int tenancyTypeCode, int rooms) {
            return base.Channel.WaitTimeGetListByTypesAsync(companyNo, departmentNo, apartmentTypeCode, tenancyTypeCode, rooms);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WaitTimeType[] WaitTimeTypeGetList() {
            return base.Channel.WaitTimeTypeGetList();
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WaitTimeType[]> WaitTimeTypeGetListAsync() {
            return base.Channel.WaitTimeTypeGetListAsync();
        }
        
        public RestEgBoligHeldinTest.EgBoligService.WaitTimeStatistics[] WaitTimeGetStatistics(System.Nullable<int> companyNo, System.Nullable<int> departmentNo, System.Nullable<int> apartmentTypeCode, System.Nullable<int> tenancyTypeCode, System.Nullable<int> rooms, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.WaitTimeGetStatistics(companyNo, departmentNo, apartmentTypeCode, tenancyTypeCode, rooms, from, to);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.WaitTimeStatistics[]> WaitTimeGetStatisticsAsync(System.Nullable<int> companyNo, System.Nullable<int> departmentNo, System.Nullable<int> apartmentTypeCode, System.Nullable<int> tenancyTypeCode, System.Nullable<int> rooms, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to) {
            return base.Channel.WaitTimeGetStatisticsAsync(companyNo, departmentNo, apartmentTypeCode, tenancyTypeCode, rooms, from, to);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Member MemberGet(short companyNo, decimal memberNo) {
            return base.Channel.MemberGet(companyNo, memberNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Member> MemberGetAsync(short companyNo, decimal memberNo) {
            return base.Channel.MemberGetAsync(companyNo, memberNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Member[] MemberGetListByEmail(string email, System.Nullable<bool> includeDeletedMembers) {
            return base.Channel.MemberGetListByEmail(email, includeDeletedMembers);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Member[]> MemberGetListByEmailAsync(string email, System.Nullable<bool> includeDeletedMembers) {
            return base.Channel.MemberGetListByEmailAsync(email, includeDeletedMembers);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Member[] MemberGetListByCprNo(string cprNo, System.Nullable<bool> includeDeletedMembers) {
            return base.Channel.MemberGetListByCprNo(cprNo, includeDeletedMembers);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Member[]> MemberGetListByCprNoAsync(string cprNo, System.Nullable<bool> includeDeletedMembers) {
            return base.Channel.MemberGetListByCprNoAsync(cprNo, includeDeletedMembers);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Member[] MemberGetListByInteressentNo(int interessentNo, System.Nullable<bool> includeDeletedMembers) {
            return base.Channel.MemberGetListByInteressentNo(interessentNo, includeDeletedMembers);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Member[]> MemberGetListByInteressentNoAsync(int interessentNo, System.Nullable<bool> includeDeletedMembers) {
            return base.Channel.MemberGetListByInteressentNoAsync(interessentNo, includeDeletedMembers);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Member[] MemberGetListByWishParameters(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, System.Nullable<byte> numberOfRooms, System.Nullable<short> tenancyType) {
            return base.Channel.MemberGetListByWishParameters(companyNo, departmentNo, numberOfRooms, tenancyType);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Member[]> MemberGetListByWishParametersAsync(System.Nullable<short> companyNo, System.Nullable<short> departmentNo, System.Nullable<byte> numberOfRooms, System.Nullable<short> tenancyType) {
            return base.Channel.MemberGetListByWishParametersAsync(companyNo, departmentNo, numberOfRooms, tenancyType);
        }
        
        public void MemberUpdate(RestEgBoligHeldinTest.EgBoligService.Member member) {
            base.Channel.MemberUpdate(member);
        }
        
        public System.Threading.Tasks.Task MemberUpdateAsync(RestEgBoligHeldinTest.EgBoligService.Member member) {
            return base.Channel.MemberUpdateAsync(member);
        }
        
        public void MemberUpdateCprNo(int interessentNo, string cprNo) {
            base.Channel.MemberUpdateCprNo(interessentNo, cprNo);
        }
        
        public System.Threading.Tasks.Task MemberUpdateCprNoAsync(int interessentNo, string cprNo) {
            return base.Channel.MemberUpdateCprNoAsync(interessentNo, cprNo);
        }
        
        public void MemberUpdatePartner(short memberCompanyNo, decimal memberNo, string name, System.Nullable<int> cpr62, System.Nullable<short> cpr42) {
            base.Channel.MemberUpdatePartner(memberCompanyNo, memberNo, name, cpr62, cpr42);
        }
        
        public System.Threading.Tasks.Task MemberUpdatePartnerAsync(short memberCompanyNo, decimal memberNo, string name, System.Nullable<int> cpr62, System.Nullable<short> cpr42) {
            return base.Channel.MemberUpdatePartnerAsync(memberCompanyNo, memberNo, name, cpr62, cpr42);
        }
        
        public void MemberUpdateCriterias(RestEgBoligHeldinTest.EgBoligService.Member member) {
            base.Channel.MemberUpdateCriterias(member);
        }
        
        public System.Threading.Tasks.Task MemberUpdateCriteriasAsync(RestEgBoligHeldinTest.EgBoligService.Member member) {
            return base.Channel.MemberUpdateCriteriasAsync(member);
        }
        
        public void MemberUpdateEducation(RestEgBoligHeldinTest.EgBoligService.Member member) {
            base.Channel.MemberUpdateEducation(member);
        }
        
        public System.Threading.Tasks.Task MemberUpdateEducationAsync(RestEgBoligHeldinTest.EgBoligService.Member member) {
            return base.Channel.MemberUpdateEducationAsync(member);
        }
        
        public void MemberUpdateResidence(RestEgBoligHeldinTest.EgBoligService.Member member) {
            base.Channel.MemberUpdateResidence(member);
        }
        
        public System.Threading.Tasks.Task MemberUpdateResidenceAsync(RestEgBoligHeldinTest.EgBoligService.Member member) {
            return base.Channel.MemberUpdateResidenceAsync(member);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.ValidationResult MemberValidateNewMember(RestEgBoligHeldinTest.EgBoligService.Member member) {
            return base.Channel.MemberValidateNewMember(member);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.ValidationResult> MemberValidateNewMemberAsync(RestEgBoligHeldinTest.EgBoligService.Member member) {
            return base.Channel.MemberValidateNewMemberAsync(member);
        }
        
        public int MemberGetNumberOfMembersWithSpecifiedFirstnameAndBirthdate(string name, System.DateTime birthdate) {
            return base.Channel.MemberGetNumberOfMembersWithSpecifiedFirstnameAndBirthdate(name, birthdate);
        }
        
        public System.Threading.Tasks.Task<int> MemberGetNumberOfMembersWithSpecifiedFirstnameAndBirthdateAsync(string name, System.DateTime birthdate) {
            return base.Channel.MemberGetNumberOfMembersWithSpecifiedFirstnameAndBirthdateAsync(name, birthdate);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Membership[] MembershipGetList(short memberCompanyNo, decimal memberNo, System.Nullable<bool> includeDeletedMemberships) {
            return base.Channel.MembershipGetList(memberCompanyNo, memberNo, includeDeletedMemberships);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Membership[]> MembershipGetListAsync(short memberCompanyNo, decimal memberNo, System.Nullable<bool> includeDeletedMemberships) {
            return base.Channel.MembershipGetListAsync(memberCompanyNo, memberNo, includeDeletedMemberships);
        }
        
        public void MembershipSuspendMembership(RestEgBoligHeldinTest.EgBoligService.Membership membership) {
            base.Channel.MembershipSuspendMembership(membership);
        }
        
        public System.Threading.Tasks.Task MembershipSuspendMembershipAsync(RestEgBoligHeldinTest.EgBoligService.Membership membership) {
            return base.Channel.MembershipSuspendMembershipAsync(membership);
        }
        
        public void MembershipDeleteMembership(RestEgBoligHeldinTest.EgBoligService.Membership membership) {
            base.Channel.MembershipDeleteMembership(membership);
        }
        
        public System.Threading.Tasks.Task MembershipDeleteMembershipAsync(RestEgBoligHeldinTest.EgBoligService.Membership membership) {
            return base.Channel.MembershipDeleteMembershipAsync(membership);
        }
        
        public void MembershipActivateMembership(RestEgBoligHeldinTest.EgBoligService.Membership membership) {
            base.Channel.MembershipActivateMembership(membership);
        }
        
        public System.Threading.Tasks.Task MembershipActivateMembershipAsync(RestEgBoligHeldinTest.EgBoligService.Membership membership) {
            return base.Channel.MembershipActivateMembershipAsync(membership);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.BankAccountInformation MemberGetBankAccountInformation(int interessentNo) {
            return base.Channel.MemberGetBankAccountInformation(interessentNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.BankAccountInformation> MemberGetBankAccountInformationAsync(int interessentNo) {
            return base.Channel.MemberGetBankAccountInformationAsync(interessentNo);
        }
        
        public void MemberUpdateBankAccountInformation(RestEgBoligHeldinTest.EgBoligService.BankAccountInformation bankAccountInformation) {
            base.Channel.MemberUpdateBankAccountInformation(bankAccountInformation);
        }
        
        public System.Threading.Tasks.Task MemberUpdateBankAccountInformationAsync(RestEgBoligHeldinTest.EgBoligService.BankAccountInformation bankAccountInformation) {
            return base.Channel.MemberUpdateBankAccountInformationAsync(bankAccountInformation);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Office[] GetOfficeByDepartment(short companyNo, short departmentNo, string roleType) {
            return base.Channel.GetOfficeByDepartment(companyNo, departmentNo, roleType);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Office[]> GetOfficeByDepartmentAsync(short companyNo, short departmentNo, string roleType) {
            return base.Channel.GetOfficeByDepartmentAsync(companyNo, departmentNo, roleType);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Office[] GetOfficeByCompany(short companyNo, string roleType) {
            return base.Channel.GetOfficeByCompany(companyNo, roleType);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Office[]> GetOfficeByCompanyAsync(short companyNo, string roleType) {
            return base.Channel.GetOfficeByCompanyAsync(companyNo, roleType);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Office[] OfficeByDepartment(short companyNo, short departmentNo, string roleType, string role) {
            return base.Channel.OfficeByDepartment(companyNo, departmentNo, roleType, role);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Office[]> OfficeByDepartmentAsync(short companyNo, short departmentNo, string roleType, string role) {
            return base.Channel.OfficeByDepartmentAsync(companyNo, departmentNo, roleType, role);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Office[] OfficeByCompany(short companyNo, string roleType, string role) {
            return base.Channel.OfficeByCompany(companyNo, roleType, role);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Office[]> OfficeByCompanyAsync(short companyNo, string roleType, string role) {
            return base.Channel.OfficeByCompanyAsync(companyNo, roleType, role);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Wish[] WishGetList(short memberCompanyNo, decimal memberNo) {
            return base.Channel.WishGetList(memberCompanyNo, memberNo);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Wish[]> WishGetListAsync(short memberCompanyNo, decimal memberNo) {
            return base.Channel.WishGetListAsync(memberCompanyNo, memberNo);
        }
        
        public RestEgBoligHeldinTest.EgBoligService.Wish[] WishGetListByCompanyNo(short memberCompanyNo, decimal memberNo, short companyNoMin) {
            return base.Channel.WishGetListByCompanyNo(memberCompanyNo, memberNo, companyNoMin);
        }
        
        public System.Threading.Tasks.Task<RestEgBoligHeldinTest.EgBoligService.Wish[]> WishGetListByCompanyNoAsync(short memberCompanyNo, decimal memberNo, short companyNoMin) {
            return base.Channel.WishGetListByCompanyNoAsync(memberCompanyNo, memberNo, companyNoMin);
        }
    }
}
